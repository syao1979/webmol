{"version":3,"sources":["node_modules/process/browser.js","node_modules/three/three.js","js/OrbitControls.js","node_modules/stats-js/build/stats.min.js","js/molbase.js","node_modules/parse-pdb/index.js","js/model.js","js/tree.js","js/mouse.js","js/utils.js","js/mygl2.js","js/border/border.js","js/tree/jquery.ztree.core.js","js/index.js"],"names":["cachedSetTimeout","cachedClearTimeout","process","module","exports","defaultSetTimout","Error","defaultClearTimeout","runTimeout","fun","setTimeout","e","call","runClearTimeout","marker","clearTimeout","currentQueue","queue","draining","queueIndex","cleanUpNextTick","length","concat","drainQueue","timeout","len","run","Item","array","noop","nextTick","args","Array","arguments","i","push","prototype","apply","title","env","argv","version","versions","on","addListener","once","off","removeListener","removeAllListeners","emit","prependListener","prependOnceListener","listeners","name","binding","cwd","chdir","dir","umask","THREE","OrbitControls","object","domElement","undefined","document","enabled","target","Vector3","center","noZoom","zoomSpeed","minDistance","maxDistance","Infinity","noRotate","rotateSpeed","noPan","keyPanSpeed","autoRotate","autoRotateSpeed","minPolarAngle","maxPolarAngle","Math","PI","noKeys","keys","LEFT","UP","RIGHT","BOTTOM","scope","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","phiDelta","thetaDelta","scale","pan","lastPosition","STATE","NONE","ROTATE","DOLLY","PAN","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","state","changeEvent","type","getAutoRotationAngle","getZoomScale","pow","onMouseMove","event","preventDefault","element","body","set","clientX","clientY","subVectors","rotateLeft","x","clientWidth","rotateUp","y","clientHeight","copy","dollyIn","dollyOut","update","onMouseUp","removeEventListener","onMouseWheel","delta","wheelDelta","detail","angle","panLeft","distance","panOffset","te","matrix","elements","multiplyScalar","add","panUp","fov","position","targetDistance","clone","sub","tan","top","right","left","bottom","console","warn","dollyScale","offset","theta","atan2","z","phi","sqrt","max","min","radius","sin","cos","lookAt","distanceTo","dispatchEvent","addEventListener","onMouseDown","button","onKeyDown","needUpdate","keyCode","touchstart","touches","pageX","pageY","dx","dy","touchend","touchmove","stopPropagation","Object","create","EventDispatcher","Atom","data","molecule","group","resName","chain","chainID","OK","quality","visible","size","VDWR","ATOM_NUMBER","color","COLOR","material","MeshLambertMaterial","opacity","transparent","mesh","Mesh","MODEL","toArray","wrapupGLMesh","obj","level","model","molsize","qual","toLowerCase","indexOf","atomlist","_model_qual","ball","SUPER_HIGH","SphereGeometry","HIGH","NORMAL","LOW","SUPER_LOW","ATOM_CPK","H","C","O","N","P","S","F","NA","CL","Bond","cfg","from","pair","to","geometry","BufferGeometry","lineMaterial","LineBasicMaterial","vertexColors","VertexColors","positions","Float32Array","colors","Color","addAttribute","BufferAttribute","line","Line","pt1","pt2","ptm","center_position","n","v1","v2","atom","matename","orientation","edgeGeometry","MeshPhongMaterial","applyMatrix","geotype","rotm","Matrix4","geo","Object3D","up","multiply","vec","c1","_cylinder","c2","mate","steps","phase","vertices","segments","frequency","l","makeColorGradient","r","g","b","redFrequency","grnFrequency","bluFrequency","phase2","phase3","red","green","blue","parseInt","_byte2Hex","String","substr","in","afrom","ato","map","a","atomicNum","sort","atoms","color_divide_line","color_gradient_line","cylinder","treeId","BOND_TYPE","STICK_SIZE","LINE_SIZE","LINE_FACES","CONE","CylinderGeometry","STICK","LINE","bondto","anums","key","MModel","parsePdb","require","readFileSync","mol","status","datastr","datatype","mname","acnt","mjson","log","forEach","_addobj","alist","o","bond","m","children","entries","mobj","cobj","gobj","atm","mid","id","pId","open","cid","gid","centerize","xmax","ymax","zmax","xmin","ymin","zmin","xm","ym","zm","IndentedCollapsibleTree","divid","ajson","margin","divObj","$","width","height","css","barHeight","barWidth","duration","tree","d3","nodeSize","root","hierarchy","each","d","zoomListener","zoom","scaleExtent","translateExtent","zoomed","x0","y0","svg","select","append","view","attr","transform","zoomIdentity","translate","parent","_children","_this","collapse","source","nodes","nodesSort","eachBefore","links","slice","transition","node","selectAll","nodeEnter","enter","thisGroup","text","split","trim","style","nodeUpdate","merge","nodeExit","exit","remove","link","linkEnter","insert","connector","mouseTarget","targ","window","srcElement","nodeType","parentNode","mousePositionDocument","posx","posy","scrollLeft","documentElement","scrollTop","mousePositionElement","mousePosDoc","targetPos","findPos","curleft","curtop","offsetParent","offsetLeft","offsetTop","appendInfo","txt","debug","DEBUG","ctxt","val","psconsole","scrollHeight","treeview","autoOpen","dragAndDrop","MyGL2","viewid","Raycaster","getElementById","initSize","scene","Scene","fog","FogExp2","VIEW_ANGLE","ASPECT","camera","PerspectiveCamera","renderer","WebGLRenderer","antialias","setSize","setClearColor","CLEAR_COLOR","appendChild","container","createElement","onDocumentMouseDown","onDocumentMouseMove","onDocumentMouseUp","resize","onDocumentKeyDown","onDocumentKeyUp","controls","showstats","clock","Clock","stats","Stats","zIndex","AmbientLight","dirLight","DirectionalLight","normalize","plane","PlaneBufferGeometry","MeshBasicMaterial","render","requestAnimationFrame","dstr","dtype","mtype","callback","loadMol","reloadModel","meshlist","objects","clearDisplayObjects","get_gl_objects","mlist","show_tree","dispose","innerWidth","innerHeight","iSBrsize","uniforms","topColor","value","bottomColor","exponent","skyGeo","skyMat","ShaderMaterial","vertexShader","sbVertexShader","fragmentShader","sbFragmentShader","side","DoubleSide","skyMesh","mouse_relative_position","ex","ey","mouseX","mouseY","vector","unproject","raycaster","intersects","intersectObjects","random_color","hitObj","tmp","intersectObject","point","toggle_highlight","selection","which","shiftdown","shiftKey","html","fn","zTree","init","simpleData","enable","get_tree_data2","pick_cnt","collect_mesh","update_selected","pick_level","lname","ori_color","setHex","pos","getDelta","aspect","updateProjectionMatrix","co","lor","floor","random","BorderLayout","onStateChanged","dragging","area","north","querySelector","south","west","east","setInitSize","offsetHeight","offsetWidth","redraw","addDrag","cursor","origSize","origY","origX","maxSize","minSize","dragEnded","prop","elem","unitToPx","getAttribute","endsWith","s","end","substring","setSizeAttr","paddingTop","paddingBottom","paddingLeft","paddingRight","dragSide","sizeFn","classList","contains","drag","className","assign","borderWidth","getComputedStyle","skey","capital","bind","charAt","toUpperCase","listener","getSize","centerw","centerh","settings","roots","caches","_consts","BUTTON","LEVEL","ICO_LOADING","SWITCH","NAME","NODECREATED","CLICK","EXPAND","COLLAPSE","ASYNC_SUCCESS","ASYNC_ERROR","REMOVE","SELECTED","UNSELECTED","A","ICON","SPAN","UL","ROOT","ROOTS","CENTER","NOLINE","folder","OPEN","CLOSE","DOCU","CURSELECTED","_setting","treeObj","addDiyDom","autoCancelSelected","dblClickExpand","expandSpeed","fontCss","nameIsHTML","selectedMulti","showIcon","showLine","showTitle","txtSelectedEnable","isParent","url","icon","idKey","pIdKey","rootPId","keep","leaf","async","contentType","dataType","headers","xhrFields","autoParam","otherParam","dataFilter","beforeAsync","beforeClick","beforeDblClick","beforeRightClick","beforeMouseDown","beforeMouseUp","beforeExpand","beforeCollapse","beforeRemove","onAsyncError","onAsyncSuccess","onNodeCreated","onClick","onDblClick","onRightClick","onExpand","onCollapse","onRemove","_initRoot","setting","getRoot","setRoot","nodeChildren","expandTriggerFlag","curSelectedList","noSelection","createdNodes","zId","_ver","Date","getTime","_initCache","c","getCache","setCache","doms","_bindEvent","consts","tools","srcEvent","clickFlag","msg","XMLHttpRequest","textStatus","errorThrown","treeNode","onSelected","onUnSelected","_unbindEvent","unbind","_eventProxy","getSetting","tId","nodeEventType","treeEventType","nodeEventCallback","treeEventCallback","eqs","tagName","getNodeMainDom","getMDom","attrName","getNodeCache","nodeIsParent","handler","onSwitchNode","onClickNode","onZTreeMousedown","onZTreeMouseup","onZTreeDblclick","onZTreeContextmenu","proxyResult","stop","_initNode","isFirstNode","isLastNode","openFlag","parentTId","isArray","zAsync","getParentNode","getPreNode","getNextNode","getIndex","getNodeIndex","getPath","getNodePath","isAjaxing","fixPIdKeyValue","_init","proxys","beforeA","afterA","innerBeforeA","innerAfterA","zTreeTools","addNodeCache","getNodeCacheId","lastIndexOf","addAfterA","addBeforeA","addInnerAfterA","addInnerBeforeA","addInitBind","bindEvent","addInitUnBind","unbindEvent","addInitCache","initCache","addInitNode","initNode","addInitProxy","initProxy","isFirst","splice","addInitRoot","initRoot","addNodesData","index","params","setNodeLineIcos","addSelectedNode","isSelectedNode","addCreatedNode","addZTreeTools","exSetting","extend","getAfterA","j","getBeforeA","getInnerAfterA","getInnerBeforeA","p","getNodeByParam","path","getNodes","getNodesByParam","result","getNodesByParamFuzzy","getNodesByFilter","filter","isSingle","invokeParam","tmpResult","getRoots","getSettings","getZTreeTools","treeTools","preNode","nextNode","newChildren","newIsParent","nodeName","newName","nodeTitle","removeNodeCache","removeSelectedNode","trigger","cache","setZTreeTools","transformToArrayFormat","_do","_node","transformTozTreeFormat","sNodes","parentKey","tmpMap","bindTree","eventParam","onSelectStart","proxy","unbindTree","doProxy","results","uCanDo","switchNode","ctrlKey","metaKey","cancelPreSelectedNode","selectNode","originalEvent","param","defaultValue","zt","canAsync","str1","str2","arr","toString","isElement","HTMLElement","exp","get","ownerDocument","curDom","targetExpr","parentsUntil","isChildOrSelf","dom","parentId","closest","addNodes","newNodes","isSilent","target_switchObj","$$","target_icoObj","target_ulObj","replaceSwitchClass","replaceIcoClass","createNodes","expandCollapseParentNode","appendNodes","initFlag","tmpPNode","tmpPChild","childHtml","makeDOMNodeMainBefore","makeDOMNodeLine","makeDOMNodeNameBefore","makeDOMNodeIcon","makeDOMNodeNameAfter","makeUlHtml","join","makeDOMNodeMainAfter","appendParentULDom","nObj","ulObj","asyncNode","icoObj","tmpParam","pKey","spKey","_tmpV","ajax","JSON","stringify","success","eval","err","error","excludeNode","list","removeClass","createNodeCallback","shift","zTreeHtml","parentObj","nextObj","before","destroy","empty","expandCollapseNode","expandFlag","animateFlag","_callback","switchObj","iconOpen","iconClose","makeNodeIcoStyle","show","slideDown","slideUp","hide","expandCollapseSonNode","treeNodes","selfAnimateSign","nameStr","replace","makeNodeIcoClass","makeNodeLineClass","makeNodeUrl","fontcss","makeNodeFontCss","fontStyle","f","click","makeNodeTarget","icoCss","iconSkin","icoStyle","lineClass","makeNodeLineClassEx","urlKey","content","makeUlLineClass","removeChildNodes","tmp_switchObj","tmp_icoObj","scrollIntoView","Element","scrollIntoViewIfNeeded","centerIfNeeded","makeRange","start","coverRange","inner","outer","makePoint","dX","dY","absolute","pt","origin","extent","clientLeft","clientTop","contRect","getBoundingClientRect","findMeRect","setFirstNode","setLastNode","removeNode","tmp_ulObj","childLength","newLast","tmp_first_switchObj","tmpName","tmpList","removeAttr","addFlag","addClass","setNodeFontCss","aObj","ulLine","setNodeName","setNodeTarget","setNodeUrl","_z","getZTreeObj","zSetting","zNodes","maxHeight","isNaN","xNewNodes","addCallback","cancelSelectedNode","expandAll","expandNode","sonSign","focus","callbackFlag","showNodeFocus","getNodeByTId","getSelectedNodes","reAsyncChildNodesPromise","reloadType","promise","Promise","resolve","reject","reAsyncChildNodes","isRoot","refresh","blur","transformTozTreeNodes","simpleNodes","transformToArray","updateNode","checkTypeFlag","jQuery","GL","change_display_model","load_demo_molecule","loadedMoleculeName","handleFileSelect","evt","files","FileReader","onload","contents","toks","ftype","alert","readAsText","opt","innerHTML","insertBefore","firstChild","selectedIndex","glviewsize","centerW","centerH","setStatsPosition","querySelectorAll"],"mappings":"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A,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EACA,EAAA,IAAA,EAAA,EACA,EAAA,GAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAEA,GAAA,QAAA,EAAA,MAAA,CAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,IAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAEA,GAAA,QAAA,EAAA,MAAA,CAEA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAEA,EAAA,IAAA,EAAA,EACA,EAAA,GAAA,EACA,EAAA,IAAA,EAAA,OAEA,GAAA,QAAA,EAAA,MAAA,CAEA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAEA,EAAA,GAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAEA,EAAA,IAAA,EACA,EAAA,GAAA,EAAA,EACA,EAAA,IAAA,EAAA,OAEA,GAAA,QAAA,EAAA,MAAA,CAEA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,EAAA,GAA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AAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,GAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EACA,EAAA,IAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAAA,EAEA,IAAA,EAAA,EAAA,EAAA,GAAA,EAAA,EAAA,G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","file":"js.b94da639.js","sourceRoot":"..","sourcesContent":["// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","var self = self || {};// File:src/Three.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nvar THREE = { REVISION: '71' };\r\n\r\n// browserify support\r\n\r\nif ( typeof module === 'object' ) {\r\n\r\n\tmodule.exports = THREE;\r\n\r\n}\r\n\r\n// polyfills\r\n\r\nif ( Math.sign === undefined ) {\r\n\r\n\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\r\n\r\n\tMath.sign = function ( x ) {\r\n\r\n\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : +x;\r\n\r\n\t};\r\n\r\n}\r\n\r\n\r\n// set the default log handlers\r\nTHREE.log = function() { console.log.apply( console, arguments ); }\r\nTHREE.warn = function() { console.warn.apply( console, arguments ); }\r\nTHREE.error = function() { console.error.apply( console, arguments ); }\r\n\r\n\r\n// https://developer.mozilla.org/en-US/docs/Web/API/MouseEvent.button\r\n\r\nTHREE.MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2 };\r\n\r\n// GL STATE CONSTANTS\r\n\r\nTHREE.CullFaceNone = 0;\r\nTHREE.CullFaceBack = 1;\r\nTHREE.CullFaceFront = 2;\r\nTHREE.CullFaceFrontBack = 3;\r\n\r\nTHREE.FrontFaceDirectionCW = 0;\r\nTHREE.FrontFaceDirectionCCW = 1;\r\n\r\n// SHADOWING TYPES\r\n\r\nTHREE.BasicShadowMap = 0;\r\nTHREE.PCFShadowMap = 1;\r\nTHREE.PCFSoftShadowMap = 2;\r\n\r\n// MATERIAL CONSTANTS\r\n\r\n// side\r\n\r\nTHREE.FrontSide = 0;\r\nTHREE.BackSide = 1;\r\nTHREE.DoubleSide = 2;\r\n\r\n// shading\r\n\r\nTHREE.NoShading = 0;\r\nTHREE.FlatShading = 1;\r\nTHREE.SmoothShading = 2;\r\n\r\n// colors\r\n\r\nTHREE.NoColors = 0;\r\nTHREE.FaceColors = 1;\r\nTHREE.VertexColors = 2;\r\n\r\n// blending modes\r\n\r\nTHREE.NoBlending = 0;\r\nTHREE.NormalBlending = 1;\r\nTHREE.AdditiveBlending = 2;\r\nTHREE.SubtractiveBlending = 3;\r\nTHREE.MultiplyBlending = 4;\r\nTHREE.CustomBlending = 5;\r\n\r\n// custom blending equations\r\n// (numbers start from 100 not to clash with other\r\n//  mappings to OpenGL constants defined in Texture.js)\r\n\r\nTHREE.AddEquation = 100;\r\nTHREE.SubtractEquation = 101;\r\nTHREE.ReverseSubtractEquation = 102;\r\nTHREE.MinEquation = 103;\r\nTHREE.MaxEquation = 104;\r\n\r\n// custom blending destination factors\r\n\r\nTHREE.ZeroFactor = 200;\r\nTHREE.OneFactor = 201;\r\nTHREE.SrcColorFactor = 202;\r\nTHREE.OneMinusSrcColorFactor = 203;\r\nTHREE.SrcAlphaFactor = 204;\r\nTHREE.OneMinusSrcAlphaFactor = 205;\r\nTHREE.DstAlphaFactor = 206;\r\nTHREE.OneMinusDstAlphaFactor = 207;\r\n\r\n// custom blending source factors\r\n\r\n//THREE.ZeroFactor = 200;\r\n//THREE.OneFactor = 201;\r\n//THREE.SrcAlphaFactor = 204;\r\n//THREE.OneMinusSrcAlphaFactor = 205;\r\n//THREE.DstAlphaFactor = 206;\r\n//THREE.OneMinusDstAlphaFactor = 207;\r\nTHREE.DstColorFactor = 208;\r\nTHREE.OneMinusDstColorFactor = 209;\r\nTHREE.SrcAlphaSaturateFactor = 210;\r\n\r\n\r\n// TEXTURE CONSTANTS\r\n\r\nTHREE.MultiplyOperation = 0;\r\nTHREE.MixOperation = 1;\r\nTHREE.AddOperation = 2;\r\n\r\n// Mapping modes\r\n\r\nTHREE.UVMapping = 300;\r\n\r\nTHREE.CubeReflectionMapping = 301;\r\nTHREE.CubeRefractionMapping = 302;\r\n\r\nTHREE.EquirectangularReflectionMapping = 303;\r\nTHREE.EquirectangularRefractionMapping = 304;\r\n\r\nTHREE.SphericalReflectionMapping = 305;\r\n\r\n// Wrapping modes\r\n\r\nTHREE.RepeatWrapping = 1000;\r\nTHREE.ClampToEdgeWrapping = 1001;\r\nTHREE.MirroredRepeatWrapping = 1002;\r\n\r\n// Filters\r\n\r\nTHREE.NearestFilter = 1003;\r\nTHREE.NearestMipMapNearestFilter = 1004;\r\nTHREE.NearestMipMapLinearFilter = 1005;\r\nTHREE.LinearFilter = 1006;\r\nTHREE.LinearMipMapNearestFilter = 1007;\r\nTHREE.LinearMipMapLinearFilter = 1008;\r\n\r\n// Data types\r\n\r\nTHREE.UnsignedByteType = 1009;\r\nTHREE.ByteType = 1010;\r\nTHREE.ShortType = 1011;\r\nTHREE.UnsignedShortType = 1012;\r\nTHREE.IntType = 1013;\r\nTHREE.UnsignedIntType = 1014;\r\nTHREE.FloatType = 1015;\r\nTHREE.HalfFloatType = 1025;\r\n\r\n// Pixel types\r\n\r\n//THREE.UnsignedByteType = 1009;\r\nTHREE.UnsignedShort4444Type = 1016;\r\nTHREE.UnsignedShort5551Type = 1017;\r\nTHREE.UnsignedShort565Type = 1018;\r\n\r\n// Pixel formats\r\n\r\nTHREE.AlphaFormat = 1019;\r\nTHREE.RGBFormat = 1020;\r\nTHREE.RGBAFormat = 1021;\r\nTHREE.LuminanceFormat = 1022;\r\nTHREE.LuminanceAlphaFormat = 1023;\r\n// THREE.RGBEFormat handled as THREE.RGBAFormat in shaders\r\nTHREE.RGBEFormat = THREE.RGBAFormat; //1024;\r\n\r\n// DDS / ST3C Compressed texture formats\r\n\r\nTHREE.RGB_S3TC_DXT1_Format = 2001;\r\nTHREE.RGBA_S3TC_DXT1_Format = 2002;\r\nTHREE.RGBA_S3TC_DXT3_Format = 2003;\r\nTHREE.RGBA_S3TC_DXT5_Format = 2004;\r\n\r\n\r\n// PVRTC compressed texture formats\r\n\r\nTHREE.RGB_PVRTC_4BPPV1_Format = 2100;\r\nTHREE.RGB_PVRTC_2BPPV1_Format = 2101;\r\nTHREE.RGBA_PVRTC_4BPPV1_Format = 2102;\r\nTHREE.RGBA_PVRTC_2BPPV1_Format = 2103;\r\n\r\n\r\n// DEPRECATED\r\n\r\nTHREE.Projector = function () {\r\n\r\n\tTHREE.error( 'THREE.Projector has been moved to /examples/js/renderers/Projector.js.' );\r\n\r\n\tthis.projectVector = function ( vector, camera ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Projector: .projectVector() is now vector.project().' );\r\n\t\tvector.project( camera );\r\n\r\n\t};\r\n\r\n\tthis.unprojectVector = function ( vector, camera ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Projector: .unprojectVector() is now vector.unproject().' );\r\n\t\tvector.unproject( camera );\r\n\r\n\t};\r\n\r\n\tthis.pickingRay = function ( vector, camera ) {\r\n\r\n\t\tTHREE.error( 'THREE.Projector: .pickingRay() is now raycaster.setFromCamera().' );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CanvasRenderer = function () {\r\n\r\n\tTHREE.error( 'THREE.CanvasRenderer has been moved to /examples/js/renderers/CanvasRenderer.js' );\r\n\r\n\tthis.domElement = document.createElement( 'canvas' );\r\n\tthis.clear = function () {};\r\n\tthis.render = function () {};\r\n\tthis.setClearColor = function () {};\r\n\tthis.setSize = function () {};\r\n\r\n};\r\n\r\n// File:src/math/Color.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Color = function ( color ) {\r\n\r\n\tif ( arguments.length === 3 ) {\r\n\r\n\t\treturn this.setRGB( arguments[ 0 ], arguments[ 1 ], arguments[ 2 ] );\r\n\r\n\t}\r\n\r\n\treturn this.set( color )\r\n\r\n};\r\n\r\nTHREE.Color.prototype = {\r\n\r\n\tconstructor: THREE.Color,\r\n\r\n\tr: 1, g: 1, b: 1,\r\n\r\n\tset: function ( value ) {\r\n\r\n\t\tif ( value instanceof THREE.Color ) {\r\n\r\n\t\t\tthis.copy( value );\r\n\r\n\t\t} else if ( typeof value === 'number' ) {\r\n\r\n\t\t\tthis.setHex( value );\r\n\r\n\t\t} else if ( typeof value === 'string' ) {\r\n\r\n\t\t\tthis.setStyle( value );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHex: function ( hex ) {\r\n\r\n\t\thex = Math.floor( hex );\r\n\r\n\t\tthis.r = ( hex >> 16 & 255 ) / 255;\r\n\t\tthis.g = ( hex >> 8 & 255 ) / 255;\r\n\t\tthis.b = ( hex & 255 ) / 255;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRGB: function ( r, g, b ) {\r\n\r\n\t\tthis.r = r;\r\n\t\tthis.g = g;\r\n\t\tthis.b = b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetHSL: function ( h, s, l ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tif ( s === 0 ) {\r\n\r\n\t\t\tthis.r = this.g = this.b = l;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar hue2rgb = function ( p, q, t ) {\r\n\r\n\t\t\t\tif ( t < 0 ) t += 1;\r\n\t\t\t\tif ( t > 1 ) t -= 1;\r\n\t\t\t\tif ( t < 1 / 6 ) return p + ( q - p ) * 6 * t;\r\n\t\t\t\tif ( t < 1 / 2 ) return q;\r\n\t\t\t\tif ( t < 2 / 3 ) return p + ( q - p ) * 6 * ( 2 / 3 - t );\r\n\t\t\t\treturn p;\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\r\n\t\t\tvar q = ( 2 * l ) - p;\r\n\r\n\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\r\n\t\t\tthis.g = hue2rgb( q, p, h );\r\n\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetStyle: function ( style ) {\r\n\r\n\t\t// rgb(255,0,0)\r\n\r\n\t\tif ( /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+), ?(\\d+), ?(\\d+)\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\r\n\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\r\n\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// rgb(100%,0%,0%)\r\n\r\n\t\tif ( /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^rgb\\((\\d+)\\%, ?(\\d+)\\%, ?(\\d+)\\%\\)$/i.exec( style );\r\n\r\n\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\r\n\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\r\n\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #ff0000\r\n\r\n\t\tif ( /^\\#([0-9a-f]{6})$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f]{6})$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// #f00\r\n\r\n\t\tif ( /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.test( style ) ) {\r\n\r\n\t\t\tvar color = /^\\#([0-9a-f])([0-9a-f])([0-9a-f])$/i.exec( style );\r\n\r\n\t\t\tthis.setHex( parseInt( color[ 1 ] + color[ 1 ] + color[ 2 ] + color[ 2 ] + color[ 3 ] + color[ 3 ], 16 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\t// red\r\n\r\n\t\tif ( /^(\\w+)$/i.test( style ) ) {\r\n\r\n\t\t\tthis.setHex( THREE.ColorKeywords[ style ] );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\r\n\t},\r\n\r\n\tcopy: function ( color ) {\r\n\r\n\t\tthis.r = color.r;\r\n\t\tthis.g = color.g;\r\n\t\tthis.b = color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyGammaToLinear: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, gammaFactor );\r\n\t\tthis.g = Math.pow( color.g, gammaFactor );\r\n\t\tthis.b = Math.pow( color.b, gammaFactor );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopyLinearToGamma: function ( color, gammaFactor ) {\r\n\r\n\t\tif ( gammaFactor === undefined ) gammaFactor = 2.0;\r\n\r\n\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\r\n\r\n\t\tthis.r = Math.pow( color.r, safeInverse );\r\n\t\tthis.g = Math.pow( color.g, safeInverse );\r\n\t\tthis.b = Math.pow( color.b, safeInverse );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertGammaToLinear: function () {\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tthis.r = r * r;\r\n\t\tthis.g = g * g;\r\n\t\tthis.b = b * b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconvertLinearToGamma: function () {\r\n\r\n\t\tthis.r = Math.sqrt( this.r );\r\n\t\tthis.g = Math.sqrt( this.g );\r\n\t\tthis.b = Math.sqrt( this.b );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetHex: function () {\r\n\r\n\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\r\n\r\n\t},\r\n\r\n\tgetHexString: function () {\r\n\r\n\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\r\n\r\n\t},\r\n\r\n\tgetHSL: function ( optionalTarget ) {\r\n\r\n\t\t// h,s,l ranges are in 0.0 - 1.0\r\n\r\n\t\tvar hsl = optionalTarget || { h: 0, s: 0, l: 0 };\r\n\r\n\t\tvar r = this.r, g = this.g, b = this.b;\r\n\r\n\t\tvar max = Math.max( r, g, b );\r\n\t\tvar min = Math.min( r, g, b );\r\n\r\n\t\tvar hue, saturation;\r\n\t\tvar lightness = ( min + max ) / 2.0;\r\n\r\n\t\tif ( min === max ) {\r\n\r\n\t\t\thue = 0;\r\n\t\t\tsaturation = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar delta = max - min;\r\n\r\n\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\r\n\r\n\t\t\tswitch ( max ) {\r\n\r\n\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\r\n\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\r\n\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\r\n\r\n\t\t\t}\r\n\r\n\t\t\thue /= 6;\r\n\r\n\t\t}\r\n\r\n\t\thsl.h = hue;\r\n\t\thsl.s = saturation;\r\n\t\thsl.l = lightness;\r\n\r\n\t\treturn hsl;\r\n\r\n\t},\r\n\r\n\tgetStyle: function () {\r\n\r\n\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\r\n\r\n\t},\r\n\r\n\toffsetHSL: function ( h, s, l ) {\r\n\r\n\t\tvar hsl = this.getHSL();\r\n\r\n\t\thsl.h += h; hsl.s += s; hsl.l += l;\r\n\r\n\t\tthis.setHSL( hsl.h, hsl.s, hsl.l );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( color ) {\r\n\r\n\t\tthis.r += color.r;\r\n\t\tthis.g += color.g;\r\n\t\tthis.b += color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddColors: function ( color1, color2 ) {\r\n\r\n\t\tthis.r = color1.r + color2.r;\r\n\t\tthis.g = color1.g + color2.g;\r\n\t\tthis.b = color1.b + color2.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.r += s;\r\n\t\tthis.g += s;\r\n\t\tthis.b += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( color ) {\r\n\r\n\t\tthis.r *= color.r;\r\n\t\tthis.g *= color.g;\r\n\t\tthis.b *= color.b;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.r *= s;\r\n\t\tthis.g *= s;\r\n\t\tthis.b *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( color, alpha ) {\r\n\r\n\t\tthis.r += ( color.r - this.r ) * alpha;\r\n\t\tthis.g += ( color.g - this.g ) * alpha;\r\n\t\tthis.b += ( color.b - this.b ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( c ) {\r\n\r\n\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.r = array[ 0 ];\r\n\t\tthis.g = array[ 1 ];\r\n\t\tthis.b = array[ 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.r;\r\n\t\tarray[ offset + 1 ] = this.g;\r\n\t\tarray[ offset + 2 ] = this.b;\r\n\r\n\t\treturn array;\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Color().setRGB( this.r, this.g, this.b );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ColorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\r\n'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\r\n'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\r\n'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\r\n'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\r\n'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\r\n'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\r\n'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\r\n'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\r\n'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\r\n'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\r\n'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\r\n'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\r\n'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\r\n'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\r\n'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\r\n'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\r\n'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\r\n'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\r\n'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\r\n'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\r\n'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\r\n'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\r\n'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\r\n\r\n// File:src/math/Quaternion.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Quaternion = function ( x, y, z, w ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Quaternion.prototype = {\r\n\r\n\tconstructor: THREE.Quaternion,\r\n\r\n\t_x: 0,_y: 0, _z: 0, _w: 0,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget w () {\r\n\r\n\t\treturn this._w;\r\n\r\n\t},\r\n\r\n\tset w ( value ) {\r\n\r\n\t\tthis._w = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._w = w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( quaternion ) {\r\n\r\n\t\tthis._x = quaternion.x;\r\n\t\tthis._y = quaternion.y;\r\n\t\tthis._z = quaternion.z;\r\n\t\tthis._w = quaternion.w;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromEuler: function ( euler, update ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\t\t}\r\n\r\n\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\r\n\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\r\n\t\t//\tcontent/SpinCalc.m\r\n\r\n\t\tvar c1 = Math.cos( euler._x / 2 );\r\n\t\tvar c2 = Math.cos( euler._y / 2 );\r\n\t\tvar c3 = Math.cos( euler._z / 2 );\r\n\t\tvar s1 = Math.sin( euler._x / 2 );\r\n\t\tvar s2 = Math.sin( euler._y / 2 );\r\n\t\tvar s3 = Math.sin( euler._z / 2 );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\r\n\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\r\n\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\r\n\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\r\n\r\n\t\t}\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\r\n\r\n\t\tthis._x = axis.x * s;\r\n\t\tthis._y = axis.y * s;\r\n\t\tthis._z = axis.z * s;\r\n\t\tthis._w = Math.cos( halfAngle );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\r\n\r\n\t\t\ttrace = m11 + m22 + m33,\r\n\t\t\ts;\r\n\r\n\t\tif ( trace > 0 ) {\r\n\r\n\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\r\n\r\n\t\t\tthis._w = 0.25 / s;\r\n\t\t\tthis._x = ( m32 - m23 ) * s;\r\n\t\t\tthis._y = ( m13 - m31 ) * s;\r\n\t\t\tthis._z = ( m21 - m12 ) * s;\r\n\r\n\t\t} else if ( m11 > m22 && m11 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\r\n\r\n\t\t\tthis._w = ( m32 - m23 ) / s;\r\n\t\t\tthis._x = 0.25 * s;\r\n\t\t\tthis._y = ( m12 + m21 ) / s;\r\n\t\t\tthis._z = ( m13 + m31 ) / s;\r\n\r\n\t\t} else if ( m22 > m33 ) {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\r\n\r\n\t\t\tthis._w = ( m13 - m31 ) / s;\r\n\t\t\tthis._x = ( m12 + m21 ) / s;\r\n\t\t\tthis._y = 0.25 * s;\r\n\t\t\tthis._z = ( m23 + m32 ) / s;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\r\n\r\n\t\t\tthis._w = ( m21 - m12 ) / s;\r\n\t\t\tthis._x = ( m13 + m31 ) / s;\r\n\t\t\tthis._y = ( m23 + m32 ) / s;\r\n\t\t\tthis._z = 0.25 * s;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromUnitVectors: function () {\r\n\r\n\t\t// http://lolengine.net/blog/2014/02/24/quaternion-from-two-vectors-final\r\n\r\n\t\t// assumes direction vectors vFrom and vTo are normalized\r\n\r\n\t\tvar v1, r;\r\n\r\n\t\tvar EPS = 0.000001;\r\n\r\n\t\treturn function ( vFrom, vTo ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tr = vFrom.dot( vTo ) + 1;\r\n\r\n\t\t\tif ( r < EPS ) {\r\n\r\n\t\t\t\tr = 0;\r\n\r\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\r\n\r\n\t\t\t\t\tv1.set( - vFrom.y, vFrom.x, 0 );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv1.set( 0, - vFrom.z, vFrom.y );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tv1.crossVectors( vFrom, vTo );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis._x = v1.x;\r\n\t\t\tthis._y = v1.y;\r\n\t\t\tthis._z = v1.z;\r\n\t\t\tthis._w = r;\r\n\r\n\t\t\tthis.normalize();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tinverse: function () {\r\n\r\n\t\tthis.conjugate().normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tconjugate: function () {\r\n\r\n\t\tthis._x *= - 1;\r\n\t\tthis._y *= - 1;\r\n\t\tthis._z *= - 1;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\tvar l = this.length();\r\n\r\n\t\tif ( l === 0 ) {\r\n\r\n\t\t\tthis._x = 0;\r\n\t\t\tthis._y = 0;\r\n\t\t\tthis._z = 0;\r\n\t\t\tthis._w = 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tl = 1 / l;\r\n\r\n\t\t\tthis._x = this._x * l;\r\n\t\t\tthis._y = this._y * l;\r\n\t\t\tthis._z = this._z * l;\r\n\t\t\tthis._w = this._w * l;\r\n\r\n\t\t}\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( q, p ) {\r\n\r\n\t\tif ( p !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\r\n\t\t\treturn this.multiplyQuaternions( q, p );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyQuaternions( this, q );\r\n\r\n\t},\r\n\r\n\tmultiplyQuaternions: function ( a, b ) {\r\n\r\n\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\r\n\r\n\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\r\n\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\r\n\r\n\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\r\n\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\r\n\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\r\n\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\r\n\t\treturn vector.applyQuaternion( this );\r\n\r\n\t},\r\n\r\n\tslerp: function ( qb, t ) {\r\n\r\n\t\tif ( t === 0 ) return this;\r\n\t\tif ( t === 1 ) return this.copy( qb );\r\n\r\n\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\r\n\r\n\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\r\n\r\n\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\r\n\r\n\t\tif ( cosHalfTheta < 0 ) {\r\n\r\n\t\t\tthis._w = - qb._w;\r\n\t\t\tthis._x = - qb._x;\r\n\t\t\tthis._y = - qb._y;\r\n\t\t\tthis._z = - qb._z;\r\n\r\n\t\t\tcosHalfTheta = - cosHalfTheta;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.copy( qb );\r\n\r\n\t\t}\r\n\r\n\t\tif ( cosHalfTheta >= 1.0 ) {\r\n\r\n\t\t\tthis._w = w;\r\n\t\t\tthis._x = x;\r\n\t\t\tthis._y = y;\r\n\t\t\tthis._z = z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar halfTheta = Math.acos( cosHalfTheta );\r\n\t\tvar sinHalfTheta = Math.sqrt( 1.0 - cosHalfTheta * cosHalfTheta );\r\n\r\n\t\tif ( Math.abs( sinHalfTheta ) < 0.001 ) {\r\n\r\n\t\t\tthis._w = 0.5 * ( w + this._w );\r\n\t\t\tthis._x = 0.5 * ( x + this._x );\r\n\t\t\tthis._y = 0.5 * ( y + this._y );\r\n\t\t\tthis._z = 0.5 * ( z + this._z );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\r\n\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\r\n\r\n\t\tthis._w = ( w * ratioA + this._w * ratioB );\r\n\t\tthis._x = ( x * ratioA + this._x * ratioB );\r\n\t\tthis._y = ( y * ratioA + this._y * ratioB );\r\n\t\tthis._z = ( z * ratioA + this._z * ratioB );\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( quaternion ) {\r\n\r\n\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis._x = array[ offset ];\r\n\t\tthis._y = array[ offset + 1 ];\r\n\t\tthis._z = array[ offset + 2 ];\r\n\t\tthis._w = array[ offset + 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Quaternion( this._x, this._y, this._z, this._w );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Quaternion.slerp = function ( qa, qb, qm, t ) {\r\n\r\n\treturn qm.copy( qa ).slerp( qb, t );\r\n\r\n}\r\n\r\n// File:src/math/Vector2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author egraether / http://egraether.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.Vector2 = function ( x, y ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\r\n};\r\n\r\nTHREE.Vector2.prototype = {\r\n\r\n\tconstructor: THREE.Vector2,\r\n\r\n\tset: function ( x, y ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v ) {\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tthis.x *= s;\r\n\t\tthis.y *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector2();\r\n\t\t\t\tmax = new THREE.Vector2();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x, dy = this.y - v.y;\r\n\t\treturn dx * dx + dy * dy;\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector2( this.x, this.y );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author *kile / http://kile.stravaganza.org/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector3 = function ( x, y, z ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\r\n};\r\n\r\nTHREE.Vector3.prototype = {\r\n\r\n\tconstructor: THREE.Vector3,\r\n\r\n\tset: function ( x, y, z ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\t\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiply: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\r\n\t\t\treturn this.multiplyVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x *= v.x;\r\n\t\tthis.y *= v.y;\r\n\t\tthis.z *= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x * b.x;\r\n\t\tthis.y = a.y * b.y;\r\n\t\tthis.z = a.z * b.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyEuler: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( euler ) {\r\n\r\n\t\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.Vector3: .applyEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromEuler( euler ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyAxisAngle: function () {\r\n\r\n\t\tvar quaternion;\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tif ( quaternion === undefined ) quaternion = new THREE.Quaternion();\r\n\r\n\t\t\tthis.applyQuaternion( quaternion.setFromAxisAngle( axis, angle ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix3: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ];\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ];\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyProjection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 projection matrix\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\t\tvar d = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] ); // perspective divide\r\n\r\n\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z + e[ 12 ] ) * d;\r\n\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z + e[ 13 ] ) * d;\r\n\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * d;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyQuaternion: function ( q ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\r\n\t\tvar qx = q.x;\r\n\t\tvar qy = q.y;\r\n\t\tvar qz = q.z;\r\n\t\tvar qw = q.w;\r\n\r\n\t\t// calculate quat * vector\r\n\r\n\t\tvar ix =  qw * x + qy * z - qz * y;\r\n\t\tvar iy =  qw * y + qz * x - qx * z;\r\n\t\tvar iz =  qw * z + qx * y - qy * x;\r\n\t\tvar iw = - qx * x - qy * y - qz * z;\r\n\r\n\t\t// calculate result * inverse quat\r\n\r\n\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\r\n\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\r\n\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.projectionMatrix, matrix.getInverse( camera.matrixWorld ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tunproject: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( camera ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\r\n\t\t\tmatrix.multiplyMatrices( camera.matrixWorld, matrix.getInverse( camera.projectionMatrix ) );\r\n\t\t\treturn this.applyProjection( matrix );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttransformDirection: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4 affine matrix\r\n\t\t// vector interpreted as a direction\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ]  * z;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ]  * z;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\r\n\r\n\t\tthis.normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivide: function ( v ) {\r\n\r\n\t\tthis.x /= v.x;\r\n\t\tthis.y /= v.y;\r\n\t\tthis.z /= v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector3();\r\n\t\t\t\tmax = new THREE.Vector3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tfloor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tround: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\troundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength  ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcross: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\r\n\t\t\treturn this.crossVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tvar x = this.x, y = this.y, z = this.z;\r\n\r\n\t\tthis.x = y * v.z - z * v.y;\r\n\t\tthis.y = z * v.x - x * v.z;\r\n\t\tthis.z = x * v.y - y * v.x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcrossVectors: function ( a, b ) {\r\n\r\n\t\tvar ax = a.x, ay = a.y, az = a.z;\r\n\t\tvar bx = b.x, by = b.y, bz = b.z;\r\n\r\n\t\tthis.x = ay * bz - az * by;\r\n\t\tthis.y = az * bx - ax * bz;\r\n\t\tthis.z = ax * by - ay * bx;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tprojectOnVector: function () {\r\n\r\n\t\tvar v1, dot;\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( vector ).normalize();\r\n\r\n\t\t\tdot = this.dot( v1 );\r\n\r\n\t\t\treturn this.copy( v1 ).multiplyScalar( dot );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tprojectOnPlane: function () {\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( planeNormal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\tv1.copy( this ).projectOnVector( planeNormal );\r\n\r\n\t\t\treturn this.sub( v1 );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\treflect: function () {\r\n\r\n\t\t// reflect incident vector off plane orthogonal to normal\r\n\t\t// normal is assumed to have unit length\r\n\r\n\t\tvar v1;\r\n\r\n\t\treturn function ( normal ) {\r\n\r\n\t\t\tif ( v1 === undefined ) v1 = new THREE.Vector3();\r\n\r\n\t\t\treturn this.sub( v1.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tangleTo: function ( v ) {\r\n\r\n\t\tvar theta = this.dot( v ) / ( this.length() * v.length() );\r\n\r\n\t\t// clamp, to handle numerical problems\r\n\r\n\t\treturn Math.acos( THREE.Math.clamp( theta, - 1, 1 ) );\r\n\r\n\t},\r\n\r\n\tdistanceTo: function ( v ) {\r\n\r\n\t\treturn Math.sqrt( this.distanceToSquared( v ) );\r\n\r\n\t},\r\n\r\n\tdistanceToSquared: function ( v ) {\r\n\r\n\t\tvar dx = this.x - v.x;\r\n\t\tvar dy = this.y - v.y;\r\n\t\tvar dz = this.z - v.z;\r\n\r\n\t\treturn dx * dx + dy * dy + dz * dz;\r\n\r\n\t},\r\n\r\n\tsetEulerFromRotationMatrix: function ( m, order ) {\r\n\r\n\t\tTHREE.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\r\n\r\n\t},\r\n\r\n\tsetEulerFromQuaternion: function ( q, order ) {\r\n\r\n\t\tTHREE.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\r\n\r\n\t},\r\n\r\n\tgetPositionFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\r\n\r\n\t\treturn this.setFromMatrixPosition( m );\r\n\r\n\t},\r\n\r\n\tgetScaleFromMatrix: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\r\n\r\n\t\treturn this.setFromMatrixScale( m );\r\n\t},\r\n\r\n\tgetColumnFromMatrix: function ( index, matrix ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\r\n\r\n\t\treturn this.setFromMatrixColumn( index, matrix );\r\n\r\n\t},\r\n\r\n\tsetFromMatrixPosition: function ( m ) {\r\n\r\n\t\tthis.x = m.elements[ 12 ];\r\n\t\tthis.y = m.elements[ 13 ];\r\n\t\tthis.z = m.elements[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrixScale: function ( m ) {\r\n\r\n\t\tvar sx = this.set( m.elements[ 0 ], m.elements[ 1 ], m.elements[  2 ] ).length();\r\n\t\tvar sy = this.set( m.elements[ 4 ], m.elements[ 5 ], m.elements[  6 ] ).length();\r\n\t\tvar sz = this.set( m.elements[ 8 ], m.elements[ 9 ], m.elements[ 10 ] ).length();\r\n\r\n\t\tthis.x = sx;\r\n\t\tthis.y = sy;\r\n\t\tthis.z = sz;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromMatrixColumn: function ( index, matrix ) {\r\n\t\t\r\n\t\tvar offset = index * 4;\r\n\r\n\t\tvar me = matrix.elements;\r\n\r\n\t\tthis.x = me[ offset ];\r\n\t\tthis.y = me[ offset + 1 ];\r\n\t\tthis.z = me[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector3( this.x, this.y, this.z );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Vector4.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author egraether / http://egraether.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Vector4 = function ( x, y, z, w ) {\r\n\r\n\tthis.x = x || 0;\r\n\tthis.y = y || 0;\r\n\tthis.z = z || 0;\r\n\tthis.w = ( w !== undefined ) ? w : 1;\r\n\r\n};\r\n\r\nTHREE.Vector4.prototype = {\r\n\r\n\tconstructor: THREE.Vector4,\r\n\r\n\tset: function ( x, y, z, w ) {\r\n\r\n\t\tthis.x = x;\r\n\t\tthis.y = y;\r\n\t\tthis.z = z;\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( x ) {\r\n\r\n\t\tthis.x = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( y ) {\r\n\r\n\t\tthis.y = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( z ) {\r\n\r\n\t\tthis.z = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetW: function ( w ) {\r\n\r\n\t\tthis.w = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponent: function ( index, value ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: this.x = value; break;\r\n\t\t\tcase 1: this.y = value; break;\r\n\t\t\tcase 2: this.z = value; break;\r\n\t\t\tcase 3: this.w = value; break;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetComponent: function ( index ) {\r\n\r\n\t\tswitch ( index ) {\r\n\r\n\t\t\tcase 0: return this.x;\r\n\t\t\tcase 1: return this.y;\r\n\t\t\tcase 2: return this.z;\r\n\t\t\tcase 3: return this.w;\r\n\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcopy: function ( v ) {\r\n\r\n\t\tthis.x = v.x;\r\n\t\tthis.y = v.y;\r\n\t\tthis.z = v.z;\r\n\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tadd: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\r\n\t\t\treturn this.addVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x += v.x;\r\n\t\tthis.y += v.y;\r\n\t\tthis.z += v.z;\r\n\t\tthis.w += v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddScalar: function ( s ) {\r\n\r\n\t\tthis.x += s;\r\n\t\tthis.y += s;\r\n\t\tthis.z += s;\r\n\t\tthis.w += s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\taddVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x + b.x;\r\n\t\tthis.y = a.y + b.y;\r\n\t\tthis.z = a.z + b.z;\r\n\t\tthis.w = a.w + b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsub: function ( v, w ) {\r\n\r\n\t\tif ( w !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\r\n\t\t\treturn this.subVectors( v, w );\r\n\r\n\t\t}\r\n\r\n\t\tthis.x -= v.x;\r\n\t\tthis.y -= v.y;\r\n\t\tthis.z -= v.z;\r\n\t\tthis.w -= v.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubScalar: function ( s ) {\r\n\r\n\t\tthis.x -= s;\r\n\t\tthis.y -= s;\r\n\t\tthis.z -= s;\r\n\t\tthis.w -= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsubVectors: function ( a, b ) {\r\n\r\n\t\tthis.x = a.x - b.x;\r\n\t\tthis.y = a.y - b.y;\r\n\t\tthis.z = a.z - b.z;\r\n\t\tthis.w = a.w - b.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( scalar ) {\r\n\r\n\t\tthis.x *= scalar;\r\n\t\tthis.y *= scalar;\r\n\t\tthis.z *= scalar;\r\n\t\tthis.w *= scalar;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( m ) {\r\n\r\n\t\tvar x = this.x;\r\n\t\tvar y = this.y;\r\n\t\tvar z = this.z;\r\n\t\tvar w = this.w;\r\n\r\n\t\tvar e = m.elements;\r\n\r\n\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\r\n\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\r\n\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\r\n\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdivideScalar: function ( scalar ) {\r\n\r\n\t\tif ( scalar !== 0 ) {\r\n\r\n\t\t\tvar invScalar = 1 / scalar;\r\n\r\n\t\t\tthis.x *= invScalar;\r\n\t\t\tthis.y *= invScalar;\r\n\t\t\tthis.z *= invScalar;\r\n\t\t\tthis.w *= invScalar;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tthis.x = 0;\r\n\t\t\tthis.y = 0;\r\n\t\t\tthis.z = 0;\r\n\t\t\tthis.w = 1;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromQuaternion: function ( q ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\r\n\r\n\t\t// q is assumed to be normalized\r\n\r\n\t\tthis.w = 2 * Math.acos( q.w );\r\n\r\n\t\tvar s = Math.sqrt( 1 - q.w * q.w );\r\n\r\n\t\tif ( s < 0.0001 ) {\r\n\r\n\t\t\t this.x = 1;\r\n\t\t\t this.y = 0;\r\n\t\t\t this.z = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t this.x = q.x / s;\r\n\t\t\t this.y = q.y / s;\r\n\t\t\t this.z = q.z / s;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetAxisAngleFromRotationMatrix: function ( m ) {\r\n\r\n\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar angle, x, y, z,\t\t// variables for result\r\n\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\r\n\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\r\n\r\n\t\t\tte = m.elements,\r\n\r\n\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\r\n\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\r\n\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\tif ( ( Math.abs( m12 - m21 ) < epsilon )\r\n\t\t   && ( Math.abs( m13 - m31 ) < epsilon )\r\n\t\t   && ( Math.abs( m23 - m32 ) < epsilon ) ) {\r\n\r\n\t\t\t// singularity found\r\n\t\t\t// first check for identity matrix which must have +1 for all terms\r\n\t\t\t// in leading diagonal and zero in other terms\r\n\r\n\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m13 + m31 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m23 + m32 ) < epsilon2 )\r\n\t\t\t   && ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\r\n\r\n\t\t\t\t// this singularity is identity matrix so angle = 0\r\n\r\n\t\t\t\tthis.set( 1, 0, 0, 0 );\r\n\r\n\t\t\t\treturn this; // zero angle, arbitrary axis\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// otherwise this singularity is angle = 180\r\n\r\n\t\t\tangle = Math.PI;\r\n\r\n\t\t\tvar xx = ( m11 + 1 ) / 2;\r\n\t\t\tvar yy = ( m22 + 1 ) / 2;\r\n\t\t\tvar zz = ( m33 + 1 ) / 2;\r\n\t\t\tvar xy = ( m12 + m21 ) / 4;\r\n\t\t\tvar xz = ( m13 + m31 ) / 4;\r\n\t\t\tvar yz = ( m23 + m32 ) / 4;\r\n\r\n\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) { // m11 is the largest diagonal term\r\n\r\n\t\t\t\tif ( xx < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tx = Math.sqrt( xx );\r\n\t\t\t\t\ty = xy / x;\r\n\t\t\t\t\tz = xz / x;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( yy > zz ) { // m22 is the largest diagonal term\r\n\r\n\t\t\t\tif ( yy < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0;\r\n\t\t\t\t\tz = 0.707106781;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ty = Math.sqrt( yy );\r\n\t\t\t\t\tx = xy / y;\r\n\t\t\t\t\tz = yz / y;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else { // m33 is the largest diagonal term so base result on this\r\n\r\n\t\t\t\tif ( zz < epsilon ) {\r\n\r\n\t\t\t\t\tx = 0.707106781;\r\n\t\t\t\t\ty = 0.707106781;\r\n\t\t\t\t\tz = 0;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tz = Math.sqrt( zz );\r\n\t\t\t\t\tx = xz / z;\r\n\t\t\t\t\ty = yz / z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.set( x, y, z, angle );\r\n\r\n\t\t\treturn this; // return 180 deg rotation\r\n\r\n\t\t}\r\n\r\n\t\t// as we have reached here there are no singularities so we can handle normally\r\n\r\n\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 )\r\n\t\t\t\t\t\t  + ( m13 - m31 ) * ( m13 - m31 )\r\n\t\t\t\t\t\t  + ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\r\n\r\n\t\tif ( Math.abs( s ) < 0.001 ) s = 1;\r\n\r\n\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\r\n\t\t// caught by singularity test above, but I've left it in just in case\r\n\r\n\t\tthis.x = ( m32 - m23 ) / s;\r\n\t\tthis.y = ( m13 - m31 ) / s;\r\n\t\tthis.z = ( m21 - m12 ) / s;\r\n\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmin: function ( v ) {\r\n\r\n\t\tif ( this.x > v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y > v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z > v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w > v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmax: function ( v ) {\r\n\r\n\t\tif ( this.x < v.x ) {\r\n\r\n\t\t\tthis.x = v.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < v.y ) {\r\n\r\n\t\t\tthis.y = v.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < v.z ) {\r\n\r\n\t\t\tthis.z = v.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < v.w ) {\r\n\r\n\t\t\tthis.w = v.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclamp: function ( min, max ) {\r\n\r\n\t\t// This function assumes min < max, if this assumption isn't true it will not operate correctly\r\n\r\n\t\tif ( this.x < min.x ) {\r\n\r\n\t\t\tthis.x = min.x;\r\n\r\n\t\t} else if ( this.x > max.x ) {\r\n\r\n\t\t\tthis.x = max.x;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.y < min.y ) {\r\n\r\n\t\t\tthis.y = min.y;\r\n\r\n\t\t} else if ( this.y > max.y ) {\r\n\r\n\t\t\tthis.y = max.y;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.z < min.z ) {\r\n\r\n\t\t\tthis.z = min.z;\r\n\r\n\t\t} else if ( this.z > max.z ) {\r\n\r\n\t\t\tthis.z = max.z;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.w < min.w ) {\r\n\r\n\t\t\tthis.w = min.w;\r\n\r\n\t\t} else if ( this.w > max.w ) {\r\n\r\n\t\t\tthis.w = max.w;\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclampScalar: ( function () {\r\n\r\n\t\tvar min, max;\r\n\r\n\t\treturn function ( minVal, maxVal ) {\r\n\r\n\t\t\tif ( min === undefined ) {\r\n\r\n\t\t\t\tmin = new THREE.Vector4();\r\n\t\t\t\tmax = new THREE.Vector4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tmin.set( minVal, minVal, minVal, minVal );\r\n\t\t\tmax.set( maxVal, maxVal, maxVal, maxVal );\r\n\r\n\t\t\treturn this.clamp( min, max );\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n  floor: function () {\r\n\r\n\t\tthis.x = Math.floor( this.x );\r\n\t\tthis.y = Math.floor( this.y );\r\n\t\tthis.z = Math.floor( this.z );\r\n\t\tthis.w = Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  ceil: function () {\r\n\r\n\t\tthis.x = Math.ceil( this.x );\r\n\t\tthis.y = Math.ceil( this.y );\r\n\t\tthis.z = Math.ceil( this.z );\r\n\t\tthis.w = Math.ceil( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  round: function () {\r\n\r\n\t\tthis.x = Math.round( this.x );\r\n\t\tthis.y = Math.round( this.y );\r\n\t\tthis.z = Math.round( this.z );\r\n\t\tthis.w = Math.round( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n  roundToZero: function () {\r\n\r\n\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\r\n\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\r\n\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\r\n\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\r\n\r\n\t\treturn this;\r\n\r\n  },\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.x = - this.x;\r\n\t\tthis.y = - this.y;\r\n\t\tthis.z = - this.z;\r\n\t\tthis.w = - this.w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdot: function ( v ) {\r\n\r\n\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\r\n\r\n\t},\r\n\r\n\tlengthSq: function () {\r\n\r\n\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\r\n\r\n\t},\r\n\r\n\tlength: function () {\r\n\r\n\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\r\n\r\n\t},\r\n\r\n\tlengthManhattan: function () {\r\n\r\n\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\treturn this.divideScalar( this.length() );\r\n\r\n\t},\r\n\r\n\tsetLength: function ( l ) {\r\n\r\n\t\tvar oldLength = this.length();\r\n\r\n\t\tif ( oldLength !== 0 && l !== oldLength ) {\r\n\r\n\t\t\tthis.multiplyScalar( l / oldLength );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerp: function ( v, alpha ) {\r\n\r\n\t\tthis.x += ( v.x - this.x ) * alpha;\r\n\t\tthis.y += ( v.y - this.y ) * alpha;\r\n\t\tthis.z += ( v.z - this.z ) * alpha;\r\n\t\tthis.w += ( v.w - this.w ) * alpha;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlerpVectors: function ( v1, v2, alpha ) {\r\n\r\n\t\tthis.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( v ) {\r\n\r\n\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.x = array[ offset ];\r\n\t\tthis.y = array[ offset + 1 ];\r\n\t\tthis.z = array[ offset + 2 ];\r\n\t\tthis.w = array[ offset + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this.x;\r\n\t\tarray[ offset + 1 ] = this.y;\r\n\t\tarray[ offset + 2 ] = this.z;\r\n\t\tarray[ offset + 3 ] = this.w;\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tfromAttribute: function ( attribute, index, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tindex = index * attribute.itemSize + offset;\r\n\r\n\t\tthis.x = attribute.array[ index ];\r\n\t\tthis.y = attribute.array[ index + 1 ];\r\n\t\tthis.z = attribute.array[ index + 2 ];\r\n\t\tthis.w = attribute.array[ index + 3 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Vector4( this.x, this.y, this.z, this.w );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Euler.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Euler = function ( x, y, z, order ) {\r\n\r\n\tthis._x = x || 0;\r\n\tthis._y = y || 0;\r\n\tthis._z = z || 0;\r\n\tthis._order = order || THREE.Euler.DefaultOrder;\r\n\r\n};\r\n\r\nTHREE.Euler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\r\n\r\nTHREE.Euler.DefaultOrder = 'XYZ';\r\n\r\nTHREE.Euler.prototype = {\r\n\r\n\tconstructor: THREE.Euler,\r\n\r\n\t_x: 0, _y: 0, _z: 0, _order: THREE.Euler.DefaultOrder,\r\n\r\n\tget x () {\r\n\r\n\t\treturn this._x;\r\n\r\n\t},\r\n\r\n\tset x ( value ) {\r\n\r\n\t\tthis._x = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget y () {\r\n\r\n\t\treturn this._y;\r\n\r\n\t},\r\n\r\n\tset y ( value ) {\r\n\r\n\t\tthis._y = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget z () {\r\n\r\n\t\treturn this._z;\r\n\r\n\t},\r\n\r\n\tset z ( value ) {\r\n\r\n\t\tthis._z = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tget order () {\r\n\r\n\t\treturn this._order;\r\n\r\n\t},\r\n\r\n\tset order ( value ) {\r\n\r\n\t\tthis._order = value;\r\n\t\tthis.onChangeCallback();\r\n\r\n\t},\r\n\r\n\tset: function ( x, y, z, order ) {\r\n\r\n\t\tthis._x = x;\r\n\t\tthis._y = y;\r\n\t\tthis._z = z;\r\n\t\tthis._order = order || this._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( euler ) {\r\n\r\n\t\tthis._x = euler._x;\r\n\t\tthis._y = euler._y;\r\n\t\tthis._z = euler._z;\r\n\t\tthis._order = euler._order;\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromRotationMatrix: function ( m, order, update ) {\r\n\r\n\t\tvar clamp = THREE.Math.clamp;\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tvar te = m.elements;\r\n\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\r\n\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\r\n\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\r\n\r\n\t\torder = order || this._order;\r\n\r\n\t\tif ( order === 'XYZ' ) {\r\n\r\n\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m13 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YXZ' ) {\r\n\r\n\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m23 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\t\t\t\tthis._z = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZXY' ) {\r\n\r\n\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m32 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._y = Math.atan2( - m31, m33 );\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._y = 0;\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'ZYX' ) {\r\n\r\n\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m31 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m33 );\r\n\t\t\t\tthis._z = Math.atan2( m21, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._z = Math.atan2( - m12, m22 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'YZX' ) {\r\n\r\n\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m21 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m22 );\r\n\t\t\t\tthis._y = Math.atan2( - m31, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = 0;\r\n\t\t\t\tthis._y = Math.atan2( m13, m33 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( order === 'XZY' ) {\r\n\r\n\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\r\n\r\n\t\t\tif ( Math.abs( m12 ) < 0.99999 ) {\r\n\r\n\t\t\t\tthis._x = Math.atan2( m32, m22 );\r\n\t\t\t\tthis._y = Math.atan2( m13, m11 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis._x = Math.atan2( - m23, m33 );\r\n\t\t\t\tthis._y = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order )\r\n\r\n\t\t}\r\n\r\n\t\tthis._order = order;\r\n\r\n\t\tif ( update !== false ) this.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromQuaternion: function () {\r\n\r\n\t\tvar matrix;\r\n\r\n\t\treturn function ( q, order, update ) {\r\n\r\n\t\t\tif ( matrix === undefined ) matrix = new THREE.Matrix4();\r\n\t\t\tmatrix.makeRotationFromQuaternion( q );\r\n\t\t\tthis.setFromRotationMatrix( matrix, order, update );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromVector3: function ( v, order ) {\r\n\r\n\t\treturn this.set( v.x, v.y, v.z, order || this._order );\r\n\r\n\t},\r\n\r\n\treorder: function () {\r\n\r\n\t\t// WARNING: this discards revolution information -bhouston\r\n\r\n\t\tvar q = new THREE.Quaternion();\r\n\r\n\t\treturn function ( newOrder ) {\r\n\r\n\t\t\tq.setFromEuler( this );\r\n\t\t\tthis.setFromQuaternion( q, newOrder );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tequals: function ( euler ) {\r\n\r\n\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis._x = array[ 0 ];\r\n\t\tthis._y = array[ 1 ];\r\n\t\tthis._z = array[ 2 ];\r\n\t\tif ( array[ 3 ] !== undefined ) this._order = array[ 3 ];\r\n\r\n\t\tthis.onChangeCallback();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function ( array, offset ) {\r\n\r\n\t\tif ( array === undefined ) array = [];\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tarray[ offset ] = this._x;\r\n\t\tarray[ offset + 1 ] = this._y;\r\n\t\tarray[ offset + 2 ] = this._z;\r\n\t\tarray[ offset + 3 ] = this._order;\r\n\r\n\t\treturn array;\r\n\t},\r\n\r\n\ttoVector3: function ( optionalResult ) {\r\n\r\n\t\tif ( optionalResult ) {\r\n\r\n\t\t\treturn optionalResult.set( this._x, this._y, this._z );\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn new THREE.Vector3( this._x, this._y, this._z );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tonChange: function ( callback ) {\r\n\r\n\t\tthis.onChangeCallback = callback;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tonChangeCallback: function () {},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Euler( this._x, this._y, this._z, this._order );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Line3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Line3 = function ( start, end ) {\r\n\r\n\tthis.start = ( start !== undefined ) ? start : new THREE.Vector3();\r\n\tthis.end = ( end !== undefined ) ? end : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Line3.prototype = {\r\n\r\n\tconstructor: THREE.Line3,\r\n\r\n\tset: function ( start, end ) {\r\n\r\n\t\tthis.start.copy( start );\r\n\t\tthis.end.copy( end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( line ) {\r\n\r\n\t\tthis.start.copy( line.start );\r\n\t\tthis.end.copy( line.end );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tdelta: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.end, this.start );\r\n\r\n\t},\r\n\r\n\tdistanceSq: function () {\r\n\r\n\t\treturn this.start.distanceToSquared( this.end );\r\n\r\n\t},\r\n\r\n\tdistance: function () {\r\n\r\n\t\treturn this.start.distanceTo( this.end );\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tclosestPointToPointParameter: function () {\r\n\r\n\t\tvar startP = new THREE.Vector3();\r\n\t\tvar startEnd = new THREE.Vector3();\r\n\r\n\t\treturn function ( point, clampToLine ) {\r\n\r\n\t\t\tstartP.subVectors( point, this.start );\r\n\t\t\tstartEnd.subVectors( this.end, this.start );\r\n\r\n\t\t\tvar startEnd2 = startEnd.dot( startEnd );\r\n\t\t\tvar startEnd_startP = startEnd.dot( startP );\r\n\r\n\t\t\tvar t = startEnd_startP / startEnd2;\r\n\r\n\t\t\tif ( clampToLine ) {\r\n\r\n\t\t\t\tt = THREE.Math.clamp( t, 0, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn t;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, clampToLine, optionalTarget ) {\r\n\r\n\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn this.delta( result ).multiplyScalar( t ).add( this.start );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.start.applyMatrix4( matrix );\r\n\t\tthis.end.applyMatrix4( matrix );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( line ) {\r\n\r\n\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Line3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box2.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Box2 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector2( Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector2( - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box2.prototype = {\r\n\r\n\tconstructor: THREE.Box2,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = Infinity;\r\n\t\tthis.max.x = this.max.y = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t     ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector2();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector2();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box2().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Box3.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Box3 = function ( min, max ) {\r\n\r\n\tthis.min = ( min !== undefined ) ? min : new THREE.Vector3( Infinity, Infinity, Infinity );\r\n\tthis.max = ( max !== undefined ) ? max : new THREE.Vector3( - Infinity, - Infinity, - Infinity );\r\n\r\n};\r\n\r\nTHREE.Box3.prototype = {\r\n\r\n\tconstructor: THREE.Box3,\r\n\r\n\tset: function ( min, max ) {\r\n\r\n\t\tthis.min.copy( min );\r\n\t\tthis.max.copy( max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPoints: function ( points ) {\r\n\r\n\t\tthis.makeEmpty();\r\n\r\n\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\tthis.expandByPoint( points[ i ] )\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCenterAndSize: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( center, size ) {\r\n\r\n\t\t\tvar halfSize = v1.copy( size ).multiplyScalar( 0.5 );\r\n\r\n\t\t\tthis.min.copy( center ).sub( halfSize );\r\n\t\t\tthis.max.copy( center ).add( halfSize );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetFromObject: function () {\r\n\r\n\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\r\n\t\t// accounting for both the object's, and childrens', world transforms\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar scope = this;\r\n\r\n\t\t\tobject.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.makeEmpty();\r\n\r\n\t\t\tobject.traverse( function ( node ) {\r\n\r\n\t\t\t\tvar geometry = node.geometry;\r\n\r\n\t\t\t\tif ( geometry !== undefined ) {\r\n\r\n\t\t\t\t\tif ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t\tv1.copy( vertices[ i ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( geometry instanceof THREE.BufferGeometry && geometry.attributes[ 'position' ] !== undefined ) {\r\n\r\n\t\t\t\t\t\tvar positions = geometry.attributes[ 'position' ].array;\r\n\r\n\t\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\t\tv1.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\r\n\t\t\t\t\t\t\tv1.applyMatrix4( node.matrixWorld );\r\n\r\n\t\t\t\t\t\t\tscope.expandByPoint( v1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( box ) {\r\n\r\n\t\tthis.min.copy( box.min );\r\n\t\tthis.max.copy( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeEmpty: function () {\r\n\r\n\t\tthis.min.x = this.min.y = this.min.z = Infinity;\r\n\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\r\n\r\n\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\r\n\r\n\t},\r\n\r\n\tcenter: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\r\n\r\n\t},\r\n\r\n\tsize: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.subVectors( this.max, this.min );\r\n\r\n\t},\r\n\r\n\texpandByPoint: function ( point ) {\r\n\r\n\t\tthis.min.min( point );\r\n\t\tthis.max.max( point );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByVector: function ( vector ) {\r\n\r\n\t\tthis.min.sub( vector );\r\n\t\tthis.max.add( vector );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\texpandByScalar: function ( scalar ) {\r\n\r\n\t\tthis.min.addScalar( - scalar );\r\n\t\tthis.max.addScalar( scalar );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tif ( point.x < this.min.x || point.x > this.max.x ||\r\n\t\t     point.y < this.min.y || point.y > this.max.y ||\r\n\t\t     point.z < this.min.z || point.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tcontainsBox: function ( box ) {\r\n\r\n\t\tif ( ( this.min.x <= box.min.x ) && ( box.max.x <= this.max.x ) &&\r\n\t\t\t ( this.min.y <= box.min.y ) && ( box.max.y <= this.max.y ) &&\r\n\t\t\t ( this.min.z <= box.min.z ) && ( box.max.z <= this.max.z ) ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tgetParameter: function ( point, optionalTarget ) {\r\n\r\n\t\t// This can potentially have a divide by zero if the box\r\n\t\t// has a size dimension of 0.\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.set(\r\n\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\r\n\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\r\n\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\r\n\t\t);\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function ( box ) {\r\n\r\n\t\t// using 6 splitting planes to rule out intersections.\r\n\r\n\t\tif ( box.max.x < this.min.x || box.min.x > this.max.x ||\r\n\t\t     box.max.y < this.min.y || box.min.y > this.max.y ||\r\n\t\t     box.max.z < this.min.z || box.min.z > this.max.z ) {\r\n\r\n\t\t\treturn false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( point ).clamp( this.min, this.max );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar clampedPoint = v1.copy( point ).clamp( this.min, this.max );\r\n\t\t\treturn clampedPoint.sub( point ).length();\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tgetBoundingSphere: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Sphere();\r\n\r\n\t\t\tresult.center = this.center();\r\n\t\t\tresult.radius = this.size( v1 ).length() * 0.5;\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersect: function ( box ) {\r\n\r\n\t\tthis.min.max( box.min );\r\n\t\tthis.max.min( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tunion: function ( box ) {\r\n\r\n\t\tthis.min.min( box.min );\r\n\t\tthis.max.max( box.max );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar points = [\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3(),\r\n\t\t\tnew THREE.Vector3()\r\n\t\t];\r\n\r\n\t\treturn function ( matrix ) {\r\n\r\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\r\n\t\t\tpoints[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\r\n\t\t\tpoints[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\r\n\t\t\tpoints[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\r\n\t\t\tpoints[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\r\n\t\t\tpoints[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\r\n\t\t\tpoints[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\r\n\t\t\tpoints[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\r\n\t\t\tpoints[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix );  // 111\r\n\r\n\t\t\tthis.makeEmpty();\r\n\t\t\tthis.setFromPoints( points );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.min.add( offset );\r\n\t\tthis.max.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( box ) {\r\n\r\n\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Box3().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix3.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Matrix3 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0,\r\n\t\t0, 1, 0,\r\n\t\t0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix3.prototype = {\r\n\r\n\tconstructor: THREE.Matrix3,\r\n\r\n\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 3 ] = n12; te[ 6 ] = n13;\r\n\t\tte[ 1 ] = n21; te[ 4 ] = n22; te[ 7 ] = n23;\r\n\t\tte[ 2 ] = n31; te[ 5 ] = n32; te[ 8 ] = n33;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0,\r\n\t\t\t0, 1, 0,\r\n\t\t\t0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tvar me = m.elements;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tme[ 0 ], me[ 3 ], me[ 6 ],\r\n\t\t\tme[ 1 ], me[ 4 ], me[ 7 ],\r\n\t\t\tme[ 2 ], me[ 5 ], me[ 8 ]\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix3( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix3: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix3( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\r\n\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\r\n\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\r\n\r\n\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( matrix, throwOnInvertible ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\t\t// ( based on http://code.google.com/p/webgl-mjs/ )\r\n\r\n\t\tvar me = matrix.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] =   me[ 10 ] * me[ 5 ] - me[ 6 ] * me[ 9 ];\r\n\t\tte[ 1 ] = - me[ 10 ] * me[ 1 ] + me[ 2 ] * me[ 9 ];\r\n\t\tte[ 2 ] =   me[ 6 ] * me[ 1 ] - me[ 2 ] * me[ 5 ];\r\n\t\tte[ 3 ] = - me[ 10 ] * me[ 4 ] + me[ 6 ] * me[ 8 ];\r\n\t\tte[ 4 ] =   me[ 10 ] * me[ 0 ] - me[ 2 ] * me[ 8 ];\r\n\t\tte[ 5 ] = - me[ 6 ] * me[ 0 ] + me[ 2 ] * me[ 4 ];\r\n\t\tte[ 6 ] =   me[ 9 ] * me[ 4 ] - me[ 5 ] * me[ 8 ];\r\n\t\tte[ 7 ] = - me[ 9 ] * me[ 0 ] + me[ 1 ] * me[ 8 ];\r\n\t\tte[ 8 ] =   me[ 5 ] * me[ 0 ] - me[ 1 ] * me[ 4 ];\r\n\r\n\t\tvar det = me[ 0 ] * te[ 0 ] + me[ 1 ] * te[ 3 ] + me[ 2 ] * te[ 6 ];\r\n\r\n\t\t// no inverse\r\n\r\n\t\tif ( det === 0 ) {\r\n\r\n\t\t\tvar msg = \"Matrix3.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1.0 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar tmp, m = this.elements;\r\n\r\n\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\r\n\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\r\n\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetNormalMatrix: function ( m ) {\r\n\r\n\t\t// input: THREE.Matrix4\r\n\r\n\t\tthis.getInverse( m ).transpose();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttransposeIntoArray: function ( r ) {\r\n\r\n\t\tvar m = this.elements;\r\n\r\n\t\tr[ 0 ] = m[ 0 ];\r\n\t\tr[ 1 ] = m[ 3 ];\r\n\t\tr[ 2 ] = m[ 6 ];\r\n\t\tr[ 3 ] = m[ 1 ];\r\n\t\tr[ 4 ] = m[ 4 ];\r\n\t\tr[ 5 ] = m[ 7 ];\r\n\t\tr[ 6 ] = m[ 2 ];\r\n\t\tr[ 7 ] = m[ 5 ];\r\n\t\tr[ 8 ] = m[ 8 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ],\r\n\t\t\tte[ 3 ], te[ 4 ], te[ 5 ],\r\n\t\t\tte[ 6 ], te[ 7 ], te[ 8 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix3().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Matrix4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author philogb / http://blog.thejit.org/\r\n * @author jordi_ros / http://plattsoft.com\r\n * @author D1plo1d / http://github.com/D1plo1d\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author timknip / http://www.floorplanner.com/\r\n * @author bhouston / http://exocortex.com\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Matrix4 = function () {\r\n\r\n\tthis.elements = new Float32Array( [\r\n\r\n\t\t1, 0, 0, 0,\r\n\t\t0, 1, 0, 0,\r\n\t\t0, 0, 1, 0,\r\n\t\t0, 0, 0, 1\r\n\r\n\t] );\r\n\r\n\tif ( arguments.length > 0 ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Matrix4.prototype = {\r\n\r\n\tconstructor: THREE.Matrix4,\r\n\r\n\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\r\n\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\r\n\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\r\n\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tidentity: function () {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, 0,\r\n\t\t\t0, 1, 0, 0,\r\n\t\t\t0, 0, 1, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( m ) {\r\n\r\n\t\tthis.elements.set( m.elements );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractPosition: function ( m ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\r\n\t\treturn this.copyPosition( m );\r\n\r\n\t},\r\n\r\n\tcopyPosition: function ( m ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tte[ 12 ] = me[ 12 ];\r\n\t\tte[ 13 ] = me[ 13 ];\r\n\t\tte[ 14 ] = me[ 14 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractBasis: function ( xAxis, yAxis, zAxis ) {\r\n \r\n\t\tvar te = this.elements;\r\n \r\n\t\txAxis.set( te[ 0 ], te[ 1 ], te[ 2 ] );\r\n\t\tyAxis.set( te[ 4 ], te[ 5 ], te[ 6 ] );\r\n\t\tzAxis.set( te[ 8 ], te[ 9 ], te[ 10 ] );\r\n \r\n\t\treturn this;\r\n \t\t\r\n\t},\r\n \r\n\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\r\n\r\n\t\tthis.set(\r\n\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\r\n\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\r\n\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\r\n\t\t\t0,       0,       0,       1\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\textractRotation: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( m ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\tvar me = m.elements;\r\n\r\n\t\t\tvar scaleX = 1 / v1.set( me[ 0 ], me[ 1 ], me[ 2 ] ).length();\r\n\t\t\tvar scaleY = 1 / v1.set( me[ 4 ], me[ 5 ], me[ 6 ] ).length();\r\n\t\t\tvar scaleZ = 1 / v1.set( me[ 8 ], me[ 9 ], me[ 10 ] ).length();\r\n\r\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\r\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\r\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\r\n\r\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\r\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\r\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\r\n\r\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\r\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\r\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeRotationFromEuler: function ( euler ) {\r\n\r\n\t\tif ( euler instanceof THREE.Euler === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Matrix: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\r\n\r\n\t\t}\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = euler.x, y = euler.y, z = euler.z;\r\n\t\tvar a = Math.cos( x ), b = Math.sin( x );\r\n\t\tvar c = Math.cos( y ), d = Math.sin( y );\r\n\t\tvar e = Math.cos( z ), f = Math.sin( z );\r\n\r\n\t\tif ( euler.order === 'XYZ' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - c * f;\r\n\t\t\tte[ 8 ] = d;\r\n\r\n\t\t\tte[ 1 ] = af + be * d;\r\n\t\t\tte[ 5 ] = ae - bf * d;\r\n\t\t\tte[ 9 ] = - b * c;\r\n\r\n\t\t\tte[ 2 ] = bf - ae * d;\r\n\t\t\tte[ 6 ] = be + af * d;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YXZ' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce + df * b;\r\n\t\t\tte[ 4 ] = de * b - cf;\r\n\t\t\tte[ 8 ] = a * d;\r\n\r\n\t\t\tte[ 1 ] = a * f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b;\r\n\r\n\t\t\tte[ 2 ] = cf * b - de;\r\n\t\t\tte[ 6 ] = df + ce * b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZXY' ) {\r\n\r\n\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\r\n\r\n\t\t\tte[ 0 ] = ce - df * b;\r\n\t\t\tte[ 4 ] = - a * f;\r\n\t\t\tte[ 8 ] = de + cf * b;\r\n\r\n\t\t\tte[ 1 ] = cf + de * b;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = df - ce * b;\r\n\r\n\t\t\tte[ 2 ] = - a * d;\r\n\t\t\tte[ 6 ] = b;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'ZYX' ) {\r\n\r\n\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = be * d - af;\r\n\t\t\tte[ 8 ] = ae * d + bf;\r\n\r\n\t\t\tte[ 1 ] = c * f;\r\n\t\t\tte[ 5 ] = bf * d + ae;\r\n\t\t\tte[ 9 ] = af * d - be;\r\n\r\n\t\t\tte[ 2 ] = - d;\r\n\t\t\tte[ 6 ] = b * c;\r\n\t\t\tte[ 10 ] = a * c;\r\n\r\n\t\t} else if ( euler.order === 'YZX' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = bd - ac * f;\r\n\t\t\tte[ 8 ] = bc * f + ad;\r\n\r\n\t\t\tte[ 1 ] = f;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = - b * e;\r\n\r\n\t\t\tte[ 2 ] = - d * e;\r\n\t\t\tte[ 6 ] = ad * f + bc;\r\n\t\t\tte[ 10 ] = ac - bd * f;\r\n\r\n\t\t} else if ( euler.order === 'XZY' ) {\r\n\r\n\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\r\n\r\n\t\t\tte[ 0 ] = c * e;\r\n\t\t\tte[ 4 ] = - f;\r\n\t\t\tte[ 8 ] = d * e;\r\n\r\n\t\t\tte[ 1 ] = ac * f + bd;\r\n\t\t\tte[ 5 ] = a * e;\r\n\t\t\tte[ 9 ] = ad * f - bc;\r\n\r\n\t\t\tte[ 2 ] = bc * f - ad;\r\n\t\t\tte[ 6 ] = b * e;\r\n\t\t\tte[ 10 ] = bd * f + ac;\r\n\r\n\t\t}\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\r\n\r\n\t\treturn this.makeRotationFromQuaternion( q );\r\n\r\n\t},\r\n\r\n\tmakeRotationFromQuaternion: function ( q ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar x = q.x, y = q.y, z = q.z, w = q.w;\r\n\t\tvar x2 = x + x, y2 = y + y, z2 = z + z;\r\n\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\r\n\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\r\n\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\r\n\r\n\t\tte[ 0 ] = 1 - ( yy + zz );\r\n\t\tte[ 4 ] = xy - wz;\r\n\t\tte[ 8 ] = xz + wy;\r\n\r\n\t\tte[ 1 ] = xy + wz;\r\n\t\tte[ 5 ] = 1 - ( xx + zz );\r\n\t\tte[ 9 ] = yz - wx;\r\n\r\n\t\tte[ 2 ] = xz - wy;\r\n\t\tte[ 6 ] = yz + wx;\r\n\t\tte[ 10 ] = 1 - ( xx + yy );\r\n\r\n\t\t// last column\r\n\t\tte[ 3 ] = 0;\r\n\t\tte[ 7 ] = 0;\r\n\t\tte[ 11 ] = 0;\r\n\r\n\t\t// bottom row\r\n\t\tte[ 12 ] = 0;\r\n\t\tte[ 13 ] = 0;\r\n\t\tte[ 14 ] = 0;\r\n\t\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tlookAt: function () {\r\n\r\n\t\tvar x = new THREE.Vector3();\r\n\t\tvar y = new THREE.Vector3();\r\n\t\tvar z = new THREE.Vector3();\r\n\r\n\t\treturn function ( eye, target, up ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tz.subVectors( eye, target ).normalize();\r\n\r\n\t\t\tif ( z.length() === 0 ) {\r\n\r\n\t\t\t\tz.z = 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\tif ( x.length() === 0 ) {\r\n\r\n\t\t\t\tz.x += 0.0001;\r\n\t\t\t\tx.crossVectors( up, z ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\ty.crossVectors( z, x );\r\n\r\n\r\n\t\t\tte[ 0 ] = x.x; te[ 4 ] = y.x; te[ 8 ] = z.x;\r\n\t\t\tte[ 1 ] = x.y; te[ 5 ] = y.y; te[ 9 ] = z.y;\r\n\t\t\tte[ 2 ] = x.z; te[ 6 ] = y.z; te[ 10 ] = z.z;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmultiply: function ( m, n ) {\r\n\r\n\t\tif ( n !== undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\r\n\t\t\treturn this.multiplyMatrices( m, n );\r\n\r\n\t\t}\r\n\r\n\t\treturn this.multiplyMatrices( this, m );\r\n\r\n\t},\r\n\r\n\tmultiplyMatrices: function ( a, b ) {\r\n\r\n\t\tvar ae = a.elements;\r\n\t\tvar be = b.elements;\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\r\n\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\r\n\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\r\n\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\r\n\r\n\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\r\n\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\r\n\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\r\n\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\r\n\r\n\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\r\n\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\r\n\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\r\n\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\r\n\r\n\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\r\n\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\r\n\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\r\n\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\r\n\r\n\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\r\n\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\r\n\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\r\n\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\r\n\r\n\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\r\n\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\r\n\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\r\n\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyToArray: function ( a, b, r ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tthis.multiplyMatrices( a, b );\r\n\r\n\t\tr[ 0 ] = te[ 0 ]; r[ 1 ] = te[ 1 ]; r[ 2 ] = te[ 2 ]; r[ 3 ] = te[ 3 ];\r\n\t\tr[ 4 ] = te[ 4 ]; r[ 5 ] = te[ 5 ]; r[ 6 ] = te[ 6 ]; r[ 7 ] = te[ 7 ];\r\n\t\tr[ 8 ]  = te[ 8 ]; r[ 9 ]  = te[ 9 ]; r[ 10 ] = te[ 10 ]; r[ 11 ] = te[ 11 ];\r\n\t\tr[ 12 ] = te[ 12 ]; r[ 13 ] = te[ 13 ]; r[ 14 ] = te[ 14 ]; r[ 15 ] = te[ 15 ];\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyScalar: function ( s ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\r\n\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\r\n\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\r\n\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmultiplyVector3: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) or vector.applyProjection( matrix ) instead.' );\r\n\t\treturn vector.applyProjection( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector4: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tmultiplyVector3Array: function ( a ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .multiplyVector3Array() has been renamed. Use matrix.applyToVector3Array( array ) instead.' );\r\n\t\treturn this.applyToVector3Array( a );\r\n\r\n\t},\r\n\r\n\tapplyToVector3Array: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( array, offset, length ) {\r\n\r\n\t\t\tif ( offset === undefined ) offset = 0;\r\n\t\t\tif ( length === undefined ) length = array.length;\r\n\r\n\t\t\tfor ( var i = 0, j = offset; i < length; i += 3, j += 3 ) {\r\n\r\n\t\t\t\tv1.x = array[ j ];\r\n\t\t\t\tv1.y = array[ j + 1 ];\r\n\t\t\t\tv1.z = array[ j + 2 ];\r\n\r\n\t\t\t\tv1.applyMatrix4( this );\r\n\r\n\t\t\t\tarray[ j ]     = v1.x;\r\n\t\t\t\tarray[ j + 1 ] = v1.y;\r\n\t\t\t\tarray[ j + 2 ] = v1.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateAxis: function ( v ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\r\n\r\n\t\tv.transformDirection( this );\r\n\r\n\t},\r\n\r\n\tcrossVector: function ( vector ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\r\n\t\treturn vector.applyMatrix4( this );\r\n\r\n\t},\r\n\r\n\tdeterminant: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\r\n\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\r\n\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\r\n\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\r\n\r\n\t\t//TODO: make this more efficient\r\n\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\r\n\r\n\t\treturn (\r\n\t\t\tn41 * (\r\n\t\t\t\t+ n14 * n23 * n32\r\n\t\t\t\t - n13 * n24 * n32\r\n\t\t\t\t - n14 * n22 * n33\r\n\t\t\t\t + n12 * n24 * n33\r\n\t\t\t\t + n13 * n22 * n34\r\n\t\t\t\t - n12 * n23 * n34\r\n\t\t\t) +\r\n\t\t\tn42 * (\r\n\t\t\t\t+ n11 * n23 * n34\r\n\t\t\t\t - n11 * n24 * n33\r\n\t\t\t\t + n14 * n21 * n33\r\n\t\t\t\t - n13 * n21 * n34\r\n\t\t\t\t + n13 * n24 * n31\r\n\t\t\t\t - n14 * n23 * n31\r\n\t\t\t) +\r\n\t\t\tn43 * (\r\n\t\t\t\t+ n11 * n24 * n32\r\n\t\t\t\t - n11 * n22 * n34\r\n\t\t\t\t - n14 * n21 * n32\r\n\t\t\t\t + n12 * n21 * n34\r\n\t\t\t\t + n14 * n22 * n31\r\n\t\t\t\t - n12 * n24 * n31\r\n\t\t\t) +\r\n\t\t\tn44 * (\r\n\t\t\t\t- n13 * n22 * n31\r\n\t\t\t\t - n11 * n23 * n32\r\n\t\t\t\t + n11 * n22 * n33\r\n\t\t\t\t + n13 * n21 * n32\r\n\t\t\t\t - n12 * n21 * n33\r\n\t\t\t\t + n12 * n23 * n31\r\n\t\t\t)\r\n\r\n\t\t);\r\n\r\n\t},\r\n\r\n\ttranspose: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar tmp;\r\n\r\n\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\r\n\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\r\n\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\r\n\r\n\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\r\n\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\r\n\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tflattenToArrayOffset: function ( array, offset ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tarray[ offset     ] = te[ 0 ];\r\n\t\tarray[ offset + 1 ] = te[ 1 ];\r\n\t\tarray[ offset + 2 ] = te[ 2 ];\r\n\t\tarray[ offset + 3 ] = te[ 3 ];\r\n\r\n\t\tarray[ offset + 4 ] = te[ 4 ];\r\n\t\tarray[ offset + 5 ] = te[ 5 ];\r\n\t\tarray[ offset + 6 ] = te[ 6 ];\r\n\t\tarray[ offset + 7 ] = te[ 7 ];\r\n\r\n\t\tarray[ offset + 8 ]  = te[ 8 ];\r\n\t\tarray[ offset + 9 ]  = te[ 9 ];\r\n\t\tarray[ offset + 10 ] = te[ 10 ];\r\n\t\tarray[ offset + 11 ] = te[ 11 ];\r\n\r\n\t\tarray[ offset + 12 ] = te[ 12 ];\r\n\t\tarray[ offset + 13 ] = te[ 13 ];\r\n\t\tarray[ offset + 14 ] = te[ 14 ];\r\n\t\tarray[ offset + 15 ] = te[ 15 ];\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tgetPosition: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\r\n\r\n\t\t\tvar te = this.elements;\r\n\t\t\treturn v1.set( te[ 12 ], te[ 13 ], te[ 14 ] );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tsetPosition: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tte[ 12 ] = v.x;\r\n\t\tte[ 13 ] = v.y;\r\n\t\tte[ 14 ] = v.z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetInverse: function ( m, throwOnInvertible ) {\r\n\r\n\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\r\n\t\tvar te = this.elements;\r\n\t\tvar me = m.elements;\r\n\r\n\t\tvar n11 = me[ 0 ], n12 = me[ 4 ], n13 = me[ 8 ], n14 = me[ 12 ];\r\n\t\tvar n21 = me[ 1 ], n22 = me[ 5 ], n23 = me[ 9 ], n24 = me[ 13 ];\r\n\t\tvar n31 = me[ 2 ], n32 = me[ 6 ], n33 = me[ 10 ], n34 = me[ 14 ];\r\n\t\tvar n41 = me[ 3 ], n42 = me[ 7 ], n43 = me[ 11 ], n44 = me[ 15 ];\r\n\r\n\t\tte[ 0 ] = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44;\r\n\t\tte[ 4 ] = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44;\r\n\t\tte[ 8 ] = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44;\r\n\t\tte[ 12 ] = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\r\n\t\tte[ 1 ] = n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44;\r\n\t\tte[ 5 ] = n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44;\r\n\t\tte[ 9 ] = n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44;\r\n\t\tte[ 13 ] = n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34;\r\n\t\tte[ 2 ] = n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44;\r\n\t\tte[ 6 ] = n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44;\r\n\t\tte[ 10 ] = n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44;\r\n\t\tte[ 14 ] = n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34;\r\n\t\tte[ 3 ] = n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43;\r\n\t\tte[ 7 ] = n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43;\r\n\t\tte[ 11 ] = n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43;\r\n\t\tte[ 15 ] = n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33;\r\n\r\n\t\tvar det = n11 * te[ 0 ] + n21 * te[ 4 ] + n31 * te[ 8 ] + n41 * te[ 12 ];\r\n\r\n\t\tif ( det == 0 ) {\r\n\r\n\t\t\tvar msg = \"THREE.Matrix4.getInverse(): can't invert matrix, determinant is 0\";\r\n\r\n\t\t\tif ( throwOnInvertible || false ) {\r\n\r\n\t\t\t\tthrow new Error( msg );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.warn( msg );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.identity();\r\n\r\n\t\t\treturn this;\r\n\t\t}\r\n\r\n\t\tthis.multiplyScalar( 1 / det );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( v ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .translate() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateX: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateX() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateY: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateY() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateZ: function ( angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\r\n\r\n\t},\r\n\r\n\trotateByAxis: function ( axis, angle ) {\r\n\r\n\t\tTHREE.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\r\n\r\n\t},\r\n\r\n\tscale: function ( v ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = v.x, y = v.y, z = v.z;\r\n\r\n\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\r\n\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\r\n\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\r\n\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tgetMaxScaleOnAxis: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\r\n\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\r\n\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\r\n\r\n\t\treturn Math.sqrt( Math.max( scaleXSq, Math.max( scaleYSq, scaleZSq ) ) );\r\n\r\n\t},\r\n\r\n\tmakeTranslation: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0, 0, x,\r\n\t\t\t0, 1, 0, y,\r\n\t\t\t0, 0, 1, z,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationX: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t1, 0,  0, 0,\r\n\t\t\t0, c, - s, 0,\r\n\t\t\t0, s,  c, 0,\r\n\t\t\t0, 0,  0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationY: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\t c, 0, s, 0,\r\n\t\t\t 0, 1, 0, 0,\r\n\t\t\t- s, 0, c, 0,\r\n\t\t\t 0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationZ: function ( theta ) {\r\n\r\n\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tc, - s, 0, 0,\r\n\t\t\ts,  c, 0, 0,\r\n\t\t\t0,  0, 1, 0,\r\n\t\t\t0,  0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakeRotationAxis: function ( axis, angle ) {\r\n\r\n\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\r\n\r\n\t\tvar c = Math.cos( angle );\r\n\t\tvar s = Math.sin( angle );\r\n\t\tvar t = 1 - c;\r\n\t\tvar x = axis.x, y = axis.y, z = axis.z;\r\n\t\tvar tx = t * x, ty = t * y;\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\r\n\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\r\n\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\t return this;\r\n\r\n\t},\r\n\r\n\tmakeScale: function ( x, y, z ) {\r\n\r\n\t\tthis.set(\r\n\r\n\t\t\tx, 0, 0, 0,\r\n\t\t\t0, y, 0, 0,\r\n\t\t\t0, 0, z, 0,\r\n\t\t\t0, 0, 0, 1\r\n\r\n\t\t);\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcompose: function ( position, quaternion, scale ) {\r\n\r\n\t\tthis.makeRotationFromQuaternion( quaternion );\r\n\t\tthis.scale( scale );\r\n\t\tthis.setPosition( position );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdecompose: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( position, quaternion, scale ) {\r\n\r\n\t\t\tvar te = this.elements;\r\n\r\n\t\t\tvar sx = vector.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\r\n\t\t\tvar sy = vector.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\r\n\t\t\tvar sz = vector.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\r\n\r\n\t\t\t// if determine is negative, we need to invert one scale\r\n\t\t\tvar det = this.determinant();\r\n\t\t\tif ( det < 0 ) {\r\n\t\t\t\tsx = - sx;\r\n\t\t\t}\r\n\r\n\t\t\tposition.x = te[ 12 ];\r\n\t\t\tposition.y = te[ 13 ];\r\n\t\t\tposition.z = te[ 14 ];\r\n\r\n\t\t\t// scale the rotation part\r\n\r\n\t\t\tmatrix.elements.set( this.elements ); // at this point matrix is incomplete so we can't use .copy()\r\n\r\n\t\t\tvar invSX = 1 / sx;\r\n\t\t\tvar invSY = 1 / sy;\r\n\t\t\tvar invSZ = 1 / sz;\r\n\r\n\t\t\tmatrix.elements[ 0 ] *= invSX;\r\n\t\t\tmatrix.elements[ 1 ] *= invSX;\r\n\t\t\tmatrix.elements[ 2 ] *= invSX;\r\n\r\n\t\t\tmatrix.elements[ 4 ] *= invSY;\r\n\t\t\tmatrix.elements[ 5 ] *= invSY;\r\n\t\t\tmatrix.elements[ 6 ] *= invSY;\r\n\r\n\t\t\tmatrix.elements[ 8 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 9 ] *= invSZ;\r\n\t\t\tmatrix.elements[ 10 ] *= invSZ;\r\n\r\n\t\t\tquaternion.setFromRotationMatrix( matrix );\r\n\r\n\t\t\tscale.x = sx;\r\n\t\t\tscale.y = sy;\r\n\t\t\tscale.z = sz;\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar x = 2 * near / ( right - left );\r\n\t\tvar y = 2 * near / ( top - bottom );\r\n\r\n\t\tvar a = ( right + left ) / ( right - left );\r\n\t\tvar b = ( top + bottom ) / ( top - bottom );\r\n\t\tvar c = - ( far + near ) / ( far - near );\r\n\t\tvar d = - 2 * far * near / ( far - near );\r\n\r\n\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tmakePerspective: function ( fov, aspect, near, far ) {\r\n\r\n\t\tvar ymax = near * Math.tan( THREE.Math.degToRad( fov * 0.5 ) );\r\n\t\tvar ymin = - ymax;\r\n\t\tvar xmin = ymin * aspect;\r\n\t\tvar xmax = ymax * aspect;\r\n\r\n\t\treturn this.makeFrustum( xmin, xmax, ymin, ymax, near, far );\r\n\r\n\t},\r\n\r\n\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\r\n\r\n\t\tvar te = this.elements;\r\n\t\tvar w = right - left;\r\n\t\tvar h = top - bottom;\r\n\t\tvar p = far - near;\r\n\r\n\t\tvar x = ( right + left ) / w;\r\n\t\tvar y = ( top + bottom ) / h;\r\n\t\tvar z = ( far + near ) / p;\r\n\r\n\t\tte[ 0 ] = 2 / w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\r\n\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 / h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\r\n\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 / p;\tte[ 14 ] = - z;\r\n\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tfromArray: function ( array ) {\r\n\r\n\t\tthis.elements.set( array );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttoArray: function () {\r\n\r\n\t\tvar te = this.elements;\r\n\r\n\t\treturn [\r\n\t\t\tte[ 0 ], te[ 1 ], te[ 2 ], te[ 3 ],\r\n\t\t\tte[ 4 ], te[ 5 ], te[ 6 ], te[ 7 ],\r\n\t\t\tte[ 8 ], te[ 9 ], te[ 10 ], te[ 11 ],\r\n\t\t\tte[ 12 ], te[ 13 ], te[ 14 ], te[ 15 ]\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Matrix4().fromArray( this.elements );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Ray.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Ray = function ( origin, direction ) {\r\n\r\n\tthis.origin = ( origin !== undefined ) ? origin : new THREE.Vector3();\r\n\tthis.direction = ( direction !== undefined ) ? direction : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Ray.prototype = {\r\n\r\n\tconstructor: THREE.Ray,\r\n\r\n\tset: function ( origin, direction ) {\r\n\r\n\t\tthis.origin.copy( origin );\r\n\t\tthis.direction.copy( direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( ray ) {\r\n\r\n\t\tthis.origin.copy( ray.origin );\r\n\t\tthis.direction.copy( ray.direction );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tat: function ( t, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( t ).add( this.origin );\r\n\r\n\t},\r\n\r\n\trecast: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( t ) {\r\n\r\n\t\t\tthis.origin.copy( this.at( t, v1 ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tclosestPointToPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.subVectors( point, this.origin );\r\n\t\tvar directionDistance = result.dot( this.direction );\r\n\r\n\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\treturn result.copy( this.origin );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( point ) {\r\n\r\n\t\t\tvar directionDistance = v1.subVectors( point, this.origin ).dot( this.direction );\r\n\r\n\t\t\t// point behind the ray\r\n\r\n\t\t\tif ( directionDistance < 0 ) {\r\n\r\n\t\t\t\treturn this.origin.distanceTo( point );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tv1.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\r\n\r\n\t\t\treturn v1.distanceTo( point );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tdistanceSqToSegment: function () {\r\n\r\n\t\tvar segCenter = new THREE.Vector3();\r\n\t\tvar segDir = new THREE.Vector3();\r\n\t\tvar diff = new THREE.Vector3();\r\n\r\n\t\treturn function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Distance/Wm5DistRay3Segment3.cpp\r\n\t\t\t// It returns the min distance between the ray and the segment\r\n\t\t\t// defined by v0 and v1\r\n\t\t\t// It can also set two optional targets :\r\n\t\t\t// - The closest point on the ray\r\n\t\t\t// - The closest point on the segment\r\n\r\n\t\t\tsegCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\r\n\t\t\tsegDir.copy( v1 ).sub( v0 ).normalize();\r\n\t\t\tdiff.copy( this.origin ).sub( segCenter );\r\n\r\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\r\n\t\t\tvar a01 = - this.direction.dot( segDir );\r\n\t\t\tvar b0 = diff.dot( this.direction );\r\n\t\t\tvar b1 = - diff.dot( segDir );\r\n\t\t\tvar c = diff.lengthSq();\r\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\r\n\t\t\tvar s0, s1, sqrDist, extDet;\r\n\r\n\t\t\tif ( det > 0 ) {\r\n\r\n\t\t\t\t// The ray and segment are not parallel.\r\n\r\n\t\t\t\ts0 = a01 * b1 - b0;\r\n\t\t\t\ts1 = a01 * b0 - b1;\r\n\t\t\t\textDet = segExtent * det;\r\n\r\n\t\t\t\tif ( s0 >= 0 ) {\r\n\r\n\t\t\t\t\tif ( s1 >= - extDet ) {\r\n\r\n\t\t\t\t\t\tif ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t\t// region 0\r\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\r\n\r\n\t\t\t\t\t\t\tvar invDet = 1 / det;\r\n\t\t\t\t\t\t\ts0 *= invDet;\r\n\t\t\t\t\t\t\ts1 *= invDet;\r\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t// region 1\r\n\r\n\t\t\t\t\t\t\ts1 = segExtent;\r\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 5\r\n\r\n\t\t\t\t\t\ts1 = - segExtent;\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( s1 <= - extDet ) {\r\n\r\n\t\t\t\t\t\t// region 4\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else if ( s1 <= extDet ) {\r\n\r\n\t\t\t\t\t\t// region 3\r\n\r\n\t\t\t\t\t\ts0 = 0;\r\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t// region 2\r\n\r\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\r\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\r\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// Ray and segment are parallel.\r\n\r\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\r\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\r\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnRay ) {\r\n\r\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( optionalPointOnSegment ) {\r\n\r\n\t\t\t\toptionalPointOnSegment.copy( segDir ).multiplyScalar( s1 ).add( segCenter );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn sqrDist;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tisIntersectionSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) <= sphere.radius;\r\n\r\n\t},\r\n\r\n\tintersectSphere: function () {\r\n\r\n\t\t// from http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-sphere-intersection/\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( sphere, optionalTarget ) {\r\n\r\n\t\t\tv1.subVectors( sphere.center, this.origin );\r\n\r\n\t\t\tvar tca = v1.dot( this.direction );\r\n\r\n\t\t\tvar d2 = v1.dot( v1 ) - tca * tca;\r\n\r\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\r\n\r\n\t\t\tif ( d2 > radius2 ) return null;\r\n\r\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\r\n\r\n\t\t\t// t0 = first intersect point - entrance on front of sphere\r\n\t\t\tvar t0 = tca - thc;\r\n\r\n\t\t\t// t1 = second intersect point - exit point on back of sphere\r\n\t\t\tvar t1 = tca + thc;\r\n\r\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\r\n\t\t\tif ( t0 < 0 && t1 < 0 ) return null;\r\n\r\n\t\t\t// test to see if t0 is behind the ray:\r\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\r\n\t\t\t// in order to always return an intersect point that is in front of the ray.\r\n\t\t\tif ( t0 < 0 ) return this.at( t1, optionalTarget );\r\n\r\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0 \r\n\t\t\treturn this.at( t0, optionalTarget );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tisIntersectionPlane: function ( plane ) {\r\n\r\n\t\t// check if the ray lies on the plane first\r\n\r\n\t\tvar distToPoint = plane.distanceToPoint( this.origin );\r\n\r\n\t\tif ( distToPoint === 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\r\n\t\tif ( denominator * distToPoint < 0 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\t// ray origin is behind the plane (and is pointing behind it)\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tdistanceToPlane: function ( plane ) {\r\n\r\n\t\tvar denominator = plane.normal.dot( this.direction );\r\n\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t// line is coplanar, return origin\r\n\t\t\tif ( plane.distanceToPoint( this.origin ) == 0 ) {\r\n\r\n\t\t\t\treturn 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\r\n\r\n\t\t\treturn null;\r\n\r\n\t\t}\r\n\r\n\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\r\n\r\n\t\t// Return if the ray never intersects the plane\r\n\r\n\t\treturn t >= 0 ? t :  null;\r\n\r\n\t},\r\n\r\n\tintersectPlane: function ( plane, optionalTarget ) {\r\n\r\n\t\tvar t = this.distanceToPlane( plane );\r\n\r\n\t\tif ( t === null ) {\r\n\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\treturn this.at( t, optionalTarget );\r\n\r\n\t},\r\n\r\n\tisIntersectionBox: function () {\r\n\r\n\t\tvar v = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\treturn this.intersectBox( box, v ) !== null;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectBox: function ( box, optionalTarget ) {\r\n\r\n\t\t// http://www.scratchapixel.com/lessons/3d-basic-lessons/lesson-7-intersecting-simple-shapes/ray-box-intersection/\r\n\r\n\t\tvar tmin,tmax,tymin,tymax,tzmin,tzmax;\r\n\r\n\t\tvar invdirx = 1 / this.direction.x,\r\n\t\t\tinvdiry = 1 / this.direction.y,\r\n\t\t\tinvdirz = 1 / this.direction.z;\r\n\r\n\t\tvar origin = this.origin;\r\n\r\n\t\tif ( invdirx >= 0 ) {\r\n\r\n\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\r\n\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\r\n\t\t}\r\n\r\n\t\tif ( invdiry >= 0 ) {\r\n\r\n\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\r\n\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) return null;\r\n\r\n\t\t// These lines also handle the case where tmin or tmax is NaN\r\n\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\r\n\r\n\t\tif ( tymin > tmin || tmin !== tmin ) tmin = tymin;\r\n\r\n\t\tif ( tymax < tmax || tmax !== tmax ) tmax = tymax;\r\n\r\n\t\tif ( invdirz >= 0 ) {\r\n\r\n\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\r\n\r\n\t\t} else {\r\n\r\n\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\r\n\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\r\n\t\t}\r\n\r\n\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) return null;\r\n\r\n\t\tif ( tzmin > tmin || tmin !== tmin ) tmin = tzmin;\r\n\r\n\t\tif ( tzmax < tmax || tmax !== tmax ) tmax = tzmax;\r\n\r\n\t\t//return point closest to the ray (positive side)\r\n\r\n\t\tif ( tmax < 0 ) return null;\r\n\r\n\t\treturn this.at( tmin >= 0 ? tmin : tmax, optionalTarget );\r\n\r\n\t},\r\n\r\n\tintersectTriangle: function () {\r\n\r\n\t\t// Compute the offset origin, edges, and normal.\r\n\t\tvar diff = new THREE.Vector3();\r\n\t\tvar edge1 = new THREE.Vector3();\r\n\t\tvar edge2 = new THREE.Vector3();\r\n\t\tvar normal = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c, backfaceCulling, optionalTarget ) {\r\n\r\n\t\t\t// from http://www.geometrictools.com/LibMathematics/Intersection/Wm5IntrRay3Triangle3.cpp\r\n\r\n\t\t\tedge1.subVectors( b, a );\r\n\t\t\tedge2.subVectors( c, a );\r\n\t\t\tnormal.crossVectors( edge1, edge2 );\r\n\r\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\r\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\r\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\r\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\r\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\r\n\t\t\tvar DdN = this.direction.dot( normal );\r\n\t\t\tvar sign;\r\n\r\n\t\t\tif ( DdN > 0 ) {\r\n\r\n\t\t\t\tif ( backfaceCulling ) return null;\r\n\t\t\t\tsign = 1;\r\n\r\n\t\t\t} else if ( DdN < 0 ) {\r\n\r\n\t\t\t\tsign = - 1;\r\n\t\t\t\tDdN = - DdN;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdiff.subVectors( this.origin, a );\r\n\t\t\tvar DdQxE2 = sign * this.direction.dot( edge2.crossVectors( diff, edge2 ) );\r\n\r\n\t\t\t// b1 < 0, no intersection\r\n\t\t\tif ( DdQxE2 < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar DdE1xQ = sign * this.direction.dot( edge1.cross( diff ) );\r\n\r\n\t\t\t// b2 < 0, no intersection\r\n\t\t\tif ( DdE1xQ < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// b1+b2 > 1, no intersection\r\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Line intersects triangle, check if ray does.\r\n\t\t\tvar QdN = - sign * diff.dot( normal );\r\n\r\n\t\t\t// t < 0, no intersection\r\n\t\t\tif ( QdN < 0 ) {\r\n\r\n\t\t\t\treturn null;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Ray intersects triangle.\r\n\t\t\treturn this.at( QdN / DdN, optionalTarget );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tapplyMatrix4: function ( matrix4 ) {\r\n\r\n\t\tthis.direction.add( this.origin ).applyMatrix4( matrix4 );\r\n\t\tthis.origin.applyMatrix4( matrix4 );\r\n\t\tthis.direction.sub( this.origin );\r\n\t\tthis.direction.normalize();\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tequals: function ( ray ) {\r\n\r\n\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Ray().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Sphere.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Sphere = function ( center, radius ) {\r\n\r\n\tthis.center = ( center !== undefined ) ? center : new THREE.Vector3();\r\n\tthis.radius = ( radius !== undefined ) ? radius : 0;\r\n\r\n};\r\n\r\nTHREE.Sphere.prototype = {\r\n\r\n\tconstructor: THREE.Sphere,\r\n\r\n\tset: function ( center, radius ) {\r\n\r\n\t\tthis.center.copy( center );\r\n\t\tthis.radius = radius;\r\n\r\n\t\treturn this;\r\n\t},\r\n\r\n\tsetFromPoints: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\r\n\t\treturn function ( points, optionalCenter ) {\r\n\r\n\t\t\tvar center = this.center;\r\n\r\n\t\t\tif ( optionalCenter !== undefined ) {\r\n\r\n\t\t\t\tcenter.copy( optionalCenter );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbox.setFromPoints( points ).center( center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tcopy: function ( sphere ) {\r\n\r\n\t\tthis.center.copy( sphere.center );\r\n\t\tthis.radius = sphere.radius;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tempty: function () {\r\n\r\n\t\treturn ( this.radius <= 0 );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn ( point.distanceTo( this.center ) - this.radius );\r\n\r\n\t},\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar radiusSum = this.radius + sphere.radius;\r\n\r\n\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\r\n\r\n\t},\r\n\r\n\tclampPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\tresult.copy( point );\r\n\r\n\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\r\n\r\n\t\t\tresult.sub( this.center ).normalize();\r\n\t\t\tresult.multiplyScalar( this.radius ).add( this.center );\r\n\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\r\n\t},\r\n\r\n\tgetBoundingBox: function ( optionalTarget ) {\r\n\r\n\t\tvar box = optionalTarget || new THREE.Box3();\r\n\r\n\t\tbox.set( this.center, this.center );\r\n\t\tbox.expandByScalar( this.radius );\r\n\r\n\t\treturn box;\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function ( matrix ) {\r\n\r\n\t\tthis.center.applyMatrix4( matrix );\r\n\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.center.add( offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( sphere ) {\r\n\r\n\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Sphere().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Frustum.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Frustum = function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\tthis.planes = [\r\n\r\n\t\t( p0 !== undefined ) ? p0 : new THREE.Plane(),\r\n\t\t( p1 !== undefined ) ? p1 : new THREE.Plane(),\r\n\t\t( p2 !== undefined ) ? p2 : new THREE.Plane(),\r\n\t\t( p3 !== undefined ) ? p3 : new THREE.Plane(),\r\n\t\t( p4 !== undefined ) ? p4 : new THREE.Plane(),\r\n\t\t( p5 !== undefined ) ? p5 : new THREE.Plane()\r\n\r\n\t];\r\n\r\n};\r\n\r\nTHREE.Frustum.prototype = {\r\n\r\n\tconstructor: THREE.Frustum,\r\n\r\n\tset: function ( p0, p1, p2, p3, p4, p5 ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tplanes[ 0 ].copy( p0 );\r\n\t\tplanes[ 1 ].copy( p1 );\r\n\t\tplanes[ 2 ].copy( p2 );\r\n\t\tplanes[ 3 ].copy( p3 );\r\n\t\tplanes[ 4 ].copy( p4 );\r\n\t\tplanes[ 5 ].copy( p5 );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( frustum ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromMatrix: function ( m ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar me = m.elements;\r\n\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\r\n\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\r\n\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\r\n\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\r\n\r\n\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\r\n\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\r\n\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\r\n\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\r\n\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\r\n\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tintersectsObject: function () {\r\n\r\n\t\tvar sphere = new THREE.Sphere();\r\n\r\n\t\treturn function ( object ) {\r\n\r\n\t\t\tvar geometry = object.geometry;\r\n\r\n\t\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t\tsphere.copy( geometry.boundingSphere );\r\n\t\t\tsphere.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\treturn this.intersectsSphere( sphere );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tintersectsSphere: function ( sphere ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\t\tvar center = sphere.center;\r\n\t\tvar negRadius = - sphere.radius;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tvar distance = planes[ i ].distanceToPoint( center );\r\n\r\n\t\t\tif ( distance < negRadius ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tintersectsBox: function () {\r\n\r\n\t\tvar p1 = new THREE.Vector3(),\r\n\t\t\tp2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( box ) {\r\n\r\n\t\t\tvar planes = this.planes;\r\n\r\n\t\t\tfor ( var i = 0; i < 6 ; i ++ ) {\r\n\r\n\t\t\t\tvar plane = planes[ i ];\r\n\r\n\t\t\t\tp1.x = plane.normal.x > 0 ? box.min.x : box.max.x;\r\n\t\t\t\tp2.x = plane.normal.x > 0 ? box.max.x : box.min.x;\r\n\t\t\t\tp1.y = plane.normal.y > 0 ? box.min.y : box.max.y;\r\n\t\t\t\tp2.y = plane.normal.y > 0 ? box.max.y : box.min.y;\r\n\t\t\t\tp1.z = plane.normal.z > 0 ? box.min.z : box.max.z;\r\n\t\t\t\tp2.z = plane.normal.z > 0 ? box.max.z : box.min.z;\r\n\r\n\t\t\t\tvar d1 = plane.distanceToPoint( p1 );\r\n\t\t\t\tvar d2 = plane.distanceToPoint( p2 );\r\n\r\n\t\t\t\t// if both outside plane, no intersection\r\n\r\n\t\t\t\tif ( d1 < 0 && d2 < 0 ) {\r\n\r\n\t\t\t\t\treturn false;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\tvar planes = this.planes;\r\n\r\n\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\r\n\r\n\t\t\t\treturn false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Frustum().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Plane.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Plane = function ( normal, constant ) {\r\n\r\n\tthis.normal = ( normal !== undefined ) ? normal : new THREE.Vector3( 1, 0, 0 );\r\n\tthis.constant = ( constant !== undefined ) ? constant : 0;\r\n\r\n};\r\n\r\nTHREE.Plane.prototype = {\r\n\r\n\tconstructor: THREE.Plane,\r\n\r\n\tset: function ( normal, constant ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetComponents: function ( x, y, z, w ) {\r\n\r\n\t\tthis.normal.set( x, y, z );\r\n\t\tthis.constant = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\r\n\r\n\t\tthis.normal.copy( normal );\r\n\t\tthis.constant = - point.dot( this.normal );\t// must be this.normal, not normal, as this.normal is normalized\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromCoplanarPoints: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\r\n\t\treturn function ( a, b, c ) {\r\n\r\n\t\t\tvar normal = v1.subVectors( c, b ).cross( v2.subVectors( a, b ) ).normalize();\r\n\r\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcopy: function ( plane ) {\r\n\r\n\t\tthis.normal.copy( plane.normal );\r\n\t\tthis.constant = plane.constant;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalize: function () {\r\n\r\n\t\t// Note: will lead to a divide by zero if the plane is invalid.\r\n\r\n\t\tvar inverseNormalLength = 1.0 / this.normal.length();\r\n\t\tthis.normal.multiplyScalar( inverseNormalLength );\r\n\t\tthis.constant *= inverseNormalLength;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnegate: function () {\r\n\r\n\t\tthis.constant *= - 1;\r\n\t\tthis.normal.negate();\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tdistanceToPoint: function ( point ) {\r\n\r\n\t\treturn this.normal.dot( point ) + this.constant;\r\n\r\n\t},\r\n\r\n\tdistanceToSphere: function ( sphere ) {\r\n\r\n\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\r\n\r\n\t},\r\n\r\n\tprojectPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn this.orthoPoint( point, optionalTarget ).sub( point ).negate();\r\n\r\n\t},\r\n\r\n\torthoPoint: function ( point, optionalTarget ) {\r\n\r\n\t\tvar perpendicularMagnitude = this.distanceToPoint( point );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( perpendicularMagnitude );\r\n\r\n\t},\r\n\r\n\tisIntersectionLine: function ( line ) {\r\n\r\n\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\r\n\r\n\t\tvar startSign = this.distanceToPoint( line.start );\r\n\t\tvar endSign = this.distanceToPoint( line.end );\r\n\r\n\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\r\n\r\n\t},\r\n\r\n\tintersectLine: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( line, optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tvar direction = line.delta( v1 );\r\n\r\n\t\t\tvar denominator = this.normal.dot( direction );\r\n\r\n\t\t\tif ( denominator == 0 ) {\r\n\r\n\t\t\t\t// line is coplanar, return origin\r\n\t\t\t\tif ( this.distanceToPoint( line.start ) == 0 ) {\r\n\r\n\t\t\t\t\treturn result.copy( line.start );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Unsure if this is the correct method to handle this case.\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\r\n\r\n\t\t\tif ( t < 0 || t > 1 ) {\r\n\r\n\t\t\t\treturn undefined;\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn result.copy( direction ).multiplyScalar( t ).add( line.start );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\r\n\tcoplanarPoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.copy( this.normal ).multiplyScalar( - this.constant );\r\n\r\n\t},\r\n\r\n\tapplyMatrix4: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\t\tvar v2 = new THREE.Vector3();\r\n\t\tvar m1 = new THREE.Matrix3();\r\n\r\n\t\treturn function ( matrix, optionalNormalMatrix ) {\r\n\r\n\t\t\t// compute new normal based on theory here:\r\n\t\t\t// http://www.songho.ca/opengl/gl_normaltransform.html\r\n\t\t\tvar normalMatrix = optionalNormalMatrix || m1.getNormalMatrix( matrix );\r\n\t\t\tvar newNormal = v1.copy( this.normal ).applyMatrix3( normalMatrix );\r\n\r\n\t\t\tvar newCoplanarPoint = this.coplanarPoint( v2 );\r\n\t\t\tnewCoplanarPoint.applyMatrix4( matrix );\r\n\r\n\t\t\tthis.setFromNormalAndCoplanarPoint( newNormal, newCoplanarPoint );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( offset ) {\r\n\r\n\t\tthis.constant = this.constant - offset.dot( this.normal );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tequals: function ( plane ) {\r\n\r\n\t\treturn plane.normal.equals( this.normal ) && ( plane.constant == this.constant );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Plane().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Math.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Math = {\r\n\r\n\tgenerateUUID: function () {\r\n\r\n\t\t// http://www.broofa.com/Tools/Math.uuid.htm\r\n\r\n\t\tvar chars = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz'.split( '' );\r\n\t\tvar uuid = new Array( 36 );\r\n\t\tvar rnd = 0, r;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tfor ( var i = 0; i < 36; i ++ ) {\r\n\r\n\t\t\t\tif ( i == 8 || i == 13 || i == 18 || i == 23 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '-';\r\n\r\n\t\t\t\t} else if ( i == 14 ) {\r\n\r\n\t\t\t\t\tuuid[ i ] = '4';\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tif ( rnd <= 0x02 ) rnd = 0x2000000 + ( Math.random() * 0x1000000 ) | 0;\r\n\t\t\t\t\tr = rnd & 0xf;\r\n\t\t\t\t\trnd = rnd >> 4;\r\n\t\t\t\t\tuuid[ i ] = chars[ ( i == 19 ) ? ( r & 0x3 ) | 0x8 : r ];\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn uuid.join( '' );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\t// Clamp value to range <a, b>\r\n\r\n\tclamp: function ( x, a, b ) {\r\n\r\n\t\treturn ( x < a ) ? a : ( ( x > b ) ? b : x );\r\n\r\n\t},\r\n\r\n\t// Clamp value to range <a, inf)\r\n\r\n\tclampBottom: function ( x, a ) {\r\n\r\n\t\treturn x < a ? a : x;\r\n\r\n\t},\r\n\r\n\t// Linear mapping from range <a1, a2> to range <b1, b2>\r\n\r\n\tmapLinear: function ( x, a1, a2, b1, b2 ) {\r\n\r\n\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\r\n\r\n\t},\r\n\r\n\t// http://en.wikipedia.org/wiki/Smoothstep\r\n\r\n\tsmoothstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * ( 3 - 2 * x );\r\n\r\n\t},\r\n\r\n\tsmootherstep: function ( x, min, max ) {\r\n\r\n\t\tif ( x <= min ) return 0;\r\n\t\tif ( x >= max ) return 1;\r\n\r\n\t\tx = ( x - min ) / ( max - min );\r\n\r\n\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\r\n\r\n\t},\r\n\r\n\t// Random float from <0, 1> with 16 bits of randomness\r\n\t// (standard Math.random() creates repetitive patterns when applied over larger space)\r\n\r\n\trandom16: function () {\r\n\r\n\t\treturn ( 65280 * Math.random() + 255 * Math.random() ) / 65535;\r\n\r\n\t},\r\n\r\n\t// Random integer from <low, high> interval\r\n\r\n\trandInt: function ( low, high ) {\r\n\r\n\t\treturn Math.floor( this.randFloat( low, high ) );\r\n\r\n\t},\r\n\r\n\t// Random float from <low, high> interval\r\n\r\n\trandFloat: function ( low, high ) {\r\n\r\n\t\treturn low + Math.random() * ( high - low );\r\n\r\n\t},\r\n\r\n\t// Random float from <-range/2, range/2> interval\r\n\r\n\trandFloatSpread: function ( range ) {\r\n\r\n\t\treturn range * ( 0.5 - Math.random() );\r\n\r\n\t},\r\n\r\n\tdegToRad: function () {\r\n\r\n\t\tvar degreeToRadiansFactor = Math.PI / 180;\r\n\r\n\t\treturn function ( degrees ) {\r\n\r\n\t\t\treturn degrees * degreeToRadiansFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tradToDeg: function () {\r\n\r\n\t\tvar radianToDegreesFactor = 180 / Math.PI;\r\n\r\n\t\treturn function ( radians ) {\r\n\r\n\t\t\treturn radians * radianToDegreesFactor;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tisPowerOfTwo: function ( value ) {\r\n\r\n\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\r\n\r\n\t},\r\n\r\n\tnextPowerOfTwo: function ( value ) {\r\n\r\n\t\tvalue --;\r\n\t\tvalue |= value >> 1;\r\n\t\tvalue |= value >> 2;\r\n\t\tvalue |= value >> 4;\r\n\t\tvalue |= value >> 8;\r\n\t\tvalue |= value >> 16;\r\n\t\tvalue ++;\r\n\r\n\t\treturn value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/math/Spline.js\r\n\r\n/**\r\n * Spline from Tween.js, slightly optimized (and trashed)\r\n * http://sole.github.com/tween.js/examples/05_spline.html\r\n *\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Spline = function ( points ) {\r\n\r\n\tthis.points = points;\r\n\r\n\tvar c = [], v3 = { x: 0, y: 0, z: 0 },\r\n\tpoint, intPoint, weight, w2, w3,\r\n\tpa, pb, pc, pd;\r\n\r\n\tthis.initFromArray = function ( a ) {\r\n\r\n\t\tthis.points = [];\r\n\r\n\t\tfor ( var i = 0; i < a.length; i ++ ) {\r\n\r\n\t\t\tthis.points[ i ] = { x: a[ i ][ 0 ], y: a[ i ][ 1 ], z: a[ i ][ 2 ] };\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.getPoint = function ( k ) {\r\n\r\n\t\tpoint = ( this.points.length - 1 ) * k;\r\n\t\tintPoint = Math.floor( point );\r\n\t\tweight = point - intPoint;\r\n\r\n\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\tc[ 1 ] = intPoint;\r\n\t\tc[ 2 ] = intPoint  > this.points.length - 2 ? this.points.length - 1 : intPoint + 1;\r\n\t\tc[ 3 ] = intPoint  > this.points.length - 3 ? this.points.length - 1 : intPoint + 2;\r\n\r\n\t\tpa = this.points[ c[ 0 ] ];\r\n\t\tpb = this.points[ c[ 1 ] ];\r\n\t\tpc = this.points[ c[ 2 ] ];\r\n\t\tpd = this.points[ c[ 3 ] ];\r\n\r\n\t\tw2 = weight * weight;\r\n\t\tw3 = weight * w2;\r\n\r\n\t\tv3.x = interpolate( pa.x, pb.x, pc.x, pd.x, weight, w2, w3 );\r\n\t\tv3.y = interpolate( pa.y, pb.y, pc.y, pd.y, weight, w2, w3 );\r\n\t\tv3.z = interpolate( pa.z, pb.z, pc.z, pd.z, weight, w2, w3 );\r\n\r\n\t\treturn v3;\r\n\r\n\t};\r\n\r\n\tthis.getControlPointsArray = function () {\r\n\r\n\t\tvar i, p, l = this.points.length,\r\n\t\t\tcoords = [];\r\n\r\n\t\tfor ( i = 0; i < l; i ++ ) {\r\n\r\n\t\t\tp = this.points[ i ];\r\n\t\t\tcoords[ i ] = [ p.x, p.y, p.z ];\r\n\r\n\t\t}\r\n\r\n\t\treturn coords;\r\n\r\n\t};\r\n\r\n\t// approximate length by summing linear segments\r\n\r\n\tthis.getLength = function ( nSubDivisions ) {\r\n\r\n\t\tvar i, index, nSamples, position,\r\n\t\t\tpoint = 0, intPoint = 0, oldIntPoint = 0,\r\n\t\t\toldPosition = new THREE.Vector3(),\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tchunkLengths = [],\r\n\t\t\ttotalLength = 0;\r\n\r\n\t\t// first point has 0 length\r\n\r\n\t\tchunkLengths[ 0 ] = 0;\r\n\r\n\t\tif ( ! nSubDivisions ) nSubDivisions = 100;\r\n\r\n\t\tnSamples = this.points.length * nSubDivisions;\r\n\r\n\t\toldPosition.copy( this.points[ 0 ] );\r\n\r\n\t\tfor ( i = 1; i < nSamples; i ++ ) {\r\n\r\n\t\t\tindex = i / nSamples;\r\n\r\n\t\t\tposition = this.getPoint( index );\r\n\t\t\ttmpVec.copy( position );\r\n\r\n\t\t\ttotalLength += tmpVec.distanceTo( oldPosition );\r\n\r\n\t\t\toldPosition.copy( position );\r\n\r\n\t\t\tpoint = ( this.points.length - 1 ) * index;\r\n\t\t\tintPoint = Math.floor( point );\r\n\r\n\t\t\tif ( intPoint != oldIntPoint ) {\r\n\r\n\t\t\t\tchunkLengths[ intPoint ] = totalLength;\r\n\t\t\t\toldIntPoint = intPoint;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// last point ends with total length\r\n\r\n\t\tchunkLengths[ chunkLengths.length ] = totalLength;\r\n\r\n\t\treturn { chunks: chunkLengths, total: totalLength };\r\n\r\n\t};\r\n\r\n\tthis.reparametrizeByArcLength = function ( samplingCoef ) {\r\n\r\n\t\tvar i, j,\r\n\t\t\tindex, indexCurrent, indexNext,\r\n\t\t\trealDistance,\r\n\t\t\tsampling, position,\r\n\t\t\tnewpoints = [],\r\n\t\t\ttmpVec = new THREE.Vector3(),\r\n\t\t\tsl = this.getLength();\r\n\r\n\t\tnewpoints.push( tmpVec.copy( this.points[ 0 ] ).clone() );\r\n\r\n\t\tfor ( i = 1; i < this.points.length; i ++ ) {\r\n\r\n\t\t\t//tmpVec.copy( this.points[ i - 1 ] );\r\n\t\t\t//linearDistance = tmpVec.distanceTo( this.points[ i ] );\r\n\r\n\t\t\trealDistance = sl.chunks[ i ] - sl.chunks[ i - 1 ];\r\n\r\n\t\t\tsampling = Math.ceil( samplingCoef * realDistance / sl.total );\r\n\r\n\t\t\tindexCurrent = ( i - 1 ) / ( this.points.length - 1 );\r\n\t\t\tindexNext = i / ( this.points.length - 1 );\r\n\r\n\t\t\tfor ( j = 1; j < sampling - 1; j ++ ) {\r\n\r\n\t\t\t\tindex = indexCurrent + j * ( 1 / sampling ) * ( indexNext - indexCurrent );\r\n\r\n\t\t\t\tposition = this.getPoint( index );\r\n\t\t\t\tnewpoints.push( tmpVec.copy( position ).clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnewpoints.push( tmpVec.copy( this.points[ i ] ).clone() );\r\n\r\n\t\t}\r\n\r\n\t\tthis.points = newpoints;\r\n\r\n\t};\r\n\r\n\t// Catmull-Rom\r\n\r\n\tfunction interpolate( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/math/Triangle.js\r\n\r\n/**\r\n * @author bhouston / http://exocortex.com\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Triangle = function ( a, b, c ) {\r\n\r\n\tthis.a = ( a !== undefined ) ? a : new THREE.Vector3();\r\n\tthis.b = ( b !== undefined ) ? b : new THREE.Vector3();\r\n\tthis.c = ( c !== undefined ) ? c : new THREE.Vector3();\r\n\r\n};\r\n\r\nTHREE.Triangle.normal = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\r\n\treturn function ( a, b, c, optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tresult.subVectors( c, b );\r\n\t\tv0.subVectors( a, b );\r\n\t\tresult.cross( v0 );\r\n\r\n\t\tvar resultLengthSq = result.lengthSq();\r\n\t\tif ( resultLengthSq > 0 ) {\r\n\r\n\t\t\treturn result.multiplyScalar( 1 / Math.sqrt( resultLengthSq ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn result.set( 0, 0, 0 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// static/instance method to calculate barycoordinates\r\n// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\r\nTHREE.Triangle.barycoordFromPoint = function () {\r\n\r\n\tvar v0 = new THREE.Vector3();\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c, optionalTarget ) {\r\n\r\n\t\tv0.subVectors( c, a );\r\n\t\tv1.subVectors( b, a );\r\n\t\tv2.subVectors( point, a );\r\n\r\n\t\tvar dot00 = v0.dot( v0 );\r\n\t\tvar dot01 = v0.dot( v1 );\r\n\t\tvar dot02 = v0.dot( v2 );\r\n\t\tvar dot11 = v1.dot( v1 );\r\n\t\tvar dot12 = v1.dot( v2 );\r\n\r\n\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t// colinear or singular triangle\r\n\t\tif ( denom == 0 ) {\r\n\t\t\t// arbitrary location outside of triangle?\r\n\t\t\t// not sure if this is the best idea, maybe should be returning undefined\r\n\t\t\treturn result.set( - 2, - 1, - 1 );\r\n\t\t}\r\n\r\n\t\tvar invDenom = 1 / denom;\r\n\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\r\n\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\r\n\r\n\t\t// barycoordinates must always sum to 1\r\n\t\treturn result.set( 1 - u - v, v, u );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.containsPoint = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function ( point, a, b, c ) {\r\n\r\n\t\tvar result = THREE.Triangle.barycoordFromPoint( point, a, b, c, v1 );\r\n\r\n\t\treturn ( result.x >= 0 ) && ( result.y >= 0 ) && ( ( result.x + result.y ) <= 1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Triangle.prototype = {\r\n\r\n\tconstructor: THREE.Triangle,\r\n\r\n\tset: function ( a, b, c ) {\r\n\r\n\t\tthis.a.copy( a );\r\n\t\tthis.b.copy( b );\r\n\t\tthis.c.copy( c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\r\n\r\n\t\tthis.a.copy( points[ i0 ] );\r\n\t\tthis.b.copy( points[ i1 ] );\r\n\t\tthis.c.copy( points[ i2 ] );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcopy: function ( triangle ) {\r\n\r\n\t\tthis.a.copy( triangle.a );\r\n\t\tthis.b.copy( triangle.b );\r\n\t\tthis.c.copy( triangle.c );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tarea: function () {\r\n\r\n\t\tvar v0 = new THREE.Vector3();\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tv0.subVectors( this.c, this.b );\r\n\t\t\tv1.subVectors( this.a, this.b );\r\n\r\n\t\t\treturn v0.cross( v1 ).length() * 0.5;\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tmidpoint: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\t\treturn result.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\r\n\r\n\t},\r\n\r\n\tnormal: function ( optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.normal( this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tplane: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Plane();\r\n\r\n\t\treturn result.setFromCoplanarPoints( this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tbarycoordFromPoint: function ( point, optionalTarget ) {\r\n\r\n\t\treturn THREE.Triangle.barycoordFromPoint( point, this.a, this.b, this.c, optionalTarget );\r\n\r\n\t},\r\n\r\n\tcontainsPoint: function ( point ) {\r\n\r\n\t\treturn THREE.Triangle.containsPoint( point, this.a, this.b, this.c );\r\n\r\n\t},\r\n\r\n\tequals: function ( triangle ) {\r\n\r\n\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.Triangle().copy( this );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Clock.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Clock = function ( autoStart ) {\r\n\r\n\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.oldTime = 0;\r\n\tthis.elapsedTime = 0;\r\n\r\n\tthis.running = false;\r\n\r\n};\r\n\r\nTHREE.Clock.prototype = {\r\n\r\n\tconstructor: THREE.Clock,\r\n\r\n\tstart: function () {\r\n\r\n\t\tthis.startTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\tthis.oldTime = this.startTime;\r\n\t\tthis.running = true;\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.getElapsedTime();\r\n\t\tthis.running = false;\r\n\r\n\t},\r\n\r\n\tgetElapsedTime: function () {\r\n\r\n\t\tthis.getDelta();\r\n\t\treturn this.elapsedTime;\r\n\r\n\t},\r\n\r\n\tgetDelta: function () {\r\n\r\n\t\tvar diff = 0;\r\n\r\n\t\tif ( this.autoStart && ! this.running ) {\r\n\r\n\t\t\tthis.start();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.running ) {\r\n\r\n\t\t\tvar newTime = self.performance !== undefined && self.performance.now !== undefined\r\n\t\t\t\t\t ? self.performance.now()\r\n\t\t\t\t\t : Date.now();\r\n\r\n\t\t\tdiff = 0.001 * ( newTime - this.oldTime );\r\n\t\t\tthis.oldTime = newTime;\r\n\r\n\t\t\tthis.elapsedTime += diff;\r\n\r\n\t\t}\r\n\r\n\t\treturn diff;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/EventDispatcher.js\r\n\r\n/**\r\n * https://github.com/mrdoob/eventdispatcher.js/\r\n */\r\n\r\nTHREE.EventDispatcher = function () {}\r\n\r\nTHREE.EventDispatcher.prototype = {\r\n\r\n\tconstructor: THREE.EventDispatcher,\r\n\r\n\tapply: function ( object ) {\r\n\r\n\t\tobject.addEventListener = THREE.EventDispatcher.prototype.addEventListener;\r\n\t\tobject.hasEventListener = THREE.EventDispatcher.prototype.hasEventListener;\r\n\t\tobject.removeEventListener = THREE.EventDispatcher.prototype.removeEventListener;\r\n\t\tobject.dispatchEvent = THREE.EventDispatcher.prototype.dispatchEvent;\r\n\r\n\t},\r\n\r\n\taddEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) this._listeners = {};\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] === undefined ) {\r\n\r\n\t\t\tlisteners[ type ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\r\n\r\n\t\t\tlisteners[ type ].push( listener );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\thasEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return false;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\r\n\t\tif ( listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1 ) {\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tremoveEventListener: function ( type, listener ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tvar index = listenerArray.indexOf( listener );\r\n\r\n\t\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\t\tlistenerArray.splice( index, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tdispatchEvent: function ( event ) {\r\n\r\n\t\tif ( this._listeners === undefined ) return;\r\n\r\n\t\tvar listeners = this._listeners;\r\n\t\tvar listenerArray = listeners[ event.type ];\r\n\r\n\t\tif ( listenerArray !== undefined ) {\r\n\r\n\t\t\tevent.target = this;\r\n\r\n\t\t\tvar array = [];\r\n\t\t\tvar length = listenerArray.length;\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ] = listenerArray[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\r\n\r\n\t\t\t\tarray[ i ].call( this, event );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Raycaster.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author bhouston / http://exocortex.com/\r\n * @author stephomi / http://stephaneginier.com/\r\n */\r\n\r\n( function ( THREE ) {\r\n\r\n\tTHREE.Raycaster = function ( origin, direction, near, far ) {\r\n\r\n\t\tthis.ray = new THREE.Ray( origin, direction );\r\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\tthis.near = near || 0;\r\n\t\tthis.far = far || Infinity;\r\n\r\n\t\tthis.params = {\r\n\t\t\tSprite: {},\r\n\t\t\tMesh: {},\r\n\t\t\tPointCloud: { threshold: 1 },\r\n\t\t\tLOD: {},\r\n\t\t\tLine: {}\r\n\t\t};\r\n\r\n\t};\r\n\r\n\tvar descSort = function ( a, b ) {\r\n\r\n\t\treturn a.distance - b.distance;\r\n\r\n\t};\r\n\r\n\tvar intersectObject = function ( object, raycaster, intersects, recursive ) {\r\n\r\n\t\tobject.raycast( raycaster, intersects );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tvar children = object.children;\r\n\r\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t//\r\n\r\n\tTHREE.Raycaster.prototype = {\r\n\r\n\t\tconstructor: THREE.Raycaster,\r\n\r\n\t\tprecision: 0.0001,\r\n\t\tlinePrecision: 1,\r\n\r\n\t\tset: function ( origin, direction ) {\r\n\r\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\r\n\r\n\t\t\tthis.ray.set( origin, direction );\r\n\r\n\t\t},\r\n\r\n\t\tsetFromCamera: function ( coords, camera ) {\r\n\r\n\t\t\t// camera is assumed _not_ to be a child of a transformed object\r\n\r\n\t\t\tif ( camera instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.copy( camera.position );\r\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( camera.position ).normalize();\r\n\r\n\t\t\t} else if ( camera instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, - 1 ).unproject( camera );\r\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.Raycaster: Unsupported camera type.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t},\r\n\r\n\t\tintersectObject: function ( object, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tintersectObject( object, this, intersects, recursive );\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t},\r\n\r\n\t\tintersectObjects: function ( objects, recursive ) {\r\n\r\n\t\t\tvar intersects = [];\r\n\r\n\t\t\tif ( objects instanceof Array === false ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\r\n\t\t\t\treturn intersects;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tintersects.sort( descSort );\r\n\r\n\t\t\treturn intersects;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}( THREE ) );\r\n\r\n// File:src/core/Object3D.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.Object3D = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.Object3DIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Object3D';\r\n\r\n\tthis.parent = undefined;\r\n\tthis.children = [];\r\n\r\n\tthis.up = THREE.Object3D.DefaultUp.clone();\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar rotation = new THREE.Euler();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tvar onRotationChange = function () {\r\n\t\tquaternion.setFromEuler( rotation, false );\r\n\t};\r\n\r\n\tvar onQuaternionChange = function () {\r\n\t\trotation.setFromQuaternion( quaternion, undefined, false );\r\n\t};\r\n\r\n\trotation.onChange( onRotationChange );\r\n\tquaternion.onChange( onQuaternionChange );\r\n\r\n\tObject.defineProperties( this, {\r\n\t\tposition: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: position\r\n\t\t},\r\n\t\trotation: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: rotation\r\n\t\t},\r\n\t\tquaternion: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: quaternion\r\n\t\t},\r\n\t\tscale: {\r\n\t\t\tenumerable: true,\r\n\t\t\tvalue: scale\r\n\t\t}\r\n\t} );\r\n\r\n\tthis.rotationAutoUpdate = true;\r\n\r\n\tthis.matrix = new THREE.Matrix4();\r\n\tthis.matrixWorld = new THREE.Matrix4();\r\n\r\n\tthis.matrixAutoUpdate = true;\r\n\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.receiveShadow = false;\r\n\r\n\tthis.frustumCulled = true;\r\n\tthis.renderOrder = 0;\r\n\r\n\tthis.userData = {};\r\n\r\n};\r\n\r\nTHREE.Object3D.DefaultUp = new THREE.Vector3( 0, 1, 0 );\r\n\r\nTHREE.Object3D.prototype = {\r\n\r\n\tconstructor: THREE.Object3D,\r\n\r\n\tget eulerOrder () {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\treturn this.rotation.order;\r\n\r\n\t},\r\n\r\n\tset eulerOrder ( value ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .eulerOrder has been moved to .rotation.order.' );\r\n\r\n\t\tthis.rotation.order = value;\r\n\r\n\t},\r\n\r\n\tget useQuaternion () {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tset useQuaternion ( value ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tthis.matrix.multiplyMatrices( matrix, this.matrix );\r\n\r\n\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\r\n\r\n\t},\r\n\r\n\tsetRotationFromAxisAngle: function ( axis, angle ) {\r\n\r\n\t\t// assumes axis is normalized\r\n\r\n\t\tthis.quaternion.setFromAxisAngle( axis, angle );\r\n\r\n\t},\r\n\r\n\tsetRotationFromEuler: function ( euler ) {\r\n\r\n\t\tthis.quaternion.setFromEuler( euler, true );\r\n\r\n\t},\r\n\r\n\tsetRotationFromMatrix: function ( m ) {\r\n\r\n\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m );\r\n\r\n\t},\r\n\r\n\tsetRotationFromQuaternion: function ( q ) {\r\n\r\n\t\t// assumes q is normalized\r\n\r\n\t\tthis.quaternion.copy( q );\r\n\r\n\t},\r\n\r\n\trotateOnAxis: function () {\r\n\r\n\t\t// rotate object on axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar q1 = new THREE.Quaternion();\r\n\r\n\t\treturn function ( axis, angle ) {\r\n\r\n\t\t\tq1.setFromAxisAngle( axis, angle );\r\n\r\n\t\t\tthis.quaternion.multiply( q1 );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\trotateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\trotateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( angle ) {\r\n\r\n\t\t\treturn this.rotateOnAxis( v1, angle );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateOnAxis: function () {\r\n\r\n\t\t// translate object by distance along axis in object space\r\n\t\t// axis is assumed to be normalized\r\n\r\n\t\tvar v1 = new THREE.Vector3();\r\n\r\n\t\treturn function ( axis, distance ) {\r\n\r\n\t\t\tv1.copy( axis ).applyQuaternion( this.quaternion );\r\n\r\n\t\t\tthis.position.add( v1.multiplyScalar( distance ) );\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\ttranslate: function ( distance, axis ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\r\n\t\treturn this.translateOnAxis( axis, distance );\r\n\r\n\t},\r\n\r\n\ttranslateX: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateY: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\ttranslateZ: function () {\r\n\r\n\t\tvar v1 = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\t\treturn function ( distance ) {\r\n\r\n\t\t\treturn this.translateOnAxis( v1, distance );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlocalToWorld: function ( vector ) {\r\n\r\n\t\treturn vector.applyMatrix4( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tworldToLocal: function () {\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\treturn vector.applyMatrix4( m1.getInverse( this.matrixWorld ) );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tlookAt: function () {\r\n\r\n\t\t// This routine does not support objects with rotated and/or translated parent(s)\r\n\r\n\t\tvar m1 = new THREE.Matrix4();\r\n\r\n\t\treturn function ( vector ) {\r\n\r\n\t\t\tm1.lookAt( vector, this.position, this.up );\r\n\r\n\t\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t\t};\r\n\r\n\t}(),\r\n\r\n\tadd: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.add( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn this;\r\n\r\n\t\t};\r\n\r\n\t\tif ( object === this ) {\r\n\r\n\t\t\tTHREE.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\r\n\t\t\treturn this;\r\n\r\n\t\t}\r\n\r\n\t\tif ( object instanceof THREE.Object3D ) {\r\n\r\n\t\t\tif ( object.parent !== undefined ) {\r\n\r\n\t\t\t\tobject.parent.remove( object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.parent = this;\r\n\t\t\tobject.dispatchEvent( { type: 'added' } );\r\n\r\n\t\t\tthis.children.push( object );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tremove: function ( object ) {\r\n\r\n\t\tif ( arguments.length > 1 ) {\r\n\r\n\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\r\n\r\n\t\t\t\tthis.remove( arguments[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tvar index = this.children.indexOf( object );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tobject.parent = undefined;\r\n\r\n\t\t\tobject.dispatchEvent( { type: 'removed' } );\r\n\r\n\t\t\tthis.children.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetChildByName: function ( name ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\r\n\t\treturn this.getObjectByName( name );\r\n\r\n\t},\r\n\r\n\tgetObjectById: function ( id ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'id', id );\r\n\r\n\t},\r\n\r\n\tgetObjectByName: function ( name ) {\r\n\r\n\t\treturn this.getObjectByProperty( 'name', name );\r\n\r\n\t},\r\n\r\n\tgetObjectByProperty: function ( name, value ) {\r\n\r\n\t\tif ( this[ name ] === value ) return this;\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar child = this.children[ i ];\r\n\t\t\tvar object = child.getObjectByProperty( name, value );\r\n\r\n\t\t\tif ( object !== undefined ) {\r\n\r\n\t\t\t\treturn object;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\r\n\t},\r\n\r\n\tgetWorldPosition: function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\treturn result.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t},\r\n\r\n\tgetWorldQuaternion: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar scale = new THREE.Vector3();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Quaternion();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, result, scale );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldRotation: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Euler();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.setFromQuaternion( quaternion, this.rotation.order, false );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldScale: function () {\r\n\r\n\t\tvar position = new THREE.Vector3();\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\t\tthis.matrixWorld.decompose( position, quaternion, result );\r\n\r\n\t\t\treturn result;\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tgetWorldDirection: function () {\r\n\r\n\t\tvar quaternion = new THREE.Quaternion();\r\n\r\n\t\treturn function ( optionalTarget ) {\r\n\r\n\t\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\t\treturn result.set( 0, 0, 1 ).applyQuaternion( quaternion );\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\traycast: function () {},\r\n\r\n\ttraverse: function ( callback ) {\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverse( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseVisible: function ( callback ) {\r\n\r\n\t\tif ( this.visible === false ) return;\r\n\r\n\t\tcallback( this );\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].traverseVisible( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttraverseAncestors: function ( callback ) {\r\n\r\n\t\tif ( this.parent ) {\r\n\r\n\t\t\tcallback( this.parent );\r\n\r\n\t\t\tthis.parent.traverseAncestors( callback );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdateMatrix: function () {\r\n\r\n\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\r\n\r\n\t\tthis.matrixWorldNeedsUpdate = true;\r\n\r\n\t},\r\n\r\n\tupdateMatrixWorld: function ( force ) {\r\n\r\n\t\tif ( this.matrixAutoUpdate === true ) this.updateMatrix();\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate === true || force === true ) {\r\n\r\n\t\t\tif ( this.parent === undefined ) {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.3,\r\n\t\t\t\ttype: 'Object',\r\n\t\t\t\tgenerator: 'ObjectExporter'\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tvar parseGeometry = function ( geometry ) {\r\n\r\n\t\t\tif ( output.geometries === undefined ) {\r\n\r\n\t\t\t\toutput.geometries = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( geometries[ geometry.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = geometry.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tgeometries[ geometry.uuid ] = json;\r\n\r\n\t\t\t\toutput.geometries.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn geometry.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tvar parseMaterial = function ( material ) {\r\n\r\n\t\t\tif ( output.materials === undefined ) {\r\n\r\n\t\t\t\toutput.materials = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( materials[ material.uuid ] === undefined ) {\r\n\r\n\t\t\t\tvar json = material.toJSON();\r\n\r\n\t\t\t\tdelete json.metadata;\r\n\r\n\t\t\t\tmaterials[ material.uuid ] = json;\r\n\r\n\t\t\t\toutput.materials.push( json );\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn material.uuid;\r\n\r\n\t\t};\r\n\r\n\t\t//\r\n\r\n\t\tvar parseObject = function ( object ) {\r\n\r\n\t\t\tvar data = {};\r\n\r\n\t\t\tdata.uuid = object.uuid;\r\n\t\t\tdata.type = object.type;\r\n\r\n\t\t\tif ( object.name !== '' ) data.name = object.name;\r\n\t\t\tif ( JSON.stringify( object.userData ) !== '{}' ) data.userData = object.userData;\r\n\t\t\tif ( object.visible !== true ) data.visible = object.visible;\r\n\r\n\t\t\tif ( object instanceof THREE.PerspectiveCamera ) {\r\n\r\n\t\t\t\tdata.fov = object.fov;\r\n\t\t\t\tdata.aspect = object.aspect;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.OrthographicCamera ) {\r\n\r\n\t\t\t\tdata.left = object.left;\r\n\t\t\t\tdata.right = object.right;\r\n\t\t\t\tdata.top = object.top;\r\n\t\t\t\tdata.bottom = object.bottom;\r\n\t\t\t\tdata.near = object.near;\r\n\t\t\t\tdata.far = object.far;\r\n\r\n\t\t\t} else if ( object instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\t\t\t\tdata.decay = object.decay;\r\n\r\n\t\t\t} else if ( object instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.intensity = object.intensity;\r\n\t\t\t\tdata.distance = object.distance;\r\n\t\t\t\tdata.angle = object.angle;\r\n\t\t\t\tdata.exponent = object.exponent;\r\n\t\t\t\tdata.decay = object.decay;\r\n\r\n\t\t\t} else if ( object instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\tdata.color = object.color.getHex();\r\n\t\t\t\tdata.groundColor = object.groundColor.getHex();\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh || object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\tdata.geometry = parseGeometry( object.geometry );\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t\tif ( object instanceof THREE.Line ) data.mode = object.mode;\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tdata.material = parseMaterial( object.material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdata.matrix = object.matrix.toArray();\r\n\r\n\t\t\tif ( object.children.length > 0 ) {\r\n\r\n\t\t\t\tdata.children = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\t\t\t\tdata.children.push( parseObject( object.children[ i ] ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn data;\r\n\r\n\t\t}\r\n\r\n\t\toutput.object = parseObject( this );\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( object, recursive ) {\r\n\r\n\t\tif ( object === undefined ) object = new THREE.Object3D();\r\n\t\tif ( recursive === undefined ) recursive = true;\r\n\r\n\t\tobject.name = this.name;\r\n\r\n\t\tobject.up.copy( this.up );\r\n\r\n\t\tobject.position.copy( this.position );\r\n\t\tobject.quaternion.copy( this.quaternion );\r\n\t\tobject.scale.copy( this.scale );\r\n\r\n\t\tobject.rotationAutoUpdate = this.rotationAutoUpdate;\r\n\r\n\t\tobject.matrix.copy( this.matrix );\r\n\t\tobject.matrixWorld.copy( this.matrixWorld );\r\n\r\n\t\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\t\tobject.matrixWorldNeedsUpdate = this.matrixWorldNeedsUpdate;\r\n\r\n\t\tobject.visible = this.visible;\r\n\r\n\t\tobject.castShadow = this.castShadow;\r\n\t\tobject.receiveShadow = this.receiveShadow;\r\n\r\n\t\tobject.frustumCulled = this.frustumCulled;\r\n\r\n\t\tobject.userData = JSON.parse( JSON.stringify( this.userData ) );\r\n\r\n\t\tif ( recursive === true ) {\r\n\r\n\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\r\n\r\n\t\t\t\tvar child = this.children[ i ];\r\n\t\t\t\tobject.add( child.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Object3D.prototype );\r\n\r\nTHREE.Object3DIdCount = 0;\r\n\r\n// File:src/core/Face3.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Face3 = function ( a, b, c, normal, color, materialIndex ) {\r\n\r\n\tthis.a = a;\r\n\tthis.b = b;\r\n\tthis.c = c;\r\n\r\n\tthis.normal = normal instanceof THREE.Vector3 ? normal : new THREE.Vector3();\r\n\tthis.vertexNormals = normal instanceof Array ? normal : [];\r\n\r\n\tthis.color = color instanceof THREE.Color ? color : new THREE.Color();\r\n\tthis.vertexColors = color instanceof Array ? color : [];\r\n\r\n\tthis.vertexTangents = [];\r\n\r\n\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\r\n\r\n};\r\n\r\nTHREE.Face3.prototype = {\r\n\r\n\tconstructor: THREE.Face3,\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar face = new THREE.Face3( this.a, this.b, this.c );\r\n\r\n\t\tface.normal.copy( this.normal );\r\n\t\tface.color.copy( this.color );\r\n\r\n\t\tface.materialIndex = this.materialIndex;\r\n\r\n\t\tfor ( var i = 0, il = this.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexNormals[ i ] = this.vertexNormals[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexColors.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexColors[ i ] = this.vertexColors[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.vertexTangents.length; i < il; i ++ ) {\r\n\r\n\t\t\tface.vertexTangents[ i ] = this.vertexTangents[ i ].clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn face;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/core/Face4.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Face4 = function ( a, b, c, d, normal, color, materialIndex ) {\r\n\r\n\tTHREE.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' )\r\n\treturn new THREE.Face3( a, b, c, normal, color, materialIndex );\r\n\r\n};\r\n\r\n// File:src/core/BufferAttribute.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferAttribute = function ( array, itemSize ) {\r\n\r\n\tthis.array = array;\r\n\tthis.itemSize = itemSize;\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n};\r\n\r\nTHREE.BufferAttribute.prototype = {\r\n\r\n\tconstructor: THREE.BufferAttribute,\r\n\r\n\tget length () {\r\n\r\n\t\treturn this.array.length;\r\n\r\n\t},\r\n\r\n\tcopyAt: function ( index1, attribute, index2 ) {\r\n\r\n\t\tindex1 *= this.itemSize;\r\n\t\tindex2 *= attribute.itemSize;\r\n\r\n\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\r\n\r\n\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tset: function ( value, offset ) {\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tthis.array.set( value, offset );\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetX: function ( index, x ) {\r\n\r\n\t\tthis.array[ index * this.itemSize ] = x;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetY: function ( index, y ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetZ: function ( index, z ) {\r\n\r\n\t\tthis.array[ index * this.itemSize + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXY: function ( index, x, y ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZ: function ( index, x, y, z ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tsetXYZW: function ( index, x, y, z, w ) {\r\n\r\n\t\tindex *= this.itemSize;\r\n\r\n\t\tthis.array[ index     ] = x;\r\n\t\tthis.array[ index + 1 ] = y;\r\n\t\tthis.array[ index + 2 ] = z;\r\n\t\tthis.array[ index + 3 ] = w;\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\treturn new THREE.BufferAttribute( new this.array.constructor( this.array ), this.itemSize );\r\n\r\n\t}\r\n\r\n};\r\n\r\n//\r\n\r\nTHREE.Int8Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint8Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint8ClampedAttribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint8ClampedAttribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n\r\n};\r\n\r\nTHREE.Int16Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint16Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint16Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Int32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Int32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Uint32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Uint32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float32Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Float32Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\nTHREE.Float64Attribute = function ( data, itemSize ) {\r\n\r\n\tTHREE.warn( 'THREE.Float64Attribute has been removed. Use THREE.BufferAttribute( array, itemSize ) instead.' );\r\n\treturn new THREE.BufferAttribute( data, itemSize );\r\n\r\n};\r\n\r\n// File:src/core/DynamicBufferAttribute.js\r\n\r\n/**\r\n * @author benaadams / https://twitter.com/ben_a_adams\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.DynamicBufferAttribute = function ( array, itemSize ) {\r\n\r\n\tTHREE.BufferAttribute.call( this, array, itemSize );\r\n\r\n\tthis.updateRange = { offset: 0, count: -1 };\r\n\r\n};\r\n\r\nTHREE.DynamicBufferAttribute.prototype = Object.create( THREE.BufferAttribute.prototype );\r\nTHREE.DynamicBufferAttribute.prototype.constructor = THREE.DynamicBufferAttribute;\r\n\r\nTHREE.DynamicBufferAttribute.prototype.clone = function () {\r\n\r\n\treturn new THREE.DynamicBufferAttribute( new this.array.constructor( this.array ), this.itemSize );\r\n\r\n};\r\n\r\n// File:src/core/BufferGeometry.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'BufferGeometry';\r\n\r\n\tthis.attributes = {};\r\n\tthis.attributesKeys = [];\r\n\r\n\tthis.drawcalls = [];\r\n\tthis.offsets = this.drawcalls; // backwards compatibility\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n};\r\n\r\nTHREE.BufferGeometry.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometry,\r\n\r\n\taddAttribute: function ( name, attribute ) {\r\n\r\n\t\tif ( attribute instanceof THREE.BufferAttribute === false ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\r\n\r\n\t\t\tthis.attributes[ name ] = { array: arguments[ 1 ], itemSize: arguments[ 2 ] };\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes[ name ] = attribute;\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t},\r\n\r\n\tgetAttribute: function ( name ) {\r\n\r\n\t\treturn this.attributes[ name ];\r\n\r\n\t},\r\n\r\n\taddDrawCall: function ( start, count, indexOffset ) {\r\n\r\n\t\tthis.drawcalls.push( {\r\n\r\n\t\t\tstart: start,\r\n\t\t\tcount: count,\r\n\t\t\tindex: indexOffset !== undefined ? indexOffset : 0\r\n\r\n\t\t} );\r\n\r\n\t},\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar position = this.attributes.position;\r\n\r\n\t\tif ( position !== undefined ) {\r\n\r\n\t\t\tmatrix.applyToVector3Array( position.array );\r\n\t\t\tposition.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tvar normal = this.attributes.normal;\r\n\r\n\t\tif ( normal !== undefined ) {\r\n\r\n\t\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t\tnormalMatrix.applyToVector3Array( normal.array );\r\n\t\t\tnormal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.applyMatrix( new THREE.Matrix4().setPosition( offset ) );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tfromGeometry: function ( geometry, settings ) {\r\n\r\n\t\tsettings = settings || { 'vertexColors': THREE.NoColors };\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\t\tvar faces = geometry.faces;\r\n\t\tvar faceVertexUvs = geometry.faceVertexUvs;\r\n\t\tvar vertexColors = settings.vertexColors;\r\n\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ].length > 0;\r\n\t\tvar hasFaceVertexNormals = faces[ 0 ].vertexNormals.length == 3;\r\n\r\n\t\tvar positions = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\r\n\t\tvar normals = new Float32Array( faces.length * 3 * 3 );\r\n\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\r\n\t\tif ( vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\tvar colors = new Float32Array( faces.length * 3 * 3 );\r\n\t\t\tthis.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\tvar uvs = new Float32Array( faces.length * 3 * 2 );\r\n\t\t\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, i2 = 0, i3 = 0; i < faces.length; i ++, i2 += 6, i3 += 9 ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tvar a = vertices[ face.a ];\r\n\t\t\tvar b = vertices[ face.b ];\r\n\t\t\tvar c = vertices[ face.c ];\r\n\r\n\t\t\tpositions[ i3     ] = a.x;\r\n\t\t\tpositions[ i3 + 1 ] = a.y;\r\n\t\t\tpositions[ i3 + 2 ] = a.z;\r\n\r\n\t\t\tpositions[ i3 + 3 ] = b.x;\r\n\t\t\tpositions[ i3 + 4 ] = b.y;\r\n\t\t\tpositions[ i3 + 5 ] = b.z;\r\n\r\n\t\t\tpositions[ i3 + 6 ] = c.x;\r\n\t\t\tpositions[ i3 + 7 ] = c.y;\r\n\t\t\tpositions[ i3 + 8 ] = c.z;\r\n\r\n\t\t\tif ( hasFaceVertexNormals === true ) {\r\n\r\n\t\t\t\tvar na = face.vertexNormals[ 0 ];\r\n\t\t\t\tvar nb = face.vertexNormals[ 1 ];\r\n\t\t\t\tvar nc = face.vertexNormals[ 2 ];\r\n\r\n\t\t\t\tnormals[ i3     ] = na.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = na.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = na.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = nb.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = nb.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = nb.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = nc.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = nc.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = nc.z;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar n = face.normal;\r\n\r\n\t\t\t\tnormals[ i3     ] = n.x;\r\n\t\t\t\tnormals[ i3 + 1 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 2 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 3 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 4 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 5 ] = n.z;\r\n\r\n\t\t\t\tnormals[ i3 + 6 ] = n.x;\r\n\t\t\t\tnormals[ i3 + 7 ] = n.y;\r\n\t\t\t\tnormals[ i3 + 8 ] = n.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( vertexColors === THREE.FaceColors ) {\r\n\r\n\t\t\t\tvar fc = face.color;\r\n\r\n\t\t\t\tcolors[ i3     ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = fc.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = fc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = fc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = fc.b;\r\n\r\n\t\t\t} else if ( vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\tvar vca = face.vertexColors[ 0 ];\r\n\t\t\t\tvar vcb = face.vertexColors[ 1 ];\r\n\t\t\t\tvar vcc = face.vertexColors[ 2 ];\r\n\r\n\t\t\t\tcolors[ i3     ] = vca.r;\r\n\t\t\t\tcolors[ i3 + 1 ] = vca.g;\r\n\t\t\t\tcolors[ i3 + 2 ] = vca.b;\r\n\r\n\t\t\t\tcolors[ i3 + 3 ] = vcb.r;\r\n\t\t\t\tcolors[ i3 + 4 ] = vcb.g;\r\n\t\t\t\tcolors[ i3 + 5 ] = vcb.b;\r\n\r\n\t\t\t\tcolors[ i3 + 6 ] = vcc.r;\r\n\t\t\t\tcolors[ i3 + 7 ] = vcc.g;\r\n\t\t\t\tcolors[ i3 + 8 ] = vcc.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexUv === true ) {\r\n\r\n\t\t\t\tvar uva = faceVertexUvs[ 0 ][ i ][ 0 ];\r\n\t\t\t\tvar uvb = faceVertexUvs[ 0 ][ i ][ 1 ];\r\n\t\t\t\tvar uvc = faceVertexUvs[ 0 ][ i ][ 2 ];\r\n\r\n\t\t\t\tuvs[ i2     ] = uva.x;\r\n\t\t\t\tuvs[ i2 + 1 ] = uva.y;\r\n\r\n\t\t\t\tuvs[ i2 + 2 ] = uvb.x;\r\n\t\t\t\tuvs[ i2 + 3 ] = uvb.y;\r\n\r\n\t\t\t\tuvs[ i2 + 4 ] = uvc.x;\r\n\t\t\t\tuvs[ i2 + 5 ] = uvc.y;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeBoundingSphere()\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tvar bb = this.boundingBox;\r\n\t\t\t\tbb.makeEmpty();\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbb.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( positions === undefined || positions.length === 0 ) {\r\n\r\n\t\t\t\tthis.boundingBox.min.set( 0, 0, 0 );\r\n\t\t\t\tthis.boundingBox.max.set( 0, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tvar box = new THREE.Box3();\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar positions = this.attributes.position.array;\r\n\r\n\t\t\tif ( positions ) {\r\n\r\n\t\t\t\tbox.makeEmpty();\r\n\r\n\t\t\t\tvar center = this.boundingSphere.center;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tbox.expandByPoint( vector );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbox.center( center );\r\n\r\n\t\t\t\t// hoping to find a boundingSphere with a radius smaller than the\r\n\t\t\t\t// boundingSphere of the boundingBox:  sqrt(3) smaller in the best case\r\n\r\n\t\t\t\tvar maxRadiusSq = 0;\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tvector.set( positions[ i ], positions[ i + 1 ], positions[ i + 2 ] );\r\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( vector ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\r\n\r\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\r\n\r\n\t\t\t\t\tTHREE.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}(),\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\t// backwards compatibility\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function () {\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tif ( attributes.position ) {\r\n\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.normal === undefined ) {\r\n\r\n\t\t\t\tthis.addAttribute( 'normal', new THREE.BufferAttribute( new Float32Array( positions.length ), 3 ) );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// reset existing normals to zero\r\n\r\n\t\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\t\tfor ( var i = 0, il = normals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tnormals[ i ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar normals = attributes.normal.array;\r\n\r\n\t\t\tvar vA, vB, vC,\r\n\r\n\t\t\tpA = new THREE.Vector3(),\r\n\t\t\tpB = new THREE.Vector3(),\r\n\t\t\tpC = new THREE.Vector3(),\r\n\r\n\t\t\tcb = new THREE.Vector3(),\r\n\t\t\tab = new THREE.Vector3();\r\n\r\n\t\t\t// indexed elements\r\n\r\n\t\t\tif ( attributes.index ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\r\n\t\t\t\tvar offsets = ( this.offsets.length > 0 ? this.offsets : [ { start: 0, count: indices.length, index: 0 } ] );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = offsets.length; j < jl; ++ j ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ j ].start;\r\n\t\t\t\t\tvar count = offsets[ j ].count;\r\n\t\t\t\t\tvar index = offsets[ j ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\tvA = ( index + indices[ i     ] ) * 3;\r\n\t\t\t\t\t\tvB = ( index + indices[ i + 1 ] ) * 3;\r\n\t\t\t\t\t\tvC = ( index + indices[ i + 2 ] ) * 3;\r\n\r\n\t\t\t\t\t\tpA.fromArray( positions, vA );\r\n\t\t\t\t\t\tpB.fromArray( positions, vB );\r\n\t\t\t\t\t\tpC.fromArray( positions, vC );\r\n\r\n\t\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\t\tnormals[ vA     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vB     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t\tnormals[ vC     ] += cb.x;\r\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\r\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed elements (unconnected triangle soup)\r\n\r\n\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tpA.fromArray( positions, i );\r\n\t\t\t\t\tpB.fromArray( positions, i + 3 );\r\n\t\t\t\t\tpC.fromArray( positions, i + 6 );\r\n\r\n\t\t\t\t\tcb.subVectors( pC, pB );\r\n\t\t\t\t\tab.subVectors( pA, pB );\r\n\t\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\t\tnormals[ i     ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 1 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 2 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 3 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 4 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 5 ] = cb.z;\r\n\r\n\t\t\t\t\tnormals[ i + 6 ] = cb.x;\r\n\t\t\t\t\tnormals[ i + 7 ] = cb.y;\r\n\t\t\t\t\tnormals[ i + 8 ] = cb.z;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.normalizeNormals();\r\n\r\n\t\t\tattributes.normal.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// (per vertex tangents)\r\n\r\n\t\tif ( this.attributes.index === undefined ||\r\n\t\t\t this.attributes.position === undefined ||\r\n\t\t\t this.attributes.normal === undefined ||\r\n\t\t\t this.attributes.uv === undefined ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.BufferGeometry: Missing required attributes (index, position, normal or uv) in BufferGeometry.computeTangents()' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar positions = this.attributes.position.array;\r\n\t\tvar normals = this.attributes.normal.array;\r\n\t\tvar uvs = this.attributes.uv.array;\r\n\r\n\t\tvar nVertices = positions.length / 3;\r\n\r\n\t\tif ( this.attributes.tangent === undefined ) {\r\n\r\n\t\t\tthis.addAttribute( 'tangent', new THREE.BufferAttribute( new Float32Array( 4 * nVertices ), 4 ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar tangents = this.attributes.tangent.array;\r\n\r\n\t\tvar tan1 = [], tan2 = [];\r\n\r\n\t\tfor ( var k = 0; k < nVertices; k ++ ) {\r\n\r\n\t\t\ttan1[ k ] = new THREE.Vector3();\r\n\t\t\ttan2[ k ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar vA = new THREE.Vector3(),\r\n\t\t\tvB = new THREE.Vector3(),\r\n\t\t\tvC = new THREE.Vector3(),\r\n\r\n\t\t\tuvA = new THREE.Vector2(),\r\n\t\t\tuvB = new THREE.Vector2(),\r\n\t\t\tuvC = new THREE.Vector2(),\r\n\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r;\r\n\r\n\t\tvar sdir = new THREE.Vector3(), tdir = new THREE.Vector3();\r\n\r\n\t\tfunction handleTriangle( a, b, c ) {\r\n\r\n\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\tuvA.fromArray( uvs, a * 2 );\r\n\t\t\tuvB.fromArray( uvs, b * 2 );\r\n\t\t\tuvC.fromArray( uvs, c * 2 );\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\r\n\t\t\tsdir.set(\r\n\t\t\t\t( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t( t2 * z1 - t1 * z2 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttdir.set(\r\n\t\t\t\t( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t( s1 * z2 - s2 * z1 ) * r\r\n\t\t\t);\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, il;\r\n\t\tvar j, jl;\r\n\t\tvar iA, iB, iC;\r\n\r\n\t\tif ( this.drawcalls.length === 0 ) {\r\n\r\n\t\t\tthis.addDrawCall( 0, indices.length, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tvar drawcalls = this.drawcalls;\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleTriangle( iA, iB, iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar tmp = new THREE.Vector3(), tmp2 = new THREE.Vector3();\r\n\t\tvar n = new THREE.Vector3(), n2 = new THREE.Vector3();\r\n\t\tvar w, t, test;\r\n\r\n\t\tfunction handleVertex( v ) {\r\n\r\n\t\t\tn.fromArray( normals, v * 3 );\r\n\t\t\tn2.copy( n );\r\n\r\n\t\t\tt = tan1[ v ];\r\n\r\n\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\ttmp.copy( t );\r\n\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t// Calculate handedness\r\n\r\n\t\t\ttmp2.crossVectors( n2, t );\r\n\t\t\ttest = tmp2.dot( tan2[ v ] );\r\n\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\ttangents[ v * 4     ] = tmp.x;\r\n\t\t\ttangents[ v * 4 + 1 ] = tmp.y;\r\n\t\t\ttangents[ v * 4 + 2 ] = tmp.z;\r\n\t\t\ttangents[ v * 4 + 3 ] = w;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( j = 0, jl = drawcalls.length; j < jl; ++ j ) {\r\n\r\n\t\t\tvar start = drawcalls[ j ].start;\r\n\t\t\tvar count = drawcalls[ j ].count;\r\n\t\t\tvar index = drawcalls[ j ].index;\r\n\r\n\t\t\tfor ( i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\tiA = index + indices[ i ];\r\n\t\t\t\tiB = index + indices[ i + 1 ];\r\n\t\t\t\tiC = index + indices[ i + 2 ];\r\n\r\n\t\t\t\thandleVertex( iA );\r\n\t\t\t\thandleVertex( iB );\r\n\t\t\t\thandleVertex( iC );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\tCompute the draw offset for large models by chunking the index buffer into chunks of 65k addressable vertices.\r\n\tThis method will effectively rewrite the index buffer and remap all attributes to match the new indices.\r\n\tWARNING: This method will also expand the vertex count to prevent sprawled triangles across draw offsets.\r\n\tsize - Defaults to 65535, but allows for larger or smaller chunks.\r\n\t*/\r\n\tcomputeOffsets: function ( size ) {\r\n\r\n\t\tif ( size === undefined ) size = 65535; // WebGL limits type of index buffer values to 16-bit.\r\n\r\n\t\tvar indices = this.attributes.index.array;\r\n\t\tvar vertices = this.attributes.position.array;\r\n\r\n\t\tvar facesCount = ( indices.length / 3 );\r\n\r\n\t\t/*\r\n\t\tconsole.log(\"Computing buffers in offsets of \"+size+\" -> indices:\"+indices.length+\" vertices:\"+vertices.length);\r\n\t\tconsole.log(\"Faces to process: \"+(indices.length/3));\r\n\t\tconsole.log(\"Reordering \"+verticesCount+\" vertices.\");\r\n\t\t*/\r\n\r\n\t\tvar sortedIndices = new Uint16Array( indices.length ); //16-bit buffers\r\n\t\tvar indexPtr = 0;\r\n\t\tvar vertexPtr = 0;\r\n\r\n\t\tvar offsets = [ { start:0, count:0, index:0 } ];\r\n\t\tvar offset = offsets[ 0 ];\r\n\r\n\t\tvar duplicatedVertices = 0;\r\n\t\tvar newVerticeMaps = 0;\r\n\t\tvar faceVertices = new Int32Array( 6 );\r\n\t\tvar vertexMap = new Int32Array( vertices.length );\r\n\t\tvar revVertexMap = new Int32Array( vertices.length );\r\n\t\tfor ( var j = 0; j < vertices.length; j ++ ) { vertexMap[ j ] = - 1; revVertexMap[ j ] = - 1; }\r\n\r\n\t\t/*\r\n\t\t\tTraverse every face and reorder vertices in the proper offsets of 65k.\r\n\t\t\tWe can have more than 65k entries in the index buffer per offset, but only reference 65k values.\r\n\t\t*/\r\n\t\tfor ( var findex = 0; findex < facesCount; findex ++ ) {\r\n\t\t\tnewVerticeMaps = 0;\r\n\r\n\t\t\tfor ( var vo = 0; vo < 3; vo ++ ) {\r\n\t\t\t\tvar vid = indices[ findex * 3 + vo ];\r\n\t\t\t\tif ( vertexMap[ vid ] == - 1 ) {\r\n\t\t\t\t\t//Unmapped vertice\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tnewVerticeMaps ++;\r\n\t\t\t\t} else if ( vertexMap[ vid ] < offset.index ) {\r\n\t\t\t\t\t//Reused vertices from previous block (duplicate)\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = - 1;\r\n\t\t\t\t\tduplicatedVertices ++;\r\n\t\t\t\t} else {\r\n\t\t\t\t\t//Reused vertice in the current block\r\n\t\t\t\t\tfaceVertices[ vo * 2 ] = vid;\r\n\t\t\t\t\tfaceVertices[ vo * 2 + 1 ] = vertexMap[ vid ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tvar faceMax = vertexPtr + newVerticeMaps;\r\n\t\t\tif ( faceMax > ( offset.index + size ) ) {\r\n\t\t\t\tvar new_offset = { start:indexPtr, count:0, index:vertexPtr };\r\n\t\t\t\toffsets.push( new_offset );\r\n\t\t\t\toffset = new_offset;\r\n\r\n\t\t\t\t//Re-evaluate reused vertices in light of new offset.\r\n\t\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\t\t\t\t\tif ( new_vid > - 1 && new_vid < offset.index )\r\n\t\t\t\t\t\tfaceVertices[ v + 1 ] = - 1;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\t//Reindex the face.\r\n\t\t\tfor ( var v = 0; v < 6; v += 2 ) {\r\n\t\t\t\tvar vid = faceVertices[ v ];\r\n\t\t\t\tvar new_vid = faceVertices[ v + 1 ];\r\n\r\n\t\t\t\tif ( new_vid === - 1 )\r\n\t\t\t\t\tnew_vid = vertexPtr ++;\r\n\r\n\t\t\t\tvertexMap[ vid ] = new_vid;\r\n\t\t\t\trevVertexMap[ new_vid ] = vid;\r\n\t\t\t\tsortedIndices[ indexPtr ++ ] = new_vid - offset.index; //XXX overflows at 16bit\r\n\t\t\t\toffset.count ++;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Move all attribute values to map to the new computed indices , also expand the vertice stack to match our new vertexPtr. */\r\n\t\tthis.reorderBuffers( sortedIndices, revVertexMap, vertexPtr );\r\n\t\tthis.offsets = offsets; // TODO: Deprecate\r\n\t\tthis.drawcalls = offsets;\r\n\r\n\t\t/*\r\n\t\tvar orderTime = Date.now();\r\n\t\tconsole.log(\"Reorder time: \"+(orderTime-s)+\"ms\");\r\n\t\tconsole.log(\"Duplicated \"+duplicatedVertices+\" vertices.\");\r\n\t\tconsole.log(\"Compute Buffers time: \"+(Date.now()-s)+\"ms\");\r\n\t\tconsole.log(\"Draw offsets: \"+offsets.length);\r\n\t\t*/\r\n\r\n\t\treturn offsets;\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, offset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( offset === undefined ) offset = 0;\r\n\r\n\t\tvar attributes = this.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tif ( geometry.attributes[ key ] === undefined ) continue;\r\n\r\n\t\t\tvar attribute1 = attributes[ key ];\r\n\t\t\tvar attributeArray1 = attribute1.array;\r\n\r\n\t\t\tvar attribute2 = geometry.attributes[ key ];\r\n\t\t\tvar attributeArray2 = attribute2.array;\r\n\r\n\t\t\tvar attributeSize = attribute2.itemSize;\r\n\r\n\t\t\tfor ( var i = 0, j = attributeSize * offset; i < attributeArray2.length; i ++, j ++ ) {\r\n\r\n\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tnormalizeNormals: function () {\r\n\r\n\t\tvar normals = this.attributes.normal.array;\r\n\r\n\t\tvar x, y, z, n;\r\n\r\n\t\tfor ( var i = 0, il = normals.length; i < il; i += 3 ) {\r\n\r\n\t\t\tx = normals[ i ];\r\n\t\t\ty = normals[ i + 1 ];\r\n\t\t\tz = normals[ i + 2 ];\r\n\r\n\t\t\tn = 1.0 / Math.sqrt( x * x + y * y + z * z );\r\n\r\n\t\t\tnormals[ i     ] *= n;\r\n\t\t\tnormals[ i + 1 ] *= n;\r\n\t\t\tnormals[ i + 2 ] *= n;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\t/*\r\n\t\treoderBuffers:\r\n\t\tReorder attributes based on a new indexBuffer and indexMap.\r\n\t\tindexBuffer - Uint16Array of the new ordered indices.\r\n\t\tindexMap - Int32Array where the position is the new vertex ID and the value the old vertex ID for each vertex.\r\n\t\tvertexCount - Amount of total vertices considered in this reordering (in case you want to grow the vertice stack).\r\n\t*/\r\n\treorderBuffers: function ( indexBuffer, indexMap, vertexCount ) {\r\n\r\n\t\t/* Create a copy of all attributes for reordering. */\r\n\t\tvar sortedAttributes = {};\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tvar sourceArray = this.attributes[ attr ].array;\r\n\t\t\tsortedAttributes[ attr ] = new sourceArray.constructor( this.attributes[ attr ].itemSize * vertexCount );\r\n\t\t}\r\n\r\n\t\t/* Move attribute positions based on the new index map */\r\n\t\tfor ( var new_vid = 0; new_vid < vertexCount; new_vid ++ ) {\r\n\t\t\tvar vid = indexMap[ new_vid ];\r\n\t\t\tfor ( var attr in this.attributes ) {\r\n\t\t\t\tif ( attr == 'index' )\r\n\t\t\t\t\tcontinue;\r\n\t\t\t\tvar attrArray = this.attributes[ attr ].array;\r\n\t\t\t\tvar attrSize = this.attributes[ attr ].itemSize;\r\n\t\t\t\tvar sortedAttr = sortedAttributes[ attr ];\r\n\t\t\t\tfor ( var k = 0; k < attrSize; k ++ )\r\n\t\t\t\t\tsortedAttr[ new_vid * attrSize + k ] = attrArray[ vid * attrSize + k ];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t/* Carry the new sorted buffers locally */\r\n\t\tthis.attributes[ 'index' ].array = indexBuffer;\r\n\t\tfor ( var attr in this.attributes ) {\r\n\t\t\tif ( attr == 'index' )\r\n\t\t\t\tcontinue;\r\n\t\t\tthis.attributes[ attr ].array = sortedAttributes[ attr ];\r\n\t\t\tthis.attributes[ attr ].numItems = this.attributes[ attr ].itemSize * vertexCount;\r\n\t\t}\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tdata: {\r\n\t\t\t\tattributes: {}\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tvar attributes = this.attributes;\r\n\t\tvar offsets = this.offsets;\r\n\t\tvar boundingSphere = this.boundingSphere;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\r\n\t\t\tvar array = Array.prototype.slice.call( attribute.array );\r\n\r\n\t\t\toutput.data.attributes[ key ] = {\r\n\t\t\t\titemSize: attribute.itemSize,\r\n\t\t\t\ttype: attribute.array.constructor.name,\r\n\t\t\t\tarray: array\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( offsets.length > 0 ) {\r\n\r\n\t\t\toutput.data.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tif ( boundingSphere !== null ) {\r\n\r\n\t\t\toutput.data.boundingSphere = {\r\n\t\t\t\tcenter: boundingSphere.center.toArray(),\r\n\t\t\t\tradius: boundingSphere.radius\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tfor ( var attr in this.attributes ) {\r\n\r\n\t\t\tvar sourceAttr = this.attributes[ attr ];\r\n\t\t\tgeometry.addAttribute( attr, sourceAttr.clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar offset = this.offsets[ i ];\r\n\r\n\t\t\tgeometry.offsets.push( {\r\n\r\n\t\t\t\tstart: offset.start,\r\n\t\t\t\tindex: offset.index,\r\n\t\t\t\tcount: offset.count\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.BufferGeometry.prototype );\r\n\r\n// File:src/core/Geometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author kile / http://kile.stravaganza.org/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\nTHREE.Geometry = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.GeometryIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Geometry';\r\n\r\n\tthis.vertices = [];\r\n\tthis.colors = [];  // one-to-one vertex colors, used in Points and Line\r\n\r\n\tthis.faces = [];\r\n\r\n\tthis.faceVertexUvs = [ [] ];\r\n\r\n\tthis.morphTargets = [];\r\n\tthis.morphColors = [];\r\n\tthis.morphNormals = [];\r\n\r\n\tthis.skinWeights = [];\r\n\tthis.skinIndices = [];\r\n\r\n\tthis.lineDistances = [];\r\n\r\n\tthis.boundingBox = null;\r\n\tthis.boundingSphere = null;\r\n\r\n\tthis.hasTangents = false;\r\n\r\n\tthis.dynamic = true; // the intermediate typed arrays will be deleted when set to false\r\n\r\n\t// update flags\r\n\r\n\tthis.verticesNeedUpdate = false;\r\n\tthis.elementsNeedUpdate = false;\r\n\tthis.uvsNeedUpdate = false;\r\n\tthis.normalsNeedUpdate = false;\r\n\tthis.tangentsNeedUpdate = false;\r\n\tthis.colorsNeedUpdate = false;\r\n\tthis.lineDistancesNeedUpdate = false;\r\n\r\n\tthis.groupsNeedUpdate = false;\r\n\r\n};\r\n\r\nTHREE.Geometry.prototype = {\r\n\r\n\tconstructor: THREE.Geometry,\r\n\r\n\tapplyMatrix: function ( matrix ) {\r\n\r\n\t\tvar normalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertex.applyMatrix4( matrix );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingBox !== null ) {\r\n\r\n\t\t\tthis.computeBoundingBox();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.computeBoundingSphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.verticesNeedUpdate = true;\r\n\t\tthis.normalsNeedUpdate = true;\r\n\r\n\t},\r\n\r\n\tfromBufferGeometry: function ( geometry ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar attributes = geometry.attributes;\r\n\r\n\t\tvar vertices = attributes.position.array;\r\n\t\tvar indices = attributes.index !== undefined ? attributes.index.array : undefined;\r\n\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\r\n\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\r\n\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\r\n\r\n\t\tvar tempNormals = [];\r\n\t\tvar tempUVs = [];\r\n\r\n\t\tfor ( var i = 0, j = 0; i < vertices.length; i += 3, j += 2 ) {\r\n\r\n\t\t\tscope.vertices.push( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t\t\tif ( normals !== undefined ) {\r\n\r\n\t\t\t\ttempNormals.push( new THREE.Vector3( normals[ i ], normals[ i + 1 ], normals[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( colors !== undefined ) {\r\n\r\n\t\t\t\tscope.colors.push( new THREE.Color( colors[ i ], colors[ i + 1 ], colors[ i + 2 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\ttempUVs.push( new THREE.Vector2( uvs[ j ], uvs[ j + 1 ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar addFace = function ( a, b, c ) {\r\n\r\n\t\t\tvar vertexNormals = normals !== undefined ? [ tempNormals[ a ].clone(), tempNormals[ b ].clone(), tempNormals[ c ].clone() ] : [];\r\n\t\t\tvar vertexColors = colors !== undefined ? [ scope.colors[ a ].clone(), scope.colors[ b ].clone(), scope.colors[ c ].clone() ] : [];\r\n\r\n\t\t\tscope.faces.push( new THREE.Face3( a, b, c, vertexNormals, vertexColors ) );\r\n\r\n\t\t\tif ( uvs !== undefined ) {\r\n\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ tempUVs[ a ].clone(), tempUVs[ b ].clone(), tempUVs[ c ].clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( indices !== undefined ) {\r\n\r\n\t\t\tvar drawcalls = geometry.drawcalls;\r\n\r\n\t\t\tif ( drawcalls.length > 0 ) {\r\n\r\n\t\t\t\tfor ( var i = 0; i < drawcalls.length; i ++ ) {\r\n\r\n\t\t\t\t\tvar drawcall = drawcalls[ i ];\r\n\r\n\t\t\t\t\tvar start = drawcall.start;\r\n\t\t\t\t\tvar count = drawcall.count;\r\n\t\t\t\t\tvar index = drawcall.index;\r\n\r\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\r\n\r\n\t\t\t\t\t\taddFace( index + indices[ j ], index + indices[ j + 1 ], index + indices[ j + 2 ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\r\n\r\n\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length / 3; i += 3 ) {\r\n\r\n\t\t\t\taddFace( i, i + 1, i + 2 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.computeFaceNormals();\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tthis.boundingBox = geometry.boundingBox.clone();\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.boundingSphere !== null ) {\r\n\r\n\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\r\n\r\n\t\t}\r\n\r\n\t\treturn this;\r\n\r\n\t},\r\n\r\n\tcenter: function () {\r\n\r\n\t\tthis.computeBoundingBox();\r\n\r\n\t\tvar offset = this.boundingBox.center().negate();\r\n\r\n\t\tthis.applyMatrix( new THREE.Matrix4().setPosition( offset ) );\r\n\r\n\t\treturn offset;\r\n\r\n\t},\r\n\r\n\tcomputeFaceNormals: function () {\r\n\r\n\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ f ];\r\n\r\n\t\t\tvar vA = this.vertices[ face.a ];\r\n\t\t\tvar vB = this.vertices[ face.b ];\r\n\t\t\tvar vC = this.vertices[ face.c ];\r\n\r\n\t\t\tcb.subVectors( vC, vB );\r\n\t\t\tab.subVectors( vA, vB );\r\n\t\t\tcb.cross( ab );\r\n\r\n\t\t\tcb.normalize();\r\n\r\n\t\t\tface.normal.copy( cb );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeVertexNormals: function ( areaWeighted ) {\r\n\r\n\t\tvar v, vl, f, fl, face, vertices;\r\n\r\n\t\tvertices = new Array( this.vertices.length );\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tif ( areaWeighted ) {\r\n\r\n\t\t\t// vertex normals weighted by triangle areas\r\n\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\r\n\r\n\t\t\tvar vA, vB, vC;\r\n\t\t\tvar cb = new THREE.Vector3(), ab = new THREE.Vector3();\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvA = this.vertices[ face.a ];\r\n\t\t\t\tvB = this.vertices[ face.b ];\r\n\t\t\t\tvC = this.vertices[ face.c ];\r\n\r\n\t\t\t\tcb.subVectors( vC, vB );\r\n\t\t\t\tab.subVectors( vA, vB );\r\n\t\t\t\tcb.cross( ab );\r\n\r\n\t\t\t\tvertices[ face.a ].add( cb );\r\n\t\t\t\tvertices[ face.b ].add( cb );\r\n\t\t\t\tvertices[ face.c ].add( cb );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tvertices[ face.a ].add( face.normal );\r\n\t\t\t\tvertices[ face.b ].add( face.normal );\r\n\t\t\t\tvertices[ face.c ].add( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\tvertices[ v ].normalize();\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.vertexNormals[ 0 ] = vertices[ face.a ].clone();\r\n\t\t\tface.vertexNormals[ 1 ] = vertices[ face.b ].clone();\r\n\t\t\tface.vertexNormals[ 2 ] = vertices[ face.c ].clone();\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeMorphNormals: function () {\r\n\r\n\t\tvar i, il, f, fl, face;\r\n\r\n\t\t// save original normals\r\n\t\t// - create temp variables on first access\r\n\t\t//   otherwise just copy (for faster repeated calls)\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tif ( ! face.__originalFaceNormal ) {\r\n\r\n\t\t\t\tface.__originalFaceNormal = face.normal.clone();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface.__originalFaceNormal.copy( face.normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! face.__originalVertexNormals ) face.__originalVertexNormals = [];\r\n\r\n\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// use temp geometry to compute face and vertex normals for each morph\r\n\r\n\t\tvar tmpGeo = new THREE.Geometry();\r\n\t\ttmpGeo.faces = this.faces;\r\n\r\n\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\t\t// create on first access\r\n\r\n\t\t\tif ( ! this.morphNormals[ i ] ) {\r\n\r\n\t\t\t\tthis.morphNormals[ i ] = {};\r\n\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\r\n\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\r\n\r\n\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\r\n\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\r\n\r\n\t\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tfaceNormal = new THREE.Vector3();\r\n\t\t\t\t\tvertexNormals = { a: new THREE.Vector3(), b: new THREE.Vector3(), c: new THREE.Vector3() };\r\n\r\n\t\t\t\t\tdstNormalsFace.push( faceNormal );\r\n\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar morphNormals = this.morphNormals[ i ];\r\n\r\n\t\t\t// set vertices to morph target\r\n\r\n\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\r\n\r\n\t\t\t// compute morph normals\r\n\r\n\t\t\ttmpGeo.computeFaceNormals();\r\n\t\t\ttmpGeo.computeVertexNormals();\r\n\r\n\t\t\t// store morph normals\r\n\r\n\t\t\tvar faceNormal, vertexNormals;\r\n\r\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\r\n\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\r\n\r\n\t\t\t\tfaceNormal.copy( face.normal );\r\n\r\n\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\r\n\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\r\n\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore original normals\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tface.normal = face.__originalFaceNormal;\r\n\t\t\tface.vertexNormals = face.__originalVertexNormals;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeTangents: function () {\r\n\r\n\t\t// based on http://www.terathon.com/code/tangent.html\r\n\t\t// tangents go to vertices\r\n\r\n\t\tvar f, fl, v, vl, i, vertexIndex,\r\n\t\t\tface, uv, vA, vB, vC, uvA, uvB, uvC,\r\n\t\t\tx1, x2, y1, y2, z1, z2,\r\n\t\t\ts1, s2, t1, t2, r, t, test,\r\n\t\t\ttan1 = [], tan2 = [],\r\n\t\t\tsdir = new THREE.Vector3(), tdir = new THREE.Vector3(),\r\n\t\t\ttmp = new THREE.Vector3(), tmp2 = new THREE.Vector3(),\r\n\t\t\tn = new THREE.Vector3(), w;\r\n\r\n\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\r\n\r\n\t\t\ttan1[ v ] = new THREE.Vector3();\r\n\t\t\ttan2[ v ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tfunction handleTriangle( context, a, b, c, ua, ub, uc ) {\r\n\r\n\t\t\tvA = context.vertices[ a ];\r\n\t\t\tvB = context.vertices[ b ];\r\n\t\t\tvC = context.vertices[ c ];\r\n\r\n\t\t\tuvA = uv[ ua ];\r\n\t\t\tuvB = uv[ ub ];\r\n\t\t\tuvC = uv[ uc ];\r\n\r\n\t\t\tx1 = vB.x - vA.x;\r\n\t\t\tx2 = vC.x - vA.x;\r\n\t\t\ty1 = vB.y - vA.y;\r\n\t\t\ty2 = vC.y - vA.y;\r\n\t\t\tz1 = vB.z - vA.z;\r\n\t\t\tz2 = vC.z - vA.z;\r\n\r\n\t\t\ts1 = uvB.x - uvA.x;\r\n\t\t\ts2 = uvC.x - uvA.x;\r\n\t\t\tt1 = uvB.y - uvA.y;\r\n\t\t\tt2 = uvC.y - uvA.y;\r\n\r\n\t\t\tr = 1.0 / ( s1 * t2 - s2 * t1 );\r\n\t\t\tsdir.set( ( t2 * x1 - t1 * x2 ) * r,\r\n\t\t\t\t\t  ( t2 * y1 - t1 * y2 ) * r,\r\n\t\t\t\t\t  ( t2 * z1 - t1 * z2 ) * r );\r\n\t\t\ttdir.set( ( s1 * x2 - s2 * x1 ) * r,\r\n\t\t\t\t\t  ( s1 * y2 - s2 * y1 ) * r,\r\n\t\t\t\t\t  ( s1 * z2 - s2 * z1 ) * r );\r\n\r\n\t\t\ttan1[ a ].add( sdir );\r\n\t\t\ttan1[ b ].add( sdir );\r\n\t\t\ttan1[ c ].add( sdir );\r\n\r\n\t\t\ttan2[ a ].add( tdir );\r\n\t\t\ttan2[ b ].add( tdir );\r\n\t\t\ttan2[ c ].add( tdir );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\t\t\tuv = this.faceVertexUvs[ 0 ][ f ]; // use UV layer 0 for tangents\r\n\r\n\t\t\thandleTriangle( this, face.a, face.b, face.c, 0, 1, 2 );\r\n\r\n\t\t}\r\n\r\n\t\tvar faceIndex = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tface = this.faces[ f ];\r\n\r\n\t\t\tfor ( i = 0; i < Math.min( face.vertexNormals.length, 3 ); i ++ ) {\r\n\r\n\t\t\t\tn.copy( face.vertexNormals[ i ] );\r\n\r\n\t\t\t\tvertexIndex = face[ faceIndex[ i ] ];\r\n\r\n\t\t\t\tt = tan1[ vertexIndex ];\r\n\r\n\t\t\t\t// Gram-Schmidt orthogonalize\r\n\r\n\t\t\t\ttmp.copy( t );\r\n\t\t\t\ttmp.sub( n.multiplyScalar( n.dot( t ) ) ).normalize();\r\n\r\n\t\t\t\t// Calculate handedness\r\n\r\n\t\t\t\ttmp2.crossVectors( face.vertexNormals[ i ], t );\r\n\t\t\t\ttest = tmp2.dot( tan2[ vertexIndex ] );\r\n\t\t\t\tw = ( test < 0.0 ) ? - 1.0 : 1.0;\r\n\r\n\t\t\t\tface.vertexTangents[ i ] = new THREE.Vector4( tmp.x, tmp.y, tmp.z, w );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.hasTangents = true;\r\n\r\n\t},\r\n\r\n\tcomputeLineDistances: function () {\r\n\r\n\t\tvar d = 0;\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tif ( i > 0 ) {\r\n\r\n\t\t\t\td += vertices[ i ].distanceTo( vertices[ i - 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.lineDistances[ i ] = d;\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tcomputeBoundingBox: function () {\r\n\r\n\t\tif ( this.boundingBox === null ) {\r\n\r\n\t\t\tthis.boundingBox = new THREE.Box3();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingBox.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tcomputeBoundingSphere: function () {\r\n\r\n\t\tif ( this.boundingSphere === null ) {\r\n\r\n\t\t\tthis.boundingSphere = new THREE.Sphere();\r\n\r\n\t\t}\r\n\r\n\t\tthis.boundingSphere.setFromPoints( this.vertices );\r\n\r\n\t},\r\n\r\n\tmerge: function ( geometry, matrix, materialIndexOffset ) {\r\n\r\n\t\tif ( geometry instanceof THREE.Geometry === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar normalMatrix,\r\n\t\tvertexOffset = this.vertices.length,\r\n\t\tvertices1 = this.vertices,\r\n\t\tvertices2 = geometry.vertices,\r\n\t\tfaces1 = this.faces,\r\n\t\tfaces2 = geometry.faces,\r\n\t\tuvs1 = this.faceVertexUvs[ 0 ],\r\n\t\tuvs2 = geometry.faceVertexUvs[ 0 ];\r\n\r\n\t\tif ( materialIndexOffset === undefined ) materialIndexOffset = 0;\r\n\r\n\t\tif ( matrix !== undefined ) {\r\n\r\n\t\t\tnormalMatrix = new THREE.Matrix3().getNormalMatrix( matrix );\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar vertex = vertices2[ i ];\r\n\r\n\t\t\tvar vertexCopy = vertex.clone();\r\n\r\n\t\t\tif ( matrix !== undefined ) vertexCopy.applyMatrix4( matrix );\r\n\r\n\t\t\tvertices1.push( vertexCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// faces\r\n\r\n\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\r\n\t\t\tfaceVertexNormals = face.vertexNormals,\r\n\t\t\tfaceVertexColors = face.vertexColors;\r\n\r\n\t\t\tfaceCopy = new THREE.Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\r\n\t\t\tfaceCopy.normal.copy( face.normal );\r\n\r\n\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tnormal = faceVertexNormals[ j ].clone();\r\n\r\n\t\t\t\tif ( normalMatrix !== undefined ) {\r\n\r\n\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfaceCopy.vertexNormals.push( normal );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.color.copy( face.color );\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tcolor = faceVertexColors[ j ];\r\n\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\r\n\r\n\t\t\tfaces1.push( faceCopy );\r\n\r\n\t\t}\r\n\r\n\t\t// uvs\r\n\r\n\t\tfor ( i = 0, il = uvs2.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar uv = uvs2[ i ], uvCopy = [];\r\n\r\n\t\t\tif ( uv === undefined ) {\r\n\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = uv.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tuvCopy.push( uv[ j ].clone() );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvs1.push( uvCopy );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tmergeMesh: function ( mesh ) {\r\n\r\n\t\tif ( mesh instanceof THREE.Mesh === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tmesh.matrixAutoUpdate && mesh.updateMatrix();\r\n\r\n\t\tthis.merge( mesh.geometry, mesh.matrix );\r\n\r\n\t},\r\n\r\n\t/*\r\n\t * Checks for duplicate vertices with hashmap.\r\n\t * Duplicated vertices are removed\r\n\t * and faces' vertices are updated.\r\n\t */\r\n\r\n\tmergeVertices: function () {\r\n\r\n\t\tvar verticesMap = {}; // Hashmap for looking up vertice by position coordinates (and making sure they are unique)\r\n\t\tvar unique = [], changes = [];\r\n\r\n\t\tvar v, key;\r\n\t\tvar precisionPoints = 4; // number of decimal points, eg. 4 for epsilon of 0.0001\r\n\t\tvar precision = Math.pow( 10, precisionPoints );\r\n\t\tvar i, il, face;\r\n\t\tvar indices, j, jl;\r\n\r\n\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tv = this.vertices[ i ];\r\n\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\r\n\r\n\t\t\tif ( verticesMap[ key ] === undefined ) {\r\n\r\n\t\t\t\tverticesMap[ key ] = i;\r\n\t\t\t\tunique.push( this.vertices[ i ] );\r\n\t\t\t\tchanges[ i ] = unique.length - 1;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\r\n\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\r\n\t\t// if faces are completely degenerate after merging vertices, we\r\n\t\t// have to remove them from the geometry.\r\n\t\tvar faceIndicesToRemove = [];\r\n\r\n\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = this.faces[ i ];\r\n\r\n\t\t\tface.a = changes[ face.a ];\r\n\t\t\tface.b = changes[ face.b ];\r\n\t\t\tface.c = changes[ face.c ];\r\n\r\n\t\t\tindices = [ face.a, face.b, face.c ];\r\n\r\n\t\t\tvar dupIndex = - 1;\r\n\r\n\t\t\t// if any duplicate vertices are found in a Face3\r\n\t\t\t// we have to remove the face as nothing can be saved\r\n\t\t\tfor ( var n = 0; n < 3; n ++ ) {\r\n\t\t\t\tif ( indices[ n ] == indices[ ( n + 1 ) % 3 ] ) {\r\n\r\n\t\t\t\t\tdupIndex = n;\r\n\t\t\t\t\tfaceIndicesToRemove.push( i );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\r\n\t\t\tvar idx = faceIndicesToRemove[ i ];\r\n\r\n\t\t\tthis.faces.splice( idx, 1 );\r\n\r\n\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Use unique set of vertices\r\n\r\n\t\tvar diff = this.vertices.length - unique.length;\r\n\t\tthis.vertices = unique;\r\n\t\treturn diff;\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.0,\r\n\t\t\t\ttype: 'BufferGeometry',\r\n\t\t\t\tgenerator: 'BufferGeometryExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this.parameters !== undefined ) {\r\n\r\n\t\t\tvar parameters = this.parameters;\r\n\r\n\t\t\tfor ( var key in parameters ) {\r\n\r\n\t\t\t\tif ( parameters[ key ] !== undefined ) output[ key ] = parameters[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn output;\r\n\r\n\t\t}\r\n\r\n\t\tvar vertices = [];\r\n\r\n\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\r\n\r\n\t\t\tvar vertex = this.vertices[ i ];\r\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = [];\r\n\t\tvar normals = [];\r\n\t\tvar normalsHash = {};\r\n\t\tvar colors = [];\r\n\t\tvar colorsHash = {};\r\n\t\tvar uvs = [];\r\n\t\tvar uvsHash = {};\r\n\r\n\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\r\n\r\n\t\t\tvar face = this.faces[ i ];\r\n\r\n\t\t\tvar hasMaterial = false; // face.materialIndex !== undefined;\r\n\t\t\tvar hasFaceUv = false; // deprecated\r\n\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\r\n\t\t\tvar hasFaceNormal = face.normal.length() > 0;\r\n\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\r\n\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\r\n\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\r\n\r\n\t\t\tvar faceType = 0;\r\n\r\n\t\t\tfaceType = setBit( faceType, 0, 0 );\r\n\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\r\n\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\r\n\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\r\n\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\r\n\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\r\n\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\r\n\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\r\n\r\n\t\t\tfaces.push( faceType );\r\n\t\t\tfaces.push( face.a, face.b, face.c );\r\n\r\n\r\n\t\t\t/*\r\n\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\tfaces.push( face.materialIndex );\r\n\r\n\t\t\t}\r\n\t\t\t*/\r\n\r\n\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\r\n\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\tvar vertexNormals = face.vertexNormals;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\r\n\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\tfaces.push( getColorIndex( face.color ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\tvar vertexColors = face.vertexColors;\r\n\r\n\t\t\t\tfaces.push(\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\r\n\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\r\n\t\t\t\t);\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfunction setBit( value, position, enabled ) {\r\n\r\n\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction getNormalIndex( normal ) {\r\n\r\n\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\r\n\r\n\t\t\tif ( normalsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tnormalsHash[ hash ] = normals.length / 3;\r\n\t\t\tnormals.push( normal.x, normal.y, normal.z );\r\n\r\n\t\t\treturn normalsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getColorIndex( color ) {\r\n\r\n\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\r\n\r\n\t\t\tif ( colorsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcolorsHash[ hash ] = colors.length;\r\n\t\t\tcolors.push( color.getHex() );\r\n\r\n\t\t\treturn colorsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\tfunction getUvIndex( uv ) {\r\n\r\n\t\t\tvar hash = uv.x.toString() + uv.y.toString();\r\n\r\n\t\t\tif ( uvsHash[ hash ] !== undefined ) {\r\n\r\n\t\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tuvsHash[ hash ] = uvs.length / 2;\r\n\t\t\tuvs.push( uv.x, uv.y );\r\n\r\n\t\t\treturn uvsHash[ hash ];\r\n\r\n\t\t}\r\n\r\n\t\toutput.data = {};\r\n\r\n\t\toutput.data.vertices = vertices;\r\n\t\toutput.data.normals = normals;\r\n\t\tif ( colors.length > 0 ) output.data.colors = colors;\r\n\t\tif ( uvs.length > 0 ) output.data.uvs = [ uvs ]; // temporal backward compatibility\r\n\t\toutput.data.faces = faces;\r\n\r\n\t\t//\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar geometry = new THREE.Geometry();\r\n\r\n\t\tvar vertices = this.vertices;\r\n\r\n\t\tfor ( var i = 0, il = vertices.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( vertices[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tvar faces = this.faces;\r\n\r\n\t\tfor ( var i = 0, il = faces.length; i < il; i ++ ) {\r\n\r\n\t\t\tgeometry.faces.push( faces[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = this.faceVertexUvs.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar faceVertexUvs = this.faceVertexUvs[ i ];\r\n\r\n\t\t\tif ( geometry.faceVertexUvs[ i ] === undefined ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\r\n\r\n\t\t\t\tfor ( var k = 0, kl = uvs.length; k < kl; k ++ ) {\r\n\r\n\t\t\t\t\tvar uv = uvs[ k ];\r\n\r\n\t\t\t\t\tuvsCopy.push( uv.clone() );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ].push( uvsCopy );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Geometry.prototype );\r\n\r\nTHREE.GeometryIdCount = 0;\r\n\r\n// File:src/cameras/Camera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.Camera = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Camera';\r\n\r\n\tthis.matrixWorldInverse = new THREE.Matrix4();\r\n\tthis.projectionMatrix = new THREE.Matrix4();\r\n\r\n};\r\n\r\nTHREE.Camera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Camera.prototype.constructor = THREE.Camera;\r\n\r\nTHREE.Camera.prototype.getWorldDirection = function () {\r\n\r\n\tvar quaternion = new THREE.Quaternion();\r\n\r\n\treturn function ( optionalTarget ) {\r\n\r\n\t\tvar result = optionalTarget || new THREE.Vector3();\r\n\r\n\t\tthis.getWorldQuaternion( quaternion );\r\n\r\n\t\treturn result.set( 0, 0, - 1 ).applyQuaternion( quaternion );\r\n\r\n\t}\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.lookAt = function () {\r\n\r\n\t// This routine does not support cameras with rotated and/or translated parent(s)\r\n\r\n\tvar m1 = new THREE.Matrix4();\r\n\r\n\treturn function ( vector ) {\r\n\r\n\t\tm1.lookAt( this.position, vector, this.up );\r\n\r\n\t\tthis.quaternion.setFromRotationMatrix( m1 );\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.Camera.prototype.clone = function ( camera ) {\r\n\r\n\tif ( camera === undefined ) camera = new THREE.Camera();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, camera );\r\n\r\n\tcamera.matrixWorldInverse.copy( this.matrixWorldInverse );\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/CubeCamera.js\r\n\r\n/**\r\n * Camera for rendering cube maps\r\n *\t- renders scene into axis-aligned cube\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CubeCamera = function ( near, far, cubeResolution ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'CubeCamera';\r\n\r\n\tvar fov = 90, aspect = 1;\r\n\r\n\tvar cameraPX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPX.up.set( 0, - 1, 0 );\r\n\tcameraPX.lookAt( new THREE.Vector3( 1, 0, 0 ) );\r\n\tthis.add( cameraPX );\r\n\r\n\tvar cameraNX = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNX.up.set( 0, - 1, 0 );\r\n\tcameraNX.lookAt( new THREE.Vector3( - 1, 0, 0 ) );\r\n\tthis.add( cameraNX );\r\n\r\n\tvar cameraPY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPY.up.set( 0, 0, 1 );\r\n\tcameraPY.lookAt( new THREE.Vector3( 0, 1, 0 ) );\r\n\tthis.add( cameraPY );\r\n\r\n\tvar cameraNY = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNY.up.set( 0, 0, - 1 );\r\n\tcameraNY.lookAt( new THREE.Vector3( 0, - 1, 0 ) );\r\n\tthis.add( cameraNY );\r\n\r\n\tvar cameraPZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraPZ.up.set( 0, - 1, 0 );\r\n\tcameraPZ.lookAt( new THREE.Vector3( 0, 0, 1 ) );\r\n\tthis.add( cameraPZ );\r\n\r\n\tvar cameraNZ = new THREE.PerspectiveCamera( fov, aspect, near, far );\r\n\tcameraNZ.up.set( 0, - 1, 0 );\r\n\tcameraNZ.lookAt( new THREE.Vector3( 0, 0, - 1 ) );\r\n\tthis.add( cameraNZ );\r\n\r\n\tthis.renderTarget = new THREE.WebGLRenderTargetCube( cubeResolution, cubeResolution, { format: THREE.RGBFormat, magFilter: THREE.LinearFilter, minFilter: THREE.LinearFilter } );\r\n\r\n\tthis.updateCubeMap = function ( renderer, scene ) {\r\n\r\n\t\tvar renderTarget = this.renderTarget;\r\n\t\tvar generateMipmaps = renderTarget.generateMipmaps;\r\n\r\n\t\trenderTarget.generateMipmaps = false;\r\n\r\n\t\trenderTarget.activeCubeFace = 0;\r\n\t\trenderer.render( scene, cameraPX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 1;\r\n\t\trenderer.render( scene, cameraNX, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 2;\r\n\t\trenderer.render( scene, cameraPY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 3;\r\n\t\trenderer.render( scene, cameraNY, renderTarget );\r\n\r\n\t\trenderTarget.activeCubeFace = 4;\r\n\t\trenderer.render( scene, cameraPZ, renderTarget );\r\n\r\n\t\trenderTarget.generateMipmaps = generateMipmaps;\r\n\r\n\t\trenderTarget.activeCubeFace = 5;\r\n\t\trenderer.render( scene, cameraNZ, renderTarget );\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.CubeCamera.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.CubeCamera.prototype.constructor = THREE.CubeCamera;\r\n\r\n// File:src/cameras/OrthographicCamera.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.OrthographicCamera = function ( left, right, top, bottom, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'OrthographicCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.left = left;\r\n\tthis.right = right;\r\n\tthis.top = top;\r\n\tthis.bottom = bottom;\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 0.1;\r\n\tthis.far = ( far !== undefined ) ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.OrthographicCamera.prototype.constructor = THREE.OrthographicCamera;\r\n\r\nTHREE.OrthographicCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\r\n\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\r\n\tvar cx = ( this.right + this.left ) / 2;\r\n\tvar cy = ( this.top + this.bottom ) / 2;\r\n\r\n\tthis.projectionMatrix.makeOrthographic( cx - dx, cx + dx, cy + dy, cy - dy, this.near, this.far );\r\n\r\n};\r\n\r\nTHREE.OrthographicCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.OrthographicCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.left = this.left;\r\n\tcamera.right = this.right;\r\n\tcamera.top = this.top;\r\n\tcamera.bottom = this.bottom;\r\n\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n};\r\n\r\n// File:src/cameras/PerspectiveCamera.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author greggman / http://games.greggman.com/\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n */\r\n\r\nTHREE.PerspectiveCamera = function ( fov, aspect, near, far ) {\r\n\r\n\tTHREE.Camera.call( this );\r\n\r\n\tthis.type = 'PerspectiveCamera';\r\n\r\n\tthis.zoom = 1;\r\n\r\n\tthis.fov = fov !== undefined ? fov : 50;\r\n\tthis.aspect = aspect !== undefined ? aspect : 1;\r\n\tthis.near = near !== undefined ? near : 0.1;\r\n\tthis.far = far !== undefined ? far : 2000;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype = Object.create( THREE.Camera.prototype );\r\nTHREE.PerspectiveCamera.prototype.constructor = THREE.PerspectiveCamera;\r\n\r\n\r\n/**\r\n * Uses Focal Length (in mm) to estimate and set FOV\r\n * 35mm (fullframe) camera is used if frame size is not specified;\r\n * Formula based on http://www.bobatkins.com/photography/technical/field_of_view.html\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setLens = function ( focalLength, frameHeight ) {\r\n\r\n\tif ( frameHeight === undefined ) frameHeight = 24;\r\n\r\n\tthis.fov = 2 * THREE.Math.radToDeg( Math.atan( frameHeight / ( focalLength * 2 ) ) );\r\n\tthis.updateProjectionMatrix();\r\n\r\n}\r\n\r\n\r\n/**\r\n * Sets an offset in a larger frustum. This is useful for multi-window or\r\n * multi-monitor/multi-machine setups.\r\n *\r\n * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\r\n * the monitors are in grid like this\r\n *\r\n *   +---+---+---+\r\n *   | A | B | C |\r\n *   +---+---+---+\r\n *   | D | E | F |\r\n *   +---+---+---+\r\n *\r\n * then for each monitor you would call it like this\r\n *\r\n *   var w = 1920;\r\n *   var h = 1080;\r\n *   var fullWidth = w * 3;\r\n *   var fullHeight = h * 2;\r\n *\r\n *   --A--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\r\n *   --B--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\r\n *   --C--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\r\n *   --D--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\r\n *   --E--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\r\n *   --F--\r\n *   camera.setOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\r\n *\r\n *   Note there is no reason monitors have to be the same size or in a grid.\r\n */\r\n\r\nTHREE.PerspectiveCamera.prototype.setViewOffset = function ( fullWidth, fullHeight, x, y, width, height ) {\r\n\r\n\tthis.fullWidth = fullWidth;\r\n\tthis.fullHeight = fullHeight;\r\n\tthis.x = x;\r\n\tthis.y = y;\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\tthis.updateProjectionMatrix();\r\n\r\n};\r\n\r\n\r\nTHREE.PerspectiveCamera.prototype.updateProjectionMatrix = function () {\r\n\r\n\tvar fov = THREE.Math.radToDeg( 2 * Math.atan( Math.tan( THREE.Math.degToRad( this.fov ) * 0.5 ) / this.zoom ) );\r\n\r\n\tif ( this.fullWidth ) {\r\n\r\n\t\tvar aspect = this.fullWidth / this.fullHeight;\r\n\t\tvar top = Math.tan( THREE.Math.degToRad( fov * 0.5 ) ) * this.near;\r\n\t\tvar bottom = - top;\r\n\t\tvar left = aspect * bottom;\r\n\t\tvar right = aspect * top;\r\n\t\tvar width = Math.abs( right - left );\r\n\t\tvar height = Math.abs( top - bottom );\r\n\r\n\t\tthis.projectionMatrix.makeFrustum(\r\n\t\t\tleft + this.x * width / this.fullWidth,\r\n\t\t\tleft + ( this.x + this.width ) * width / this.fullWidth,\r\n\t\t\ttop - ( this.y + this.height ) * height / this.fullHeight,\r\n\t\t\ttop - this.y * height / this.fullHeight,\r\n\t\t\tthis.near,\r\n\t\t\tthis.far\r\n\t\t);\r\n\r\n\t} else {\r\n\r\n\t\tthis.projectionMatrix.makePerspective( fov, this.aspect, this.near, this.far );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.PerspectiveCamera.prototype.clone = function () {\r\n\r\n\tvar camera = new THREE.PerspectiveCamera();\r\n\r\n\tTHREE.Camera.prototype.clone.call( this, camera );\r\n\r\n\tcamera.zoom = this.zoom;\r\n\r\n\tcamera.fov = this.fov;\r\n\tcamera.aspect = this.aspect;\r\n\tcamera.near = this.near;\r\n\tcamera.far = this.far;\r\n\r\n\tcamera.projectionMatrix.copy( this.projectionMatrix );\r\n\r\n\treturn camera;\r\n\r\n};\r\n\r\n// File:src/lights/Light.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Light = function ( color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Light';\r\n\t\r\n\tthis.color = new THREE.Color( color );\r\n\r\n};\r\n\r\nTHREE.Light.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Light.prototype.constructor = THREE.Light;\r\n\r\nTHREE.Light.prototype.clone = function ( light ) {\r\n\r\n\tif ( light === undefined ) light = new THREE.Light();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, light );\r\n\r\n\tlight.color.copy( this.color );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AmbientLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AmbientLight = function ( color ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AmbientLight';\r\n\r\n};\r\n\r\nTHREE.AmbientLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AmbientLight.prototype.constructor = THREE.AmbientLight;\r\n\r\nTHREE.AmbientLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.AmbientLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/AreaLight.js\r\n\r\n/**\r\n * @author MPanknin / http://www.redplant.de/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.AreaLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'AreaLight';\r\n\r\n\tthis.normal = new THREE.Vector3( 0, - 1, 0 );\r\n\tthis.right = new THREE.Vector3( 1, 0, 0 );\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.width = 1.0;\r\n\tthis.height = 1.0;\r\n\r\n\tthis.constantAttenuation = 1.5;\r\n\tthis.linearAttenuation = 0.5;\r\n\tthis.quadraticAttenuation = 0.1;\r\n\r\n};\r\n\r\nTHREE.AreaLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.AreaLight.prototype.constructor = THREE.AreaLight;\r\n\r\n\r\n// File:src/lights/DirectionalLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DirectionalLight = function ( color, intensity ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'DirectionalLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\r\n\tthis.shadowCameraLeft = - 500;\r\n\tthis.shadowCameraRight = 500;\r\n\tthis.shadowCameraTop = 500;\r\n\tthis.shadowCameraBottom = - 500;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowCascade = false;\r\n\r\n\tthis.shadowCascadeOffset = new THREE.Vector3( 0, 0, - 1000 );\r\n\tthis.shadowCascadeCount = 2;\r\n\r\n\tthis.shadowCascadeBias = [ 0, 0, 0 ];\r\n\tthis.shadowCascadeWidth = [ 512, 512, 512 ];\r\n\tthis.shadowCascadeHeight = [ 512, 512, 512 ];\r\n\r\n\tthis.shadowCascadeNearZ = [ - 1.000, 0.990, 0.998 ];\r\n\tthis.shadowCascadeFarZ  = [ 0.990, 0.998, 1.000 ];\r\n\r\n\tthis.shadowCascadeArray = [];\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.DirectionalLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.DirectionalLight.prototype.constructor = THREE.DirectionalLight;\r\n\r\nTHREE.DirectionalLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.DirectionalLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\r\n\tlight.shadowCameraLeft = this.shadowCameraLeft;\r\n\tlight.shadowCameraRight = this.shadowCameraRight;\r\n\tlight.shadowCameraTop = this.shadowCameraTop;\r\n\tlight.shadowCameraBottom = this.shadowCameraBottom;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\t//\r\n\r\n\tlight.shadowCascade = this.shadowCascade;\r\n\r\n\tlight.shadowCascadeOffset.copy( this.shadowCascadeOffset );\r\n\tlight.shadowCascadeCount = this.shadowCascadeCount;\r\n\r\n\tlight.shadowCascadeBias = this.shadowCascadeBias.slice( 0 );\r\n\tlight.shadowCascadeWidth = this.shadowCascadeWidth.slice( 0 );\r\n\tlight.shadowCascadeHeight = this.shadowCascadeHeight.slice( 0 );\r\n\r\n\tlight.shadowCascadeNearZ = this.shadowCascadeNearZ.slice( 0 );\r\n\tlight.shadowCascadeFarZ  = this.shadowCascadeFarZ.slice( 0 );\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/HemisphereLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.HemisphereLight = function ( skyColor, groundColor, intensity ) {\r\n\r\n\tTHREE.Light.call( this, skyColor );\r\n\r\n\tthis.type = 'HemisphereLight';\r\n\r\n\tthis.position.set( 0, 100, 0 );\r\n\r\n\tthis.groundColor = new THREE.Color( groundColor );\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\r\n};\r\n\r\nTHREE.HemisphereLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.HemisphereLight.prototype.constructor = THREE.HemisphereLight;\r\n\r\nTHREE.HemisphereLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.HemisphereLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.groundColor.copy( this.groundColor );\r\n\tlight.intensity = this.intensity;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/PointLight.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLight = function ( color, intensity, distance, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'PointLight';\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n};\r\n\r\nTHREE.PointLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.PointLight.prototype.constructor = THREE.PointLight;\r\n\r\nTHREE.PointLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.PointLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.decay = this.decay;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/lights/SpotLight.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpotLight = function ( color, intensity, distance, angle, exponent, decay ) {\r\n\r\n\tTHREE.Light.call( this, color );\r\n\r\n\tthis.type = 'SpotLight';\r\n\r\n\tthis.position.set( 0, 1, 0 );\r\n\tthis.target = new THREE.Object3D();\r\n\r\n\tthis.intensity = ( intensity !== undefined ) ? intensity : 1;\r\n\tthis.distance = ( distance !== undefined ) ? distance : 0;\r\n\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\r\n\tthis.exponent = ( exponent !== undefined ) ? exponent : 10;\r\n\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\r\n\r\n\tthis.castShadow = false;\r\n\tthis.onlyShadow = false;\r\n\r\n\t//\r\n\r\n\tthis.shadowCameraNear = 50;\r\n\tthis.shadowCameraFar = 5000;\r\n\tthis.shadowCameraFov = 50;\r\n\r\n\tthis.shadowCameraVisible = false;\r\n\r\n\tthis.shadowBias = 0;\r\n\tthis.shadowDarkness = 0.5;\r\n\r\n\tthis.shadowMapWidth = 512;\r\n\tthis.shadowMapHeight = 512;\r\n\r\n\t//\r\n\r\n\tthis.shadowMap = null;\r\n\tthis.shadowMapSize = null;\r\n\tthis.shadowCamera = null;\r\n\tthis.shadowMatrix = null;\r\n\r\n};\r\n\r\nTHREE.SpotLight.prototype = Object.create( THREE.Light.prototype );\r\nTHREE.SpotLight.prototype.constructor = THREE.SpotLight;\r\n\r\nTHREE.SpotLight.prototype.clone = function () {\r\n\r\n\tvar light = new THREE.SpotLight();\r\n\r\n\tTHREE.Light.prototype.clone.call( this, light );\r\n\r\n\tlight.target = this.target.clone();\r\n\r\n\tlight.intensity = this.intensity;\r\n\tlight.distance = this.distance;\r\n\tlight.angle = this.angle;\r\n\tlight.exponent = this.exponent;\r\n\tlight.decay = this.decay;\r\n\r\n\tlight.castShadow = this.castShadow;\r\n\tlight.onlyShadow = this.onlyShadow;\r\n\r\n\t//\r\n\r\n\tlight.shadowCameraNear = this.shadowCameraNear;\r\n\tlight.shadowCameraFar = this.shadowCameraFar;\r\n\tlight.shadowCameraFov = this.shadowCameraFov;\r\n\r\n\tlight.shadowCameraVisible = this.shadowCameraVisible;\r\n\r\n\tlight.shadowBias = this.shadowBias;\r\n\tlight.shadowDarkness = this.shadowDarkness;\r\n\r\n\tlight.shadowMapWidth = this.shadowMapWidth;\r\n\tlight.shadowMapHeight = this.shadowMapHeight;\r\n\r\n\treturn light;\r\n\r\n};\r\n\r\n// File:src/loaders/Cache.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Cache = {\r\n\r\n\tfiles: {},\r\n\r\n\tadd: function ( key, file ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\r\n\r\n\t\tthis.files[ key ] = file;\r\n\r\n\t},\r\n\r\n\tget: function ( key ) {\r\n\r\n\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\r\n\r\n\t\treturn this.files[ key ];\r\n\r\n\t},\r\n\r\n\tremove: function ( key ) {\r\n\r\n\t\tdelete this.files[ key ];\r\n\r\n\t},\r\n\r\n\tclear: function () {\r\n\r\n\t\tthis.files = {}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/Loader.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Loader = function ( showStatus ) {\r\n\r\n\tthis.showStatus = showStatus;\r\n\tthis.statusDomElement = showStatus ? THREE.Loader.prototype.addStatusElement() : null;\r\n\r\n\tthis.imageLoader = new THREE.ImageLoader();\r\n\r\n\tthis.onLoadStart = function () {};\r\n\tthis.onLoadProgress = function () {};\r\n\tthis.onLoadComplete = function () {};\r\n\r\n};\r\n\r\nTHREE.Loader.prototype = {\r\n\r\n\tconstructor: THREE.Loader,\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\taddStatusElement: function () {\r\n\r\n\t\tvar e = document.createElement( 'div' );\r\n\r\n\t\te.style.position = 'absolute';\r\n\t\te.style.right = '0px';\r\n\t\te.style.top = '0px';\r\n\t\te.style.fontSize = '0.8em';\r\n\t\te.style.textAlign = 'left';\r\n\t\te.style.background = 'rgba(0,0,0,0.25)';\r\n\t\te.style.color = '#fff';\r\n\t\te.style.width = '120px';\r\n\t\te.style.padding = '0.5em 0.5em 0.5em 0.5em';\r\n\t\te.style.zIndex = 1000;\r\n\r\n\t\te.innerHTML = 'Loading ...';\r\n\r\n\t\treturn e;\r\n\r\n\t},\r\n\r\n\tupdateProgress: function ( progress ) {\r\n\r\n\t\tvar message = 'Loaded ';\r\n\r\n\t\tif ( progress.total ) {\r\n\r\n\t\t\tmessage += ( 100 * progress.loaded / progress.total ).toFixed( 0 ) + '%';\r\n\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmessage += ( progress.loaded / 1024 ).toFixed( 2 ) + ' KB';\r\n\r\n\t\t}\r\n\r\n\t\tthis.statusDomElement.innerHTML = message;\r\n\r\n\t},\r\n\r\n\textractUrlBase: function ( url ) {\r\n\r\n\t\tvar parts = url.split( '/' );\r\n\r\n\t\tif ( parts.length === 1 ) return './';\r\n\r\n\t\tparts.pop();\r\n\r\n\t\treturn parts.join( '/' ) + '/';\r\n\r\n\t},\r\n\r\n\tinitMaterials: function ( materials, texturePath ) {\r\n\r\n\t\tvar array = [];\r\n\r\n\t\tfor ( var i = 0; i < materials.length; ++ i ) {\r\n\r\n\t\t\tarray[ i ] = this.createMaterial( materials[ i ], texturePath );\r\n\r\n\t\t}\r\n\r\n\t\treturn array;\r\n\r\n\t},\r\n\r\n\tneedsTangents: function ( materials ) {\r\n\r\n\t\tfor ( var i = 0, il = materials.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar m = materials[ i ];\r\n\r\n\t\t\tif ( m instanceof THREE.ShaderMaterial ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t},\r\n\r\n\tcreateMaterial: function ( m, texturePath ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tfunction nearest_pow2( n ) {\r\n\r\n\t\t\tvar l = Math.log( n ) / Math.LN2;\r\n\t\t\treturn Math.pow( 2, Math.round(  l ) );\r\n\r\n\t\t}\r\n\r\n\t\tfunction create_texture( where, name, sourceFile, repeat, offset, wrap, anisotropy ) {\r\n\r\n\t\t\tvar fullPath = texturePath + sourceFile;\r\n\r\n\t\t\tvar texture;\r\n\r\n\t\t\tvar loader = THREE.Loader.Handlers.get( fullPath );\r\n\r\n\t\t\tif ( loader !== null ) {\r\n\r\n\t\t\t\ttexture = loader.load( fullPath );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\ttexture = new THREE.Texture();\r\n\r\n\t\t\t\tloader = scope.imageLoader;\r\n\t\t\t\tloader.crossOrigin = scope.crossOrigin;\r\n\t\t\t\tloader.load( fullPath, function ( image ) {\r\n\r\n\t\t\t\t\tif ( THREE.Math.isPowerOfTwo( image.width ) === false ||\r\n\t\t\t\t\t\t THREE.Math.isPowerOfTwo( image.height ) === false ) {\r\n\r\n\t\t\t\t\t\tvar width = nearest_pow2( image.width );\r\n\t\t\t\t\t\tvar height = nearest_pow2( image.height );\r\n\r\n\t\t\t\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\t\t\t\tcanvas.width = width;\r\n\t\t\t\t\t\tcanvas.height = height;\r\n\r\n\t\t\t\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\r\n\r\n\t\t\t\t\t\ttexture.image = canvas;\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\ttexture.image = image;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.sourceFile = sourceFile;\r\n\r\n\t\t\tif ( repeat ) {\r\n\r\n\t\t\t\ttexture.repeat.set( repeat[ 0 ], repeat[ 1 ] );\r\n\r\n\t\t\t\tif ( repeat[ 0 ] !== 1 ) texture.wrapS = THREE.RepeatWrapping;\r\n\t\t\t\tif ( repeat[ 1 ] !== 1 ) texture.wrapT = THREE.RepeatWrapping;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset ) {\r\n\r\n\t\t\t\ttexture.offset.set( offset[ 0 ], offset[ 1 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( wrap ) {\r\n\r\n\t\t\t\tvar wrapMap = {\r\n\t\t\t\t\t'repeat': THREE.RepeatWrapping,\r\n\t\t\t\t\t'mirror': THREE.MirroredRepeatWrapping\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( wrapMap[ wrap[ 0 ] ] !== undefined ) texture.wrapS = wrapMap[ wrap[ 0 ] ];\r\n\t\t\t\tif ( wrapMap[ wrap[ 1 ] ] !== undefined ) texture.wrapT = wrapMap[ wrap[ 1 ] ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( anisotropy ) {\r\n\r\n\t\t\t\ttexture.anisotropy = anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twhere[ name ] = texture;\r\n\r\n\t\t}\r\n\r\n\t\tfunction rgb2hex( rgb ) {\r\n\r\n\t\t\treturn ( rgb[ 0 ] * 255 << 16 ) + ( rgb[ 1 ] * 255 << 8 ) + rgb[ 2 ] * 255;\r\n\r\n\t\t}\r\n\r\n\t\t// defaults\r\n\r\n\t\tvar mtype = 'MeshLambertMaterial';\r\n\t\tvar mpars = { color: 0xeeeeee, opacity: 1.0, map: null, lightMap: null, normalMap: null, bumpMap: null, wireframe: false };\r\n\r\n\t\t// parameters from model file\r\n\r\n\t\tif ( m.shading ) {\r\n\r\n\t\t\tvar shading = m.shading.toLowerCase();\r\n\r\n\t\t\tif ( shading === 'phong' ) mtype = 'MeshPhongMaterial';\r\n\t\t\telse if ( shading === 'basic' ) mtype = 'MeshBasicMaterial';\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.blending !== undefined && THREE[ m.blending ] !== undefined ) {\r\n\r\n\t\t\tmpars.blending = THREE[ m.blending ];\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.transparent !== undefined ) {\r\n\r\n\t\t\tmpars.transparent = m.transparent;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.opacity !== undefined && m.opacity < 1.0 ) {\r\n\r\n\t\t\tmpars.transparent = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthTest !== undefined ) {\r\n\r\n\t\t\tmpars.depthTest = m.depthTest;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.depthWrite !== undefined ) {\r\n\r\n\t\t\tmpars.depthWrite = m.depthWrite;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.visible !== undefined ) {\r\n\r\n\t\t\tmpars.visible = m.visible;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.flipSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.BackSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.doubleSided !== undefined ) {\r\n\r\n\t\t\tmpars.side = THREE.DoubleSide;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.wireframe !== undefined ) {\r\n\r\n\t\t\tmpars.wireframe = m.wireframe;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.vertexColors !== undefined ) {\r\n\r\n\t\t\tif ( m.vertexColors === 'face' ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.FaceColors;\r\n\r\n\t\t\t} else if ( m.vertexColors ) {\r\n\r\n\t\t\t\tmpars.vertexColors = THREE.VertexColors;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// colors\r\n\r\n\t\tif ( m.colorDiffuse ) {\r\n\r\n\t\t\tmpars.color = rgb2hex( m.colorDiffuse );\r\n\r\n\t\t} else if ( m.DbgColor ) {\r\n\r\n\t\t\tmpars.color = m.DbgColor;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorSpecular ) {\r\n\r\n\t\t\tmpars.specular = rgb2hex( m.colorSpecular );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.colorEmissive ) {\r\n\r\n\t\t\tmpars.emissive = rgb2hex( m.colorEmissive );\r\n\r\n\t\t}\r\n\r\n\t\t// modifiers\r\n\r\n\t\tif ( m.transparency !== undefined ) {\r\n\r\n\t\t\tconsole.warn( 'THREE.Loader: transparency has been renamed to opacity' );\r\n\t\t\tm.opacity = m.transparency;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.opacity !== undefined ) {\r\n\r\n\t\t\tmpars.opacity = m.opacity;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.specularCoef ) {\r\n\r\n\t\t\tmpars.shininess = m.specularCoef;\r\n\r\n\t\t}\r\n\r\n\t\t// textures\r\n\r\n\t\tif ( m.mapDiffuse && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'map', m.mapDiffuse, m.mapDiffuseRepeat, m.mapDiffuseOffset, m.mapDiffuseWrap, m.mapDiffuseAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapLight && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'lightMap', m.mapLight, m.mapLightRepeat, m.mapLightOffset, m.mapLightWrap, m.mapLightAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapBump && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'bumpMap', m.mapBump, m.mapBumpRepeat, m.mapBumpOffset, m.mapBumpWrap, m.mapBumpAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormal && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'normalMap', m.mapNormal, m.mapNormalRepeat, m.mapNormalOffset, m.mapNormalWrap, m.mapNormalAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapSpecular && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'specularMap', m.mapSpecular, m.mapSpecularRepeat, m.mapSpecularOffset, m.mapSpecularWrap, m.mapSpecularAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapAlpha && texturePath ) {\r\n\r\n\t\t\tcreate_texture( mpars, 'alphaMap', m.mapAlpha, m.mapAlphaRepeat, m.mapAlphaOffset, m.mapAlphaWrap, m.mapAlphaAnisotropy );\r\n\r\n\t\t}\r\n\r\n\t\t//\r\n\r\n\t\tif ( m.mapBumpScale ) {\r\n\r\n\t\t\tmpars.bumpScale = m.mapBumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( m.mapNormalFactor ) {\r\n\r\n\t\t\tmpars.normalScale = new THREE.Vector2( m.mapNormalFactor, m.mapNormalFactor );\r\n\r\n\t\t}\r\n\r\n\t\tvar material = new THREE[ mtype ]( mpars );\r\n\r\n\t\tif ( m.DbgName !== undefined ) material.name = m.DbgName;\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Loader.Handlers = {\r\n\r\n\thandlers: [],\r\n\r\n\tadd: function ( regex, loader ) {\r\n\r\n\t\tthis.handlers.push( regex, loader );\r\n\r\n\t},\r\n\r\n\tget: function ( file ) {\r\n\r\n\t\tfor ( var i = 0, l = this.handlers.length; i < l; i += 2 ) {\r\n\r\n\t\t\tvar regex = this.handlers[ i ];\r\n\t\t\tvar loader  = this.handlers[ i + 1 ];\r\n\r\n\t\t\tif ( regex.test( file ) ) {\r\n\r\n\t\t\t\treturn loader;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn null;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/XHRLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.XHRLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.XHRLoader.prototype = {\r\n\r\n\tconstructor: THREE.XHRLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tif ( onLoad ) onLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar request = new XMLHttpRequest();\r\n\t\trequest.open( 'GET', url, true );\r\n\r\n\t\trequest.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this.response );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this.response );\r\n\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\trequest.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) request.crossOrigin = this.crossOrigin;\r\n\t\tif ( this.responseType !== undefined ) request.responseType = this.responseType;\r\n\r\n\t\trequest.send( null );\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t},\r\n\r\n\tsetResponseType: function ( value ) {\r\n\r\n\t\tthis.responseType = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ImageLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ImageLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.ImageLoader.prototype = {\r\n\r\n\tconstructor: THREE.ImageLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar cached = THREE.Cache.get( url );\r\n\r\n\t\tif ( cached !== undefined ) {\r\n\r\n\t\t\tonLoad( cached );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar image = document.createElement( 'img' );\r\n\r\n\t\timage.addEventListener( 'load', function ( event ) {\r\n\r\n\t\t\tTHREE.Cache.add( url, this );\r\n\r\n\t\t\tif ( onLoad ) onLoad( this );\r\n\t\t\t\r\n\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t}, false );\r\n\r\n\t\tif ( onProgress !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'progress', function ( event ) {\r\n\r\n\t\t\t\tonProgress( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( onError !== undefined ) {\r\n\r\n\t\t\timage.addEventListener( 'error', function ( event ) {\r\n\r\n\t\t\t\tonError( event );\r\n\r\n\t\t\t}, false );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.crossOrigin !== undefined ) image.crossOrigin = this.crossOrigin;\r\n\r\n\t\timage.src = url;\r\n\r\n\t\tscope.manager.itemStart( url );\r\n\r\n\t\treturn image;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n}\r\n\r\n// File:src/loaders/JSONLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.JSONLoader = function ( showStatus ) {\r\n\r\n\tTHREE.Loader.call( this, showStatus );\r\n\r\n\tthis.withCredentials = false;\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype = Object.create( THREE.Loader.prototype );\r\nTHREE.JSONLoader.prototype.constructor = THREE.JSONLoader;\r\n\r\nTHREE.JSONLoader.prototype.load = function ( url, callback, texturePath ) {\r\n\r\n\t// todo: unify load API to for easier SceneLoader use\r\n\r\n\ttexturePath = texturePath && ( typeof texturePath === 'string' ) ? texturePath : this.extractUrlBase( url );\r\n\r\n\tthis.onLoadStart();\r\n\tthis.loadAjaxJSON( this, url, callback, texturePath );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.loadAjaxJSON = function ( context, url, callback, texturePath, callbackProgress ) {\r\n\r\n\tvar xhr = new XMLHttpRequest();\r\n\r\n\tvar length = 0;\r\n\r\n\txhr.onreadystatechange = function () {\r\n\r\n\t\tif ( xhr.readyState === xhr.DONE ) {\r\n\r\n\t\t\tif ( xhr.status === 200 || xhr.status === 0 ) {\r\n\r\n\t\t\t\tif ( xhr.responseText ) {\r\n\r\n\t\t\t\t\tvar json = JSON.parse( xhr.responseText );\r\n\t\t\t\t\tvar metadata = json.metadata;\r\n\r\n\t\t\t\t\tif ( metadata !== undefined ) {\r\n\r\n\t\t\t\t\t\tif ( metadata.type === 'object' ) {\r\n\r\n\t\t\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' should be loaded with THREE.ObjectLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( metadata.type === 'scene' ) {\r\n\r\n\t\t\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' seems to be a Scene. Use THREE.SceneLoader instead.' );\r\n\t\t\t\t\t\t\treturn;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar result = context.parse( json, texturePath );\r\n\t\t\t\t\tcallback( result.geometry, result.materials );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.error( 'THREE.JSONLoader: ' + url + ' seems to be unreachable or the file is empty.' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// in context of more complex asset initialization\r\n\t\t\t\t// do not block on single failed file\r\n\t\t\t\t// maybe should go even one more level up\r\n\r\n\t\t\t\tcontext.onLoadComplete();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tTHREE.error( 'THREE.JSONLoader: Couldn\\'t load ' + url + ' (' + xhr.status + ')' );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.LOADING ) {\r\n\r\n\t\t\tif ( callbackProgress ) {\r\n\r\n\t\t\t\tif ( length === 0 ) {\r\n\r\n\t\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcallbackProgress( { total: length, loaded: xhr.responseText.length } );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( xhr.readyState === xhr.HEADERS_RECEIVED ) {\r\n\r\n\t\t\tif ( callbackProgress !== undefined ) {\r\n\r\n\t\t\t\tlength = xhr.getResponseHeader( 'Content-Length' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\txhr.open( 'GET', url, true );\r\n\txhr.withCredentials = this.withCredentials;\r\n\txhr.send( null );\r\n\r\n};\r\n\r\nTHREE.JSONLoader.prototype.parse = function ( json, texturePath ) {\r\n\r\n\tvar geometry = new THREE.Geometry(),\r\n\tscale = ( json.scale !== undefined ) ? 1.0 / json.scale : 1.0;\r\n\r\n\tparseModel( scale );\r\n\r\n\tparseSkin();\r\n\tparseMorphing( scale );\r\n\r\n\tgeometry.computeFaceNormals();\r\n\tgeometry.computeBoundingSphere();\r\n\r\n\tfunction parseModel( scale ) {\r\n\r\n\t\tfunction isBitSet( value, position ) {\r\n\r\n\t\t\treturn value & ( 1 << position );\r\n\r\n\t\t}\r\n\r\n\t\tvar i, j, fi,\r\n\r\n\t\toffset, zLength,\r\n\r\n\t\tcolorIndex, normalIndex, uvIndex, materialIndex,\r\n\r\n\t\ttype,\r\n\t\tisQuad,\r\n\t\thasMaterial,\r\n\t\thasFaceVertexUv,\r\n\t\thasFaceNormal, hasFaceVertexNormal,\r\n\t\thasFaceColor, hasFaceVertexColor,\r\n\r\n\t\tvertex, face, faceA, faceB, hex, normal,\r\n\r\n\t\tuvLayer, uv, u, v,\r\n\r\n\t\tfaces = json.faces,\r\n\t\tvertices = json.vertices,\r\n\t\tnormals = json.normals,\r\n\t\tcolors = json.colors,\r\n\r\n\t\tnUvLayers = 0;\r\n\r\n\t\tif ( json.uvs !== undefined ) {\r\n\r\n\t\t\t// disregard empty arrays\r\n\r\n\t\t\tfor ( i = 0; i < json.uvs.length; i ++ ) {\r\n\r\n\t\t\t\tif ( json.uvs[ i ].length ) nUvLayers ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\tgeometry.faceVertexUvs[ i ] = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = vertices.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\tvertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.y = vertices[ offset ++ ] * scale;\r\n\t\t\tvertex.z = vertices[ offset ++ ] * scale;\r\n\r\n\t\t\tgeometry.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t\toffset = 0;\r\n\t\tzLength = faces.length;\r\n\r\n\t\twhile ( offset < zLength ) {\r\n\r\n\t\t\ttype = faces[ offset ++ ];\r\n\r\n\r\n\t\t\tisQuad              = isBitSet( type, 0 );\r\n\t\t\thasMaterial         = isBitSet( type, 1 );\r\n\t\t\thasFaceVertexUv     = isBitSet( type, 3 );\r\n\t\t\thasFaceNormal       = isBitSet( type, 4 );\r\n\t\t\thasFaceVertexNormal = isBitSet( type, 5 );\r\n\t\t\thasFaceColor\t     = isBitSet( type, 6 );\r\n\t\t\thasFaceVertexColor  = isBitSet( type, 7 );\r\n\r\n\t\t\t// console.log(\"type\", type, \"bits\", isQuad, hasMaterial, hasFaceVertexUv, hasFaceNormal, hasFaceVertexNormal, hasFaceColor, hasFaceVertexColor);\r\n\r\n\t\t\tif ( isQuad ) {\r\n\r\n\t\t\t\tfaceA = new THREE.Face3();\r\n\t\t\t\tfaceA.a = faces[ offset ];\r\n\t\t\t\tfaceA.b = faces[ offset + 1 ];\r\n\t\t\t\tfaceA.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\tfaceB = new THREE.Face3();\r\n\t\t\t\tfaceB.a = faces[ offset + 1 ];\r\n\t\t\t\tfaceB.b = faces[ offset + 2 ];\r\n\t\t\t\tfaceB.c = faces[ offset + 3 ];\r\n\r\n\t\t\t\toffset += 4;\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tfaceA.materialIndex = materialIndex;\r\n\t\t\t\t\tfaceB.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi + 1 ] = []\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 4; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tif ( j !== 2 ) geometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\t\t\t\t\t\t\tif ( j !== 0 ) geometry.faceVertexUvs[ i ][ fi + 1 ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tfaceA.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\tfaceB.normal.copy( faceA.normal );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexNormals.push( normal );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\tfaceA.color.setHex( hex );\r\n\t\t\t\t\tfaceB.color.setHex( hex );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 4; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\thex = colors[ colorIndex ];\r\n\r\n\t\t\t\t\t\tif ( i !== 2 ) faceA.vertexColors.push( new THREE.Color( hex ) );\r\n\t\t\t\t\t\tif ( i !== 0 ) faceB.vertexColors.push( new THREE.Color( hex ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( faceA );\r\n\t\t\t\tgeometry.faces.push( faceB );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tface = new THREE.Face3();\r\n\t\t\t\tface.a = faces[ offset ++ ];\r\n\t\t\t\tface.b = faces[ offset ++ ];\r\n\t\t\t\tface.c = faces[ offset ++ ];\r\n\r\n\t\t\t\tif ( hasMaterial ) {\r\n\r\n\t\t\t\t\tmaterialIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// to get face <=> uv index correspondence\r\n\r\n\t\t\t\tfi = geometry.faces.length;\r\n\r\n\t\t\t\tif ( hasFaceVertexUv ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < nUvLayers; i ++ ) {\r\n\r\n\t\t\t\t\t\tuvLayer = json.uvs[ i ];\r\n\r\n\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ] = [];\r\n\r\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tuvIndex = faces[ offset ++ ];\r\n\r\n\t\t\t\t\t\t\tu = uvLayer[ uvIndex * 2 ];\r\n\t\t\t\t\t\t\tv = uvLayer[ uvIndex * 2 + 1 ];\r\n\r\n\t\t\t\t\t\t\tuv = new THREE.Vector2( u, v );\r\n\r\n\t\t\t\t\t\t\tgeometry.faceVertexUvs[ i ][ fi ].push( uv );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceNormal ) {\r\n\r\n\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\tface.normal.set(\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( hasFaceVertexNormal ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalIndex = faces[ offset ++ ] * 3;\r\n\r\n\t\t\t\t\t\tnormal = new THREE.Vector3(\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ++ ],\r\n\t\t\t\t\t\t\tnormals[ normalIndex ]\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tface.vertexNormals.push( normal );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceColor ) {\r\n\r\n\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\tface.color.setHex( colors[ colorIndex ] );\r\n\r\n\t\t\t\t}\r\n\r\n\r\n\t\t\t\tif ( hasFaceVertexColor ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tcolorIndex = faces[ offset ++ ];\r\n\t\t\t\t\t\tface.vertexColors.push( new THREE.Color( colors[ colorIndex ] ) );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.faces.push( face );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction parseSkin() {\r\n\t\tvar influencesPerVertex = ( json.influencesPerVertex !== undefined ) ? json.influencesPerVertex : 2;\r\n\r\n\t\tif ( json.skinWeights ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinWeights.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar x =                               json.skinWeights[ i     ];\r\n\t\t\t\tvar y = ( influencesPerVertex > 1 ) ? json.skinWeights[ i + 1 ] : 0;\r\n\t\t\t\tvar z = ( influencesPerVertex > 2 ) ? json.skinWeights[ i + 2 ] : 0;\r\n\t\t\t\tvar w = ( influencesPerVertex > 3 ) ? json.skinWeights[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinWeights.push( new THREE.Vector4( x, y, z, w ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.skinIndices ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.skinIndices.length; i < l; i += influencesPerVertex ) {\r\n\r\n\t\t\t\tvar a =                               json.skinIndices[ i     ];\r\n\t\t\t\tvar b = ( influencesPerVertex > 1 ) ? json.skinIndices[ i + 1 ] : 0;\r\n\t\t\t\tvar c = ( influencesPerVertex > 2 ) ? json.skinIndices[ i + 2 ] : 0;\r\n\t\t\t\tvar d = ( influencesPerVertex > 3 ) ? json.skinIndices[ i + 3 ] : 0;\r\n\r\n\t\t\t\tgeometry.skinIndices.push( new THREE.Vector4( a, b, c, d ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.bones = json.bones;\r\n\r\n\t\tif ( geometry.bones && geometry.bones.length > 0 && ( geometry.skinWeights.length !== geometry.skinIndices.length || geometry.skinIndices.length !== geometry.vertices.length ) ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.JSONLoader: When skinning, number of vertices (' + geometry.vertices.length + '), skinIndices (' +\r\n\t\t\t\t\tgeometry.skinIndices.length + '), and skinWeights (' + geometry.skinWeights.length + ') should match.' );\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// could change this to json.animations[0] or remove completely\r\n\r\n\t\tgeometry.animation = json.animation;\r\n\t\tgeometry.animations = json.animations;\r\n\r\n\t};\r\n\r\n\tfunction parseMorphing( scale ) {\r\n\r\n\t\tif ( json.morphTargets !== undefined ) {\r\n\r\n\t\t\tvar i, l, v, vl, dstVertices, srcVertices;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphTargets.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphTargets[ i ] = {};\r\n\t\t\t\tgeometry.morphTargets[ i ].name = json.morphTargets[ i ].name;\r\n\t\t\t\tgeometry.morphTargets[ i ].vertices = [];\r\n\r\n\t\t\t\tdstVertices = geometry.morphTargets[ i ].vertices;\r\n\t\t\t\tsrcVertices = json.morphTargets [ i ].vertices;\r\n\r\n\t\t\t\tfor ( v = 0, vl = srcVertices.length; v < vl; v += 3 ) {\r\n\r\n\t\t\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\t\t\tvertex.x = srcVertices[ v ] * scale;\r\n\t\t\t\t\tvertex.y = srcVertices[ v + 1 ] * scale;\r\n\t\t\t\t\tvertex.z = srcVertices[ v + 2 ] * scale;\r\n\r\n\t\t\t\t\tdstVertices.push( vertex );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( json.morphColors !== undefined ) {\r\n\r\n\t\t\tvar i, l, c, cl, dstColors, srcColors, color;\r\n\r\n\t\t\tfor ( i = 0, l = json.morphColors.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tgeometry.morphColors[ i ] = {};\r\n\t\t\t\tgeometry.morphColors[ i ].name = json.morphColors[ i ].name;\r\n\t\t\t\tgeometry.morphColors[ i ].colors = [];\r\n\r\n\t\t\t\tdstColors = geometry.morphColors[ i ].colors;\r\n\t\t\t\tsrcColors = json.morphColors [ i ].colors;\r\n\r\n\t\t\t\tfor ( c = 0, cl = srcColors.length; c < cl; c += 3 ) {\r\n\r\n\t\t\t\t\tcolor = new THREE.Color( 0xffaa00 );\r\n\t\t\t\t\tcolor.setRGB( srcColors[ c ], srcColors[ c + 1 ], srcColors[ c + 2 ] );\r\n\t\t\t\t\tdstColors.push( color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tif ( json.materials === undefined || json.materials.length === 0 ) {\r\n\r\n\t\treturn { geometry: geometry };\r\n\r\n\t} else {\r\n\r\n\t\tvar materials = this.initMaterials( json.materials, texturePath );\r\n\r\n\t\tif ( this.needsTangents( materials ) ) {\r\n\r\n\t\t\tgeometry.computeTangents();\r\n\r\n\t\t}\r\n\r\n\t\treturn { geometry: geometry, materials: materials };\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/LoadingManager.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LoadingManager = function ( onLoad, onProgress, onError ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar loaded = 0, total = 0;\r\n\r\n\tthis.onLoad = onLoad;\r\n\tthis.onProgress = onProgress;\r\n\tthis.onError = onError;\r\n\r\n\tthis.itemStart = function ( url ) {\r\n\r\n\t\ttotal ++;\r\n\r\n\t};\r\n\r\n\tthis.itemEnd = function ( url ) {\r\n\r\n\t\tloaded ++;\r\n\r\n\t\tif ( scope.onProgress !== undefined ) {\r\n\r\n\t\t\tscope.onProgress( url, loaded, total );\r\n\r\n\t\t}\r\n\r\n\t\tif ( loaded === total && scope.onLoad !== undefined ) {\r\n\r\n\t\t\tscope.onLoad();\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.DefaultLoadingManager = new THREE.LoadingManager();\r\n\r\n// File:src/loaders/BufferGeometryLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BufferGeometryLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.BufferGeometryLoader.prototype = {\r\n\r\n\tconstructor: THREE.BufferGeometryLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\t\tvar attributes = json.data.attributes;\r\n\r\n\t\tfor ( var key in attributes ) {\r\n\r\n\t\t\tvar attribute = attributes[ key ];\r\n\t\t\tvar typedArray = new self[ attribute.type ]( attribute.array );\r\n\r\n\t\t\tgeometry.addAttribute( key, new THREE.BufferAttribute( typedArray, attribute.itemSize ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar offsets = json.data.offsets;\r\n\r\n\t\tif ( offsets !== undefined ) {\r\n\r\n\t\t\tgeometry.offsets = JSON.parse( JSON.stringify( offsets ) );\r\n\r\n\t\t}\r\n\r\n\t\tvar boundingSphere = json.data.boundingSphere;\r\n\r\n\t\tif ( boundingSphere !== undefined ) {\r\n\r\n\t\t\tvar center = new THREE.Vector3();\r\n\r\n\t\t\tif ( boundingSphere.center !== undefined ) {\r\n\r\n\t\t\t\tcenter.fromArray( boundingSphere.center );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.boundingSphere = new THREE.Sphere( center, boundingSphere.radius );\r\n\r\n\t\t}\r\n\r\n\t\treturn geometry;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/MaterialLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MaterialLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.MaterialLoader.prototype = {\r\n\r\n\tconstructor: THREE.MaterialLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json ) {\r\n\r\n\t\tvar material = new THREE[ json.type ];\r\n\r\n\t\tif ( json.color !== undefined ) material.color.setHex( json.color );\r\n\t\tif ( json.emissive !== undefined ) material.emissive.setHex( json.emissive );\r\n\t\tif ( json.specular !== undefined ) material.specular.setHex( json.specular );\r\n\t\tif ( json.shininess !== undefined ) material.shininess = json.shininess;\r\n\t\tif ( json.uniforms !== undefined ) material.uniforms = json.uniforms;\r\n\t\tif ( json.vertexShader !== undefined ) material.vertexShader = json.vertexShader;\r\n\t\tif ( json.fragmentShader !== undefined ) material.fragmentShader = json.fragmentShader;\r\n\t\tif ( json.vertexColors !== undefined ) material.vertexColors = json.vertexColors;\r\n\t\tif ( json.shading !== undefined ) material.shading = json.shading;\r\n\t\tif ( json.blending !== undefined ) material.blending = json.blending;\r\n\t\tif ( json.side !== undefined ) material.side = json.side;\r\n\t\tif ( json.opacity !== undefined ) material.opacity = json.opacity;\r\n\t\tif ( json.transparent !== undefined ) material.transparent = json.transparent;\r\n\t\tif ( json.wireframe !== undefined ) material.wireframe = json.wireframe;\r\n\r\n\t\t// for PointCloudMaterial\r\n\t\tif ( json.size !== undefined ) material.size = json.size;\r\n\t\tif ( json.sizeAttenuation !== undefined ) material.sizeAttenuation = json.sizeAttenuation;\r\n\r\n\t\tif ( json.materials !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tmaterial.materials.push( this.parse( json.materials[ i ] ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/ObjectLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.ObjectLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\tthis.texturePath = '';\r\n\r\n};\r\n\r\nTHREE.ObjectLoader.prototype = {\r\n\r\n\tconstructor: THREE.ObjectLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tif ( this.texturePath === '' ) {\r\n\r\n\t\t\tthis.texturePath = url.substring( 0, url.lastIndexOf( '/' ) + 1 );\r\n\r\n\t\t}\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.XHRLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( text ) {\r\n\r\n\t\t\tscope.parse( JSON.parse( text ), onLoad );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetTexturePath: function ( value ) {\r\n\r\n\t\tthis.texturePath = value;\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t},\r\n\r\n\tparse: function ( json, onLoad ) {\r\n\r\n\t\tvar geometries = this.parseGeometries( json.geometries );\r\n\r\n\t\tvar images = this.parseImages( json.images, function () {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t} );\r\n\t\tvar textures  = this.parseTextures( json.textures, images );\r\n\t\tvar materials = this.parseMaterials( json.materials, textures );\r\n\t\tvar object = this.parseObject( json.object, geometries, materials );\r\n\r\n\t\tif ( json.images === undefined || json.images.length === 0 ) {\r\n\r\n\t\t\tif ( onLoad !== undefined ) onLoad( object );\r\n\r\n\t\t}\r\n\r\n\t\treturn object;\r\n\r\n\t},\r\n\r\n\tparseGeometries: function ( json ) {\r\n\r\n\t\tvar geometries = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar geometryLoader = new THREE.JSONLoader();\r\n\t\t\tvar bufferGeometryLoader = new THREE.BufferGeometryLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar geometry;\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\t\tcase 'PlaneGeometry':\r\n\t\t\t\t\tcase 'PlaneBufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE[ data.type ](\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BoxGeometry':\r\n\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.BoxGeometry(\r\n\t\t\t\t\t\t\tdata.width,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.depth,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.depthSegments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CircleGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CircleGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.segments\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'CylinderGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.CylinderGeometry(\r\n\t\t\t\t\t\t\tdata.radiusTop,\r\n\t\t\t\t\t\t\tdata.radiusBottom,\r\n\t\t\t\t\t\t\tdata.height,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.openEnded\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'SphereGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.SphereGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.widthSegments,\r\n\t\t\t\t\t\t\tdata.heightSegments,\r\n\t\t\t\t\t\t\tdata.phiStart,\r\n\t\t\t\t\t\t\tdata.phiLength,\r\n\t\t\t\t\t\t\tdata.thetaStart,\r\n\t\t\t\t\t\t\tdata.thetaLength\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'IcosahedronGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.IcosahedronGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.detail\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.arc\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'TorusKnotGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = new THREE.TorusKnotGeometry(\r\n\t\t\t\t\t\t\tdata.radius,\r\n\t\t\t\t\t\t\tdata.tube,\r\n\t\t\t\t\t\t\tdata.radialSegments,\r\n\t\t\t\t\t\t\tdata.tubularSegments,\r\n\t\t\t\t\t\t\tdata.p,\r\n\t\t\t\t\t\t\tdata.q,\r\n\t\t\t\t\t\t\tdata.heightScale\r\n\t\t\t\t\t\t);\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'BufferGeometry':\r\n\r\n\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\tcase 'Geometry':\r\n\r\n\t\t\t\t\t\tgeometry = geometryLoader.parse( data.data ).geometry;\r\n\r\n\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) geometry.name = data.name;\r\n\r\n\t\t\t\tgeometries[ data.uuid ] = geometry;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn geometries;\r\n\r\n\t},\r\n\r\n\tparseMaterials: function ( json, textures ) {\r\n\r\n\t\tvar materials = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tvar getTexture = function ( name ) {\r\n\r\n\t\t\t\tif ( textures[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined texture', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn textures[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar loader = new THREE.MaterialLoader();\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\t\t\t\tvar material = loader.parse( data );\r\n\r\n\t\t\t\tmaterial.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) material.name = data.name;\r\n\r\n\t\t\t\tif ( data.map !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.map = getTexture( data.map );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.bumpMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.bumpMap = getTexture( data.bumpMap );\r\n\t\t\t\t\tif ( data.bumpScale ) {\r\n\t\t\t\t\t\tmaterial.bumpScale = new THREE.Vector2( data.bumpScale, data.bumpScale );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.alphaMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.alphaMap = getTexture( data.alphaMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.envMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.envMap = getTexture( data.envMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.normalMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.normalMap = getTexture( data.normalMap );\r\n\t\t\t\t\tif ( data.normalScale ) {\r\n\t\t\t\t\t\tmaterial.normalScale = new THREE.Vector2( data.normalScale, data.normalScale );\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.lightMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.lightMap = getTexture( data.lightMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( data.specularMap !== undefined ) {\r\n\r\n\t\t\t\t\tmaterial.specularMap = getTexture( data.specularMap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmaterials[ data.uuid ] = material;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn materials;\r\n\r\n\t},\r\n\r\n\tparseImages: function ( json, onLoad ) {\r\n\r\n\t\tvar scope = this;\r\n\t\tvar images = {};\r\n\r\n\t\tif ( json !== undefined && json.length > 0 ) {\r\n\r\n\t\t\tvar manager = new THREE.LoadingManager( onLoad );\r\n\r\n\t\t\tvar loader = new THREE.ImageLoader( manager );\r\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\r\n\t\t\tvar loadImage = function ( url ) {\r\n\r\n\t\t\t\tscope.manager.itemStart( url );\r\n\r\n\t\t\t\treturn loader.load( url, function () {\r\n\r\n\t\t\t\t\tscope.manager.itemEnd( url );\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar image = json[ i ];\r\n\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.texturePath + image.url;\r\n\r\n\t\t\t\timages[ image.uuid ] = loadImage( path );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn images;\r\n\r\n\t},\r\n\r\n\tparseTextures: function ( json, images ) {\r\n\r\n\t\tvar textures = {};\r\n\r\n\t\tif ( json !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar data = json[ i ];\r\n\r\n\t\t\t\tif ( data.image === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: No \"image\" speficied for', data.uuid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( images[ data.image ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined image', data.image );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar texture = new THREE.Texture( images[ data.image ] );\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\ttexture.uuid = data.uuid;\r\n\r\n\t\t\t\tif ( data.name !== undefined ) texture.name = data.name;\r\n\t\t\t\tif ( data.repeat !== undefined ) texture.repeat = new THREE.Vector2( data.repeat[ 0 ], data.repeat[ 1 ] );\r\n\t\t\t\tif ( data.minFilter !== undefined ) texture.minFilter = THREE[ data.minFilter ];\r\n\t\t\t\tif ( data.magFilter !== undefined ) texture.magFilter = THREE[ data.magFilter ];\r\n\t\t\t\tif ( data.anisotropy !== undefined ) texture.anisotropy = data.anisotropy;\r\n\t\t\t\tif ( data.wrap instanceof Array ) {\r\n\r\n\t\t\t\t\ttexture.wrapS = THREE[ data.wrap[ 0 ] ];\r\n\t\t\t\t\ttexture.wrapT = THREE[ data.wrap[ 1 ] ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttextures[ data.uuid ] = texture;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn textures;\r\n\r\n\t},\r\n\r\n\tparseObject: function () {\r\n\r\n\t\tvar matrix = new THREE.Matrix4();\r\n\r\n\t\treturn function ( data, geometries, materials ) {\r\n\r\n\t\t\tvar object;\r\n\r\n\t\t\tvar getGeometry = function ( name ) {\r\n\r\n\t\t\t\tif ( geometries[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined geometry', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn geometries[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tvar getMaterial = function ( name ) {\r\n\r\n\t\t\t\tif ( materials[ name ] === undefined ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.ObjectLoader: Undefined material', name );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn materials[ name ];\r\n\r\n\t\t\t};\r\n\r\n\t\t\tswitch ( data.type ) {\r\n\r\n\t\t\t\tcase 'Scene':\r\n\r\n\t\t\t\t\tobject = new THREE.Scene();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PerspectiveCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'OrthographicCamera':\r\n\r\n\t\t\t\t\tobject = new THREE.OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'AmbientLight':\r\n\r\n\t\t\t\t\tobject = new THREE.AmbientLight( data.color );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'DirectionalLight':\r\n\r\n\t\t\t\t\tobject = new THREE.DirectionalLight( data.color, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointLight':\r\n\r\n\t\t\t\t\tobject = new THREE.PointLight( data.color, data.intensity, data.distance, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'SpotLight':\r\n\r\n\t\t\t\t\tobject = new THREE.SpotLight( data.color, data.intensity, data.distance, data.angle, data.exponent, data.decay );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'HemisphereLight':\r\n\r\n\t\t\t\t\tobject = new THREE.HemisphereLight( data.color, data.groundColor, data.intensity );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Mesh':\r\n\r\n\t\t\t\t\tobject = new THREE.Mesh( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Line':\r\n\r\n\t\t\t\t\tobject = new THREE.Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'PointCloud':\r\n\r\n\t\t\t\t\tobject = new THREE.PointCloud( getGeometry( data.geometry ), getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Sprite':\r\n\r\n\t\t\t\t\tobject = new THREE.Sprite( getMaterial( data.material ) );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Group':\r\n\r\n\t\t\t\t\tobject = new THREE.Group();\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tobject = new THREE.Object3D();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobject.uuid = data.uuid;\r\n\r\n\t\t\tif ( data.name !== undefined ) object.name = data.name;\r\n\t\t\tif ( data.matrix !== undefined ) {\r\n\r\n\t\t\t\tmatrix.fromArray( data.matrix );\r\n\t\t\t\tmatrix.decompose( object.position, object.quaternion, object.scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( data.position !== undefined ) object.position.fromArray( data.position );\r\n\t\t\t\tif ( data.rotation !== undefined ) object.rotation.fromArray( data.rotation );\r\n\t\t\t\tif ( data.scale !== undefined ) object.scale.fromArray( data.scale );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( data.visible !== undefined ) object.visible = data.visible;\r\n\t\t\tif ( data.userData !== undefined ) object.userData = data.userData;\r\n\r\n\t\t\tif ( data.children !== undefined ) {\r\n\r\n\t\t\t\tfor ( var child in data.children ) {\r\n\r\n\t\t\t\t\tobject.add( this.parseObject( data.children[ child ], geometries, materials ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn object;\r\n\r\n\t\t}\r\n\r\n\t}()\r\n\r\n};\r\n\r\n// File:src/loaders/TextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.TextureLoader = function ( manager ) {\r\n\r\n\tthis.manager = ( manager !== undefined ) ? manager : THREE.DefaultLoadingManager;\r\n\r\n};\r\n\r\nTHREE.TextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.TextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar loader = new THREE.ImageLoader( scope.manager );\r\n\t\tloader.setCrossOrigin( this.crossOrigin );\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\tvar texture = new THREE.Texture( image );\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad !== undefined ) {\r\n\r\n\t\t\t\tonLoad( texture );\r\n\r\n\t\t\t}\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\t},\r\n\r\n\tsetCrossOrigin: function ( value ) {\r\n\r\n\t\tthis.crossOrigin = value;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/BinaryTextureLoader.js\r\n\r\n/**\r\n * @author Nikos M. / https://github.com/foo123/\r\n *\r\n * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\r\n */\r\n\r\nTHREE.DataTextureLoader = THREE.BinaryTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\nTHREE.BinaryTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.BinaryTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onProgress, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar texture = new THREE.DataTexture( );\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\tvar texData = scope._parser( buffer );\r\n\r\n\t\t\tif ( !texData ) return;\r\n\r\n\t\t\tif ( undefined !== texData.image ) {\r\n\r\n\t\t\t\ttexture.image = texData.image;\r\n\r\n\t\t\t} else if ( undefined !== texData.data ) {\r\n\r\n\t\t\t\ttexture.image.width = texData.width;\r\n\t\t\t\ttexture.image.height = texData.height;\r\n\t\t\t\ttexture.image.data = texData.data;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.wrapS = undefined !== texData.wrapS ? texData.wrapS : THREE.ClampToEdgeWrapping;\r\n\t\t\ttexture.wrapT = undefined !== texData.wrapT ? texData.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\t\t\ttexture.magFilter = undefined !== texData.magFilter ? texData.magFilter : THREE.LinearFilter;\r\n\t\t\ttexture.minFilter = undefined !== texData.minFilter ? texData.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\t\t\ttexture.anisotropy = undefined !== texData.anisotropy ? texData.anisotropy : 1;\r\n\r\n\t\t\tif ( undefined !== texData.format ) {\r\n\r\n\t\t\t\ttexture.format = texData.format;\r\n\r\n\t\t\t}\r\n\t\t\tif ( undefined !== texData.type ) {\r\n\r\n\t\t\t\ttexture.type = texData.type;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( undefined !== texData.mipmaps ) {\r\n\r\n\t\t\t\ttexture.mipmaps = texData.mipmaps;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( 1 === texData.mipmapCount ) {\r\n\r\n\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t}\r\n\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture, texData );\r\n\r\n\t\t}, onProgress, onError );\r\n\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/loaders/CompressedTextureLoader.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * Abstract Base class to block based textures loader (dds, pvr, ...)\r\n */\r\n\r\nTHREE.CompressedTextureLoader = function () {\r\n\r\n\t// override in sub classes\r\n\tthis._parser = null;\r\n\r\n};\r\n\r\n\r\nTHREE.CompressedTextureLoader.prototype = {\r\n\r\n\tconstructor: THREE.CompressedTextureLoader,\r\n\r\n\tload: function ( url, onLoad, onError ) {\r\n\r\n\t\tvar scope = this;\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar texture = new THREE.CompressedTexture();\r\n\t\ttexture.image = images;\r\n\r\n\t\tvar loader = new THREE.XHRLoader();\r\n\t\tloader.setResponseType( 'arraybuffer' );\r\n\r\n\t\tif ( url instanceof Array ) {\r\n\r\n\t\t\tvar loaded = 0;\r\n\r\n\t\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\r\n\r\n\t\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\t\timages[ i ] = {\r\n\t\t\t\t\t\twidth: texDatas.width,\r\n\t\t\t\t\t\theight: texDatas.height,\r\n\t\t\t\t\t\tformat: texDatas.format,\r\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\t\tif (texDatas.mipmapCount == 1)\r\n \t\t\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t};\r\n\r\n\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\r\n\r\n\t\t\t\tloadTexture( i );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// compressed cubemap texture stored in a single DDS file\r\n\r\n\t\t\tloader.load( url, function ( buffer ) {\r\n\r\n\t\t\t\tvar texDatas = scope._parser( buffer, true );\r\n\r\n\t\t\t\tif ( texDatas.isCubemap ) {\r\n\r\n\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\r\n\r\n\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\r\n\r\n\t\t\t\t\t\timages[ f ] = { mipmaps : [] };\r\n\r\n\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\r\n\r\n\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\r\n\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\r\n\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\r\n\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttexture.image.width = texDatas.width;\r\n\t\t\t\t\ttexture.image.height = texDatas.height;\r\n\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\r\n\r\n\t\t\t\t\ttexture.minFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.format = texDatas.format;\r\n\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t} );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/Material.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Material = function () {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.MaterialIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.type = 'Material';\r\n\r\n\tthis.side = THREE.FrontSide;\r\n\r\n\tthis.opacity = 1;\r\n\tthis.transparent = false;\r\n\r\n\tthis.blending = THREE.NormalBlending;\r\n\r\n\tthis.blendSrc = THREE.SrcAlphaFactor;\r\n\tthis.blendDst = THREE.OneMinusSrcAlphaFactor;\r\n\tthis.blendEquation = THREE.AddEquation;\r\n\tthis.blendSrcAlpha = null;\r\n\tthis.blendDstAlpha = null;\r\n\tthis.blendEquationAlpha = null;\r\n\r\n\tthis.depthTest = true;\r\n\tthis.depthWrite = true;\r\n\r\n\tthis.colorWrite = true;\r\n\r\n\tthis.polygonOffset = false;\r\n\tthis.polygonOffsetFactor = 0;\r\n\tthis.polygonOffsetUnits = 0;\r\n\r\n\tthis.alphaTest = 0;\r\n\r\n\tthis.overdraw = 0; // Overdrawn pixels (typically between 0 and 1) for fixing antialiasing gaps in CanvasRenderer\r\n\r\n\tthis.visible = true;\r\n\r\n\tthis._needsUpdate = true;\r\n\r\n};\r\n\r\nTHREE.Material.prototype = {\r\n\r\n\tconstructor: THREE.Material,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tsetValues: function ( values ) {\r\n\r\n\t\tif ( values === undefined ) return;\r\n\r\n\t\tfor ( var key in values ) {\r\n\r\n\t\t\tvar newValue = values[ key ];\r\n\r\n\t\t\tif ( newValue === undefined ) {\r\n\r\n\t\t\t\tTHREE.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\r\n\t\t\t\tcontinue;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( key in this ) {\r\n\r\n\t\t\t\tvar currentValue = this[ key ];\r\n\r\n\t\t\t\tif ( currentValue instanceof THREE.Color ) {\r\n\r\n\t\t\t\t\tcurrentValue.set( newValue );\r\n\r\n\t\t\t\t} else if ( currentValue instanceof THREE.Vector3 && newValue instanceof THREE.Vector3 ) {\r\n\r\n\t\t\t\t\tcurrentValue.copy( newValue );\r\n\r\n\t\t\t\t} else if ( key == 'overdraw' ) {\r\n\r\n\t\t\t\t\t// ensure overdraw is backwards-compatable with legacy boolean type\r\n\t\t\t\t\tthis[ key ] = Number( newValue );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis[ key ] = newValue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type\r\n\t\t};\r\n\r\n\t\tif ( this.name !== \"\" ) output.name = this.name;\r\n\r\n\t\tif ( this instanceof THREE.MeshBasicMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== THREE.SmoothShading ) output.shading = this.shading;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\t\t\toutput.emissive = this.emissive.getHex();\r\n\t\t\toutput.specular = this.specular.getHex();\r\n\t\t\toutput.shininess = this.shininess;\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.shading !== THREE.SmoothShading ) output.shading = this.shading;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\t\t\tif ( this.side !== THREE.FrontSide ) output.side = this.side;\r\n\r\n\t\t} else if ( this instanceof THREE.PointCloudMaterial ) {\r\n\r\n\t\t\toutput.size  = this.size;\r\n\t\t\toutput.sizeAttenuation = this.sizeAttenuation;\r\n\t\t\toutput.color = this.color.getHex();\r\n\r\n\t\t\tif ( this.vertexColors !== THREE.NoColors ) output.vertexColors = this.vertexColors;\r\n\t\t\tif ( this.blending !== THREE.NormalBlending ) output.blending = this.blending;\r\n\r\n\t\t} else if ( this instanceof THREE.ShaderMaterial ) {\r\n\r\n\t\t\toutput.uniforms = this.uniforms;\r\n\t\t\toutput.vertexShader = this.vertexShader;\r\n\t\t\toutput.fragmentShader = this.fragmentShader;\r\n\r\n\t\t} else if ( this instanceof THREE.SpriteMaterial ) {\r\n\r\n\t\t\toutput.color = this.color.getHex();\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.opacity < 1 ) output.opacity = this.opacity;\r\n\t\tif ( this.transparent !== false ) output.transparent = this.transparent;\r\n\t\tif ( this.wireframe !== false ) output.wireframe = this.wireframe;\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function ( material ) {\r\n\r\n\t\tif ( material === undefined ) material = new THREE.Material();\r\n\r\n\t\tmaterial.name = this.name;\r\n\r\n\t\tmaterial.side = this.side;\r\n\r\n\t\tmaterial.opacity = this.opacity;\r\n\t\tmaterial.transparent = this.transparent;\r\n\r\n\t\tmaterial.blending = this.blending;\r\n\r\n\t\tmaterial.blendSrc = this.blendSrc;\r\n\t\tmaterial.blendDst = this.blendDst;\r\n\t\tmaterial.blendEquation = this.blendEquation;\r\n\t\tmaterial.blendSrcAlpha = this.blendSrcAlpha;\r\n\t\tmaterial.blendDstAlpha = this.blendDstAlpha;\r\n\t\tmaterial.blendEquationAlpha = this.blendEquationAlpha;\r\n\r\n\t\tmaterial.depthTest = this.depthTest;\r\n\t\tmaterial.depthWrite = this.depthWrite;\r\n\r\n\t\tmaterial.polygonOffset = this.polygonOffset;\r\n\t\tmaterial.polygonOffsetFactor = this.polygonOffsetFactor;\r\n\t\tmaterial.polygonOffsetUnits = this.polygonOffsetUnits;\r\n\r\n\t\tmaterial.alphaTest = this.alphaTest;\r\n\r\n\t\tmaterial.overdraw = this.overdraw;\r\n\r\n\t\tmaterial.visible = this.visible;\r\n\r\n\t\treturn material;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Material.prototype );\r\n\r\nTHREE.MaterialIdCount = 0;\r\n\r\n// File:src/materials/LineBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *  linecap: \"round\",\r\n *  linejoin: \"round\",\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\tthis.linecap = 'round';\r\n\tthis.linejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineBasicMaterial.prototype.constructor = THREE.LineBasicMaterial;\r\n\r\nTHREE.LineBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\tmaterial.linecap = this.linecap;\r\n\tmaterial.linejoin = this.linejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/LineDashedMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  linewidth: <float>,\r\n *\r\n *  scale: <float>,\r\n *  dashSize: <float>,\r\n *  gapSize: <float>,\r\n *\r\n *  vertexColors: <bool>\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.LineDashedMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'LineDashedMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.scale = 1;\r\n\tthis.dashSize = 3;\r\n\tthis.gapSize = 1;\r\n\r\n\tthis.vertexColors = false;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.LineDashedMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.LineDashedMaterial.prototype.constructor = THREE.LineDashedMaterial;\r\n\r\nTHREE.LineDashedMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.LineDashedMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.linewidth = this.linewidth;\r\n\r\n\tmaterial.scale = this.scale;\r\n\tmaterial.dashSize = this.dashSize;\r\n\tmaterial.gapSize = this.gapSize;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshBasicMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshBasicMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // emissive\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshBasicMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshBasicMaterial.prototype.constructor = THREE.MeshBasicMaterial;\r\n\r\nTHREE.MeshBasicMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshBasicMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshLambertMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshLambertMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshLambertMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshLambertMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshLambertMaterial.prototype.constructor = THREE.MeshLambertMaterial;\r\n\r\nTHREE.MeshLambertMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshLambertMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshPhongMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  emissive: <hex>,\r\n *  specular: <hex>,\r\n *  shininess: <float>,\r\n *  opacity: <float>,\r\n *\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  lightMap: new THREE.Texture( <Image> ),\r\n *\r\n *  bumpMap: new THREE.Texture( <Image> ),\r\n *  bumpScale: <float>,\r\n *\r\n *  normalMap: new THREE.Texture( <Image> ),\r\n *  normalScale: <Vector2>,\r\n *\r\n *  specularMap: new THREE.Texture( <Image> ),\r\n *\r\n *  alphaMap: new THREE.Texture( <Image> ),\r\n *\r\n *  envMap: new THREE.TextureCube( [posx, negx, posy, negy, posz, negz] ),\r\n *  combine: THREE.Multiply,\r\n *  reflectivity: <float>,\r\n *  refractionRatio: <float>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.MeshPhongMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshPhongMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff ); // diffuse\r\n\tthis.emissive = new THREE.Color( 0x000000 );\r\n\tthis.specular = new THREE.Color( 0x111111 );\r\n\tthis.shininess = 30;\r\n\r\n\tthis.metal = false;\r\n\r\n\tthis.wrapAround = false;\r\n\tthis.wrapRGB = new THREE.Vector3( 1, 1, 1 );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.lightMap = null;\r\n\r\n\tthis.bumpMap = null;\r\n\tthis.bumpScale = 1;\r\n\r\n\tthis.normalMap = null;\r\n\tthis.normalScale = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.specularMap = null;\r\n\r\n\tthis.alphaMap = null;\r\n\r\n\tthis.envMap = null;\r\n\tthis.combine = THREE.MultiplyOperation;\r\n\tthis.reflectivity = 1;\r\n\tthis.refractionRatio = 0.98;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\tthis.wireframeLinecap = 'round';\r\n\tthis.wireframeLinejoin = 'round';\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.skinning = false;\r\n\tthis.morphTargets = false;\r\n\tthis.morphNormals = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshPhongMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshPhongMaterial.prototype.constructor = THREE.MeshPhongMaterial;\r\n\r\nTHREE.MeshPhongMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshPhongMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.emissive.copy( this.emissive );\r\n\tmaterial.specular.copy( this.specular );\r\n\tmaterial.shininess = this.shininess;\r\n\r\n\tmaterial.metal = this.metal;\r\n\r\n\tmaterial.wrapAround = this.wrapAround;\r\n\tmaterial.wrapRGB.copy( this.wrapRGB );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.lightMap = this.lightMap;\r\n\r\n\tmaterial.bumpMap = this.bumpMap;\r\n\tmaterial.bumpScale = this.bumpScale;\r\n\r\n\tmaterial.normalMap = this.normalMap;\r\n\tmaterial.normalScale.copy( this.normalScale );\r\n\r\n\tmaterial.specularMap = this.specularMap;\r\n\r\n\tmaterial.alphaMap = this.alphaMap;\r\n\r\n\tmaterial.envMap = this.envMap;\r\n\tmaterial.combine = this.combine;\r\n\tmaterial.reflectivity = this.reflectivity;\r\n\tmaterial.refractionRatio = this.refractionRatio;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\tmaterial.wireframeLinecap = this.wireframeLinecap;\r\n\tmaterial.wireframeLinejoin = this.wireframeLinejoin;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshDepthMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshDepthMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'MeshDepthMaterial';\r\n\r\n\tthis.morphTargets = false;\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshDepthMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshDepthMaterial.prototype.constructor = THREE.MeshDepthMaterial;\r\n\r\nTHREE.MeshDepthMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshDepthMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshNormalMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n *\r\n * parameters = {\r\n *  opacity: <float>,\r\n *\r\n *  shading: THREE.FlatShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>\r\n * }\r\n */\r\n\r\nTHREE.MeshNormalMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this, parameters );\r\n\r\n\tthis.type = 'MeshNormalMaterial';\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.morphTargets = false;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.MeshNormalMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.MeshNormalMaterial.prototype.constructor = THREE.MeshNormalMaterial;\r\n\r\nTHREE.MeshNormalMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.MeshNormalMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/MeshFaceMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.MeshFaceMaterial = function ( materials ) {\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.type = 'MeshFaceMaterial';\r\n\t\r\n\tthis.materials = materials instanceof Array ? materials : [];\r\n\r\n};\r\n\r\nTHREE.MeshFaceMaterial.prototype = {\r\n\r\n\tconstructor: THREE.MeshFaceMaterial,\r\n\r\n\ttoJSON: function () {\r\n\r\n\t\tvar output = {\r\n\t\t\tmetadata: {\r\n\t\t\t\tversion: 4.2,\r\n\t\t\t\ttype: 'material',\r\n\t\t\t\tgenerator: 'MaterialExporter'\r\n\t\t\t},\r\n\t\t\tuuid: this.uuid,\r\n\t\t\ttype: this.type,\r\n\t\t\tmaterials: []\r\n\t\t};\r\n\r\n\t\tfor ( var i = 0, l = this.materials.length; i < l; i ++ ) {\r\n\r\n\t\t\toutput.materials.push( this.materials[ i ].toJSON() );\r\n\r\n\t\t}\r\n\r\n\t\treturn output;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar material = new THREE.MeshFaceMaterial();\r\n\r\n\t\tfor ( var i = 0; i < this.materials.length; i ++ ) {\r\n\r\n\t\t\tmaterial.materials.push( this.materials[ i ].clone() );\r\n\r\n\t\t}\r\n\r\n\t\treturn material;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/materials/PointCloudMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  size: <float>,\r\n *  sizeAttenuation: <bool>,\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  vertexColors: <bool>,\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.PointCloudMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'PointCloudMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\r\n\tthis.map = null;\r\n\r\n\tthis.size = 1;\r\n\tthis.sizeAttenuation = true;\r\n\r\n\tthis.vertexColors = THREE.NoColors;\r\n\r\n\tthis.fog = true;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.PointCloudMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.PointCloudMaterial.prototype.constructor = THREE.PointCloudMaterial;\r\n\r\nTHREE.PointCloudMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.PointCloudMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.size = this.size;\r\n\tmaterial.sizeAttenuation = this.sizeAttenuation;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// backwards compatibility\r\n\r\nTHREE.ParticleBasicMaterial = function ( parameters ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\nTHREE.ParticleSystemMaterial = function ( parameters ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointCloudMaterial.' );\r\n\treturn new THREE.PointCloudMaterial( parameters );\r\n\r\n};\r\n\r\n// File:src/materials/ShaderMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  defines: { \"label\" : \"value\" },\r\n *  uniforms: { \"parameter1\": { type: \"f\", value: 1.0 }, \"parameter2\": { type: \"i\" value2: 2 } },\r\n *\r\n *  fragmentShader: <string>,\r\n *  vertexShader: <string>,\r\n *\r\n *  shading: THREE.SmoothShading,\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *  wireframe: <boolean>,\r\n *  wireframeLinewidth: <float>,\r\n *\r\n *  lights: <bool>,\r\n *\r\n *  vertexColors: THREE.NoColors / THREE.VertexColors / THREE.FaceColors,\r\n *\r\n *  skinning: <bool>,\r\n *  morphTargets: <bool>,\r\n *  morphNormals: <bool>,\r\n *\r\n *\tfog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.ShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'ShaderMaterial';\r\n\r\n\tthis.defines = {};\r\n\tthis.uniforms = {};\r\n\tthis.attributes = null;\r\n\r\n\tthis.vertexShader = 'void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}';\r\n\tthis.fragmentShader = 'void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}';\r\n\r\n\tthis.shading = THREE.SmoothShading;\r\n\r\n\tthis.linewidth = 1;\r\n\r\n\tthis.wireframe = false;\r\n\tthis.wireframeLinewidth = 1;\r\n\r\n\tthis.fog = false; // set to use scene fog\r\n\r\n\tthis.lights = false; // set to use scene lights\r\n\r\n\tthis.vertexColors = THREE.NoColors; // set to use \"color\" attribute stream\r\n\r\n\tthis.skinning = false; // set to use skinning attribute streams\r\n\r\n\tthis.morphTargets = false; // set to use morph targets\r\n\tthis.morphNormals = false; // set to use morph normals\r\n\r\n\t// When rendered geometry doesn't include these attributes but the material does,\r\n\t// use these default values in WebGL. This avoids errors when buffer data is missing.\r\n\tthis.defaultAttributeValues = {\r\n\t\t'color': [ 1, 1, 1 ],\r\n\t\t'uv': [ 0, 0 ],\r\n\t\t'uv2': [ 0, 0 ]\r\n\t};\r\n\r\n\tthis.index0AttributeName = undefined;\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.ShaderMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.ShaderMaterial.prototype.constructor = THREE.ShaderMaterial;\r\n\r\nTHREE.ShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.ShaderMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.fragmentShader = this.fragmentShader;\r\n\tmaterial.vertexShader = this.vertexShader;\r\n\r\n\tmaterial.uniforms = THREE.UniformsUtils.clone( this.uniforms );\r\n\r\n\tmaterial.attributes = this.attributes;\r\n\tmaterial.defines = this.defines;\r\n\r\n\tmaterial.shading = this.shading;\r\n\r\n\tmaterial.wireframe = this.wireframe;\r\n\tmaterial.wireframeLinewidth = this.wireframeLinewidth;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\tmaterial.lights = this.lights;\r\n\r\n\tmaterial.vertexColors = this.vertexColors;\r\n\r\n\tmaterial.skinning = this.skinning;\r\n\r\n\tmaterial.morphTargets = this.morphTargets;\r\n\tmaterial.morphNormals = this.morphNormals;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/RawShaderMaterial.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.RawShaderMaterial = function ( parameters ) {\r\n\r\n\tTHREE.ShaderMaterial.call( this, parameters );\r\n\r\n\tthis.type = 'RawShaderMaterial';\r\n\r\n};\r\n\r\nTHREE.RawShaderMaterial.prototype = Object.create( THREE.ShaderMaterial.prototype );\r\nTHREE.RawShaderMaterial.prototype.constructor = THREE.RawShaderMaterial;\r\n\r\nTHREE.RawShaderMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.RawShaderMaterial();\r\n\r\n\tTHREE.ShaderMaterial.prototype.clone.call( this, material );\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/materials/SpriteMaterial.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * parameters = {\r\n *  color: <hex>,\r\n *  opacity: <float>,\r\n *  map: new THREE.Texture( <Image> ),\r\n *\r\n *  blending: THREE.NormalBlending,\r\n *  depthTest: <bool>,\r\n *  depthWrite: <bool>,\r\n *\r\n *\tuvOffset: new THREE.Vector2(),\r\n *\tuvScale: new THREE.Vector2(),\r\n *\r\n *  fog: <bool>\r\n * }\r\n */\r\n\r\nTHREE.SpriteMaterial = function ( parameters ) {\r\n\r\n\tTHREE.Material.call( this );\r\n\r\n\tthis.type = 'SpriteMaterial';\r\n\r\n\tthis.color = new THREE.Color( 0xffffff );\r\n\tthis.map = null;\r\n\r\n\tthis.rotation = 0;\r\n\r\n\tthis.fog = false;\r\n\r\n\t// set parameters\r\n\r\n\tthis.setValues( parameters );\r\n\r\n};\r\n\r\nTHREE.SpriteMaterial.prototype = Object.create( THREE.Material.prototype );\r\nTHREE.SpriteMaterial.prototype.constructor = THREE.SpriteMaterial;\r\n\r\nTHREE.SpriteMaterial.prototype.clone = function () {\r\n\r\n\tvar material = new THREE.SpriteMaterial();\r\n\r\n\tTHREE.Material.prototype.clone.call( this, material );\r\n\r\n\tmaterial.color.copy( this.color );\r\n\tmaterial.map = this.map;\r\n\r\n\tmaterial.rotation = this.rotation;\r\n\r\n\tmaterial.fog = this.fog;\r\n\r\n\treturn material;\r\n\r\n};\r\n\r\n// File:src/textures/Texture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.Texture = function ( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tObject.defineProperty( this, 'id', { value: THREE.TextureIdCount ++ } );\r\n\r\n\tthis.uuid = THREE.Math.generateUUID();\r\n\r\n\tthis.name = '';\r\n\tthis.sourceFile = '';\r\n\r\n\tthis.image = image !== undefined ? image : THREE.Texture.DEFAULT_IMAGE;\r\n\tthis.mipmaps = [];\r\n\r\n\tthis.mapping = mapping !== undefined ? mapping : THREE.Texture.DEFAULT_MAPPING;\r\n\r\n\tthis.wrapS = wrapS !== undefined ? wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = wrapT !== undefined ? wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = magFilter !== undefined ? magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = minFilter !== undefined ? minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\r\n\r\n\tthis.format = format !== undefined ? format : THREE.RGBAFormat;\r\n\tthis.type = type !== undefined ? type : THREE.UnsignedByteType;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.generateMipmaps = true;\r\n\tthis.premultiplyAlpha = false;\r\n\tthis.flipY = true;\r\n\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\r\n\r\n\tthis._needsUpdate = false;\r\n\tthis.onUpdate = null;\r\n\r\n};\r\n\r\nTHREE.Texture.DEFAULT_IMAGE = undefined;\r\nTHREE.Texture.DEFAULT_MAPPING = THREE.UVMapping;\r\n\r\nTHREE.Texture.prototype = {\r\n\r\n\tconstructor: THREE.Texture,\r\n\r\n\tget needsUpdate () {\r\n\r\n\t\treturn this._needsUpdate;\r\n\r\n\t},\r\n\r\n\tset needsUpdate ( value ) {\r\n\r\n\t\tif ( value === true ) this.update();\r\n\r\n\t\tthis._needsUpdate = value;\r\n\r\n\t},\r\n\r\n\tclone: function ( texture ) {\r\n\r\n\t\tif ( texture === undefined ) texture = new THREE.Texture();\r\n\r\n\t\ttexture.image = this.image;\r\n\t\ttexture.mipmaps = this.mipmaps.slice( 0 );\r\n\r\n\t\ttexture.mapping = this.mapping;\r\n\r\n\t\ttexture.wrapS = this.wrapS;\r\n\t\ttexture.wrapT = this.wrapT;\r\n\r\n\t\ttexture.magFilter = this.magFilter;\r\n\t\ttexture.minFilter = this.minFilter;\r\n\r\n\t\ttexture.anisotropy = this.anisotropy;\r\n\r\n\t\ttexture.format = this.format;\r\n\t\ttexture.type = this.type;\r\n\r\n\t\ttexture.offset.copy( this.offset );\r\n\t\ttexture.repeat.copy( this.repeat );\r\n\r\n\t\ttexture.generateMipmaps = this.generateMipmaps;\r\n\t\ttexture.premultiplyAlpha = this.premultiplyAlpha;\r\n\t\ttexture.flipY = this.flipY;\r\n\t\ttexture.unpackAlignment = this.unpackAlignment;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tupdate: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'update' } );\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.Texture.prototype );\r\n\r\nTHREE.TextureIdCount = 0;\r\n\r\n// File:src/textures/CubeTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CubeTexture = function ( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tmapping = mapping !== undefined ? mapping : THREE.CubeReflectionMapping;\r\n\t\r\n\tTHREE.Texture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.images = images;\r\n\r\n};\r\n\r\nTHREE.CubeTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CubeTexture.prototype.constructor = THREE.CubeTexture;\r\n\r\nTHREE.CubeTexture.clone = function ( texture ) {\r\n\r\n\tif ( texture === undefined ) texture = new THREE.CubeTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\ttexture.images = this.images;\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/CompressedTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.CompressedTexture = function ( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { width: width, height: height };\r\n\tthis.mipmaps = mipmaps;\r\n\r\n\t// no flipping for cube textures\r\n\t// (also flipping doesn't work for compressed textures )\r\n\r\n\tthis.flipY = false;\r\n\r\n\t// can't generate mipmaps for compressed textures\r\n\t// mips must be embedded in DDS files\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n};\r\n\r\nTHREE.CompressedTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.CompressedTexture.prototype.constructor = THREE.CompressedTexture;\r\n\r\nTHREE.CompressedTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.CompressedTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/DataTexture.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.DataTexture = function ( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.image = { data: data, width: width, height: height };\r\n\r\n};\r\n\r\nTHREE.DataTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.DataTexture.prototype.constructor = THREE.DataTexture;\r\n\r\nTHREE.DataTexture.prototype.clone = function () {\r\n\r\n\tvar texture = new THREE.DataTexture();\r\n\r\n\tTHREE.Texture.prototype.clone.call( this, texture );\r\n\r\n\treturn texture;\r\n\r\n};\r\n\r\n// File:src/textures/VideoTexture.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.VideoTexture = function ( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\r\n\r\n\tTHREE.Texture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\r\n\r\n\tthis.generateMipmaps = false;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar update = function () {\r\n\r\n\t\trequestAnimationFrame( update );\r\n\r\n\t\tif ( video.readyState === video.HAVE_ENOUGH_DATA ) {\r\n\r\n\t\t\tscope.needsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tupdate();\r\n\r\n};\r\n\r\nTHREE.VideoTexture.prototype = Object.create( THREE.Texture.prototype );\r\nTHREE.VideoTexture.prototype.constructor = THREE.VideoTexture;\r\n\r\n// File:src/objects/Group.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Group = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Group';\r\n\r\n};\r\n\r\nTHREE.Group.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Group.prototype.constructor = THREE.Group;\r\n\r\n// File:src/objects/PointCloud.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.PointCloud = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'PointCloud';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.PointCloudMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n};\r\n\r\nTHREE.PointCloud.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.PointCloud.prototype.constructor = THREE.PointCloud;\r\n\r\nTHREE.PointCloud.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar object = this;\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar threshold = raycaster.params.PointCloud.threshold;\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\r\n\t\tvar position = new THREE.Vector3();\r\n\r\n\t\tvar testPoint = function ( point, index ) {\r\n\r\n\t\t\tvar rayPointDistance = ray.distanceToPoint( point );\r\n\r\n\t\t\tif ( rayPointDistance < localThreshold ) {\r\n\r\n\t\t\t\tvar intersectPoint = ray.closestPointToPoint( point );\r\n\t\t\t\tintersectPoint.applyMatrix4( object.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tdistanceToRay: rayPointDistance,\r\n\t\t\t\t\tpoint: intersectPoint.clone(),\r\n\t\t\t\t\tindex: index,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tobject: object\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t};\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tvar offset = {\r\n\t\t\t\t\t\tstart: 0,\r\n\t\t\t\t\t\tcount: indices.length,\r\n\t\t\t\t\t\tindex: 0\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\toffsets = [ offset ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++ oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\r\n\t\t\t\t\t\tposition.fromArray( positions, a * 3 );\r\n\r\n\t\t\t\t\t\ttestPoint( position, a );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar pointCount = positions.length / 3;\r\n\r\n\t\t\t\tfor ( var i = 0; i < pointCount; i ++ ) {\r\n\r\n\t\t\t\t\tposition.set(\r\n\t\t\t\t\t\tpositions[ 3 * i ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 1 ],\r\n\t\t\t\t\t\tpositions[ 3 * i + 2 ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t\ttestPoint( position, i );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\t\tfor ( var i = 0; i < vertices.length; i ++ ) {\r\n\r\n\t\t\t\ttestPoint( vertices[ i ], i );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.PointCloud.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.PointCloud( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.ParticleSystem = function ( geometry, material ) {\r\n\r\n\tTHREE.warn( 'THREE.ParticleSystem has been renamed to THREE.PointCloud.' );\r\n\treturn new THREE.PointCloud( geometry, material );\r\n\r\n};\r\n\r\n// File:src/objects/Line.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Line = function ( geometry, material, mode ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Line';\r\n\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.LineBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.mode = mode !== undefined ? mode : THREE.LineStrip;\r\n\r\n};\r\n\r\nTHREE.LineStrip = 0;\r\nTHREE.LinePieces = 1;\r\n\r\nTHREE.Line.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Line.prototype.constructor = THREE.Line;\r\n\r\nTHREE.Line.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar precision = raycaster.linePrecision;\r\n\t\tvar precisionSq = precision * precision;\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tvar vStart = new THREE.Vector3();\r\n\t\tvar vEnd = new THREE.Vector3();\r\n\t\tvar interSegment = new THREE.Vector3();\r\n\t\tvar interRay = new THREE.Vector3();\r\n\t\tvar step = this.mode === THREE.LineStrip ? 1 : 2;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0; oi < offsets.length; oi ++) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start; i < start + count - 1; i += step ) {\r\n\r\n\t\t\t\t\t\tvar a = index + indices[ i ];\r\n\t\t\t\t\t\tvar b = index + indices[ i + 1 ];\r\n\r\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\r\n\r\n\t\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\t\toffsetIndex: oi,\r\n\t\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0; i < positions.length / 3 - 1; i += step ) {\r\n\r\n\t\t\t\t\tvStart.fromArray( positions, 3 * i );\r\n\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\r\n\r\n\t\t\t\t\tvar distSq = ray.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\r\n\r\n\t\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\t\tindex: i,\r\n\t\t\t\t\t\tface: null,\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\t\t\tvar nbVertices = vertices.length;\r\n\r\n\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\r\n\r\n\t\t\t\tvar distSq = ray.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\r\n\r\n\t\t\t\tif ( distSq > precisionSq ) continue;\r\n\r\n\t\t\t\tvar distance = ray.origin.distanceTo( interRay );\r\n\r\n\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\r\n\t\t\t\t\t// point: raycaster.ray.at( distance ),\r\n\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\r\n\t\t\t\t\tindex: i,\r\n\t\t\t\t\tface: null,\r\n\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Line.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Line( this.geometry, this.material, this.mode );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Mesh.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author jonobr1 / http://jonobr1.com/\r\n */\r\n\r\nTHREE.Mesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Mesh';\r\n\t\r\n\tthis.geometry = geometry !== undefined ? geometry : new THREE.Geometry();\r\n\tthis.material = material !== undefined ? material : new THREE.MeshBasicMaterial( { color: Math.random() * 0xffffff } );\r\n\r\n\tthis.updateMorphTargets();\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Mesh.prototype.constructor = THREE.Mesh;\r\n\r\nTHREE.Mesh.prototype.updateMorphTargets = function () {\r\n\r\n\tif ( this.geometry.morphTargets !== undefined && this.geometry.morphTargets.length > 0 ) {\r\n\r\n\t\tthis.morphTargetBase = - 1;\r\n\t\tthis.morphTargetForcedOrder = [];\r\n\t\tthis.morphTargetInfluences = [];\r\n\t\tthis.morphTargetDictionary = {};\r\n\r\n\t\tfor ( var m = 0, ml = this.geometry.morphTargets.length; m < ml; m ++ ) {\r\n\r\n\t\t\tthis.morphTargetInfluences.push( 0 );\r\n\t\t\tthis.morphTargetDictionary[ this.geometry.morphTargets[ m ].name ] = m;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Mesh.prototype.getMorphTargetIndexByName = function ( name ) {\r\n\r\n\tif ( this.morphTargetDictionary[ name ] !== undefined ) {\r\n\r\n\t\treturn this.morphTargetDictionary[ name ];\r\n\r\n\t}\r\n\r\n\tTHREE.warn( 'THREE.Mesh.getMorphTargetIndexByName: morph target ' + name + ' does not exist. Returning 0.' );\r\n\r\n\treturn 0;\r\n\r\n};\r\n\r\n\r\nTHREE.Mesh.prototype.raycast = ( function () {\r\n\r\n\tvar inverseMatrix = new THREE.Matrix4();\r\n\tvar ray = new THREE.Ray();\r\n\tvar sphere = new THREE.Sphere();\r\n\r\n\tvar vA = new THREE.Vector3();\r\n\tvar vB = new THREE.Vector3();\r\n\tvar vC = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tvar geometry = this.geometry;\r\n\r\n\t\t// Checking boundingSphere distance to ray\r\n\r\n\t\tif ( geometry.boundingSphere === null ) geometry.computeBoundingSphere();\r\n\r\n\t\tsphere.copy( geometry.boundingSphere );\r\n\t\tsphere.applyMatrix4( this.matrixWorld );\r\n\r\n\t\tif ( raycaster.ray.isIntersectionSphere( sphere ) === false ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\t// Check boundingBox before continuing\r\n\r\n\t\tinverseMatrix.getInverse( this.matrixWorld );\r\n\t\tray.copy( raycaster.ray ).applyMatrix4( inverseMatrix );\r\n\r\n\t\tif ( geometry.boundingBox !== null ) {\r\n\r\n\t\t\tif ( ray.isIntersectionBox( geometry.boundingBox ) === false ) {\r\n\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar material = this.material;\r\n\r\n\t\t\tif ( material === undefined ) return;\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tif ( attributes.index !== undefined ) {\r\n\r\n\t\t\t\tvar indices = attributes.index.array;\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\toffsets = [ { start: 0, count: indices.length, index: 0 } ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tfor ( var oi = 0, ol = offsets.length; oi < ol; ++ oi ) {\r\n\r\n\t\t\t\t\tvar start = offsets[ oi ].start;\r\n\t\t\t\t\tvar count = offsets[ oi ].count;\r\n\t\t\t\t\tvar index = offsets[ oi ].index;\r\n\r\n\t\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\t\ta = index + indices[ i ];\r\n\t\t\t\t\t\tb = index + indices[ i + 1 ];\r\n\t\t\t\t\t\tc = index + indices[ i + 2 ];\r\n\r\n\t\t\t\t\t\tvA.fromArray( positions, a * 3 );\r\n\t\t\t\t\t\tvB.fromArray( positions, b * 3 );\r\n\t\t\t\t\t\tvC.fromArray( positions, c * 3 );\r\n\r\n\t\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t\t} );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar positions = attributes.position.array;\r\n\r\n\t\t\t\tfor ( var i = 0, j = 0, il = positions.length; i < il; i += 3, j += 9 ) {\r\n\r\n\t\t\t\t\ta = i;\r\n\t\t\t\t\tb = i + 1;\r\n\t\t\t\t\tc = i + 2;\r\n\r\n\t\t\t\t\tvA.fromArray( positions, j );\r\n\t\t\t\t\tvB.fromArray( positions, j + 3 );\r\n\t\t\t\t\tvC.fromArray( positions, j + 6 );\r\n\r\n\t\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vC, vB, vA, true );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( vA, vB, vC, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\t\tface: new THREE.Face3( a, b, c, THREE.Triangle.normal( vA, vB, vC ) ),\r\n\t\t\t\t\t\tfaceIndex: null,\r\n\t\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t\t} );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\tvar isFaceMaterial = this.material instanceof THREE.MeshFaceMaterial;\r\n\t\t\tvar objectMaterials = isFaceMaterial === true ? this.material.materials : null;\r\n\r\n\t\t\tvar a, b, c;\r\n\t\t\tvar precision = raycaster.precision;\r\n\r\n\t\t\tvar vertices = geometry.vertices;\r\n\r\n\t\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tvar face = geometry.faces[ f ];\r\n\r\n\t\t\t\tvar material = isFaceMaterial === true ? objectMaterials[ face.materialIndex ] : this.material;\r\n\r\n\t\t\t\tif ( material === undefined ) continue;\r\n\r\n\t\t\t\ta = vertices[ face.a ];\r\n\t\t\t\tb = vertices[ face.b ];\r\n\t\t\t\tc = vertices[ face.c ];\r\n\r\n\t\t\t\tif ( material.morphTargets === true ) {\r\n\r\n\t\t\t\t\tvar morphTargets = geometry.morphTargets;\r\n\t\t\t\t\tvar morphInfluences = this.morphTargetInfluences;\r\n\r\n\t\t\t\t\tvA.set( 0, 0, 0 );\r\n\t\t\t\t\tvB.set( 0, 0, 0 );\r\n\t\t\t\t\tvC.set( 0, 0, 0 );\r\n\r\n\t\t\t\t\tfor ( var t = 0, tl = morphTargets.length; t < tl; t ++ ) {\r\n\r\n\t\t\t\t\t\tvar influence = morphInfluences[ t ];\r\n\r\n\t\t\t\t\t\tif ( influence === 0 ) continue;\r\n\r\n\t\t\t\t\t\tvar targets = morphTargets[ t ].vertices;\r\n\r\n\t\t\t\t\t\tvA.x += ( targets[ face.a ].x - a.x ) * influence;\r\n\t\t\t\t\t\tvA.y += ( targets[ face.a ].y - a.y ) * influence;\r\n\t\t\t\t\t\tvA.z += ( targets[ face.a ].z - a.z ) * influence;\r\n\r\n\t\t\t\t\t\tvB.x += ( targets[ face.b ].x - b.x ) * influence;\r\n\t\t\t\t\t\tvB.y += ( targets[ face.b ].y - b.y ) * influence;\r\n\t\t\t\t\t\tvB.z += ( targets[ face.b ].z - b.z ) * influence;\r\n\r\n\t\t\t\t\t\tvC.x += ( targets[ face.c ].x - c.x ) * influence;\r\n\t\t\t\t\t\tvC.y += ( targets[ face.c ].y - c.y ) * influence;\r\n\t\t\t\t\t\tvC.z += ( targets[ face.c ].z - c.z ) * influence;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvA.add( a );\r\n\t\t\t\t\tvB.add( b );\r\n\t\t\t\t\tvC.add( c );\r\n\r\n\t\t\t\t\ta = vA;\r\n\t\t\t\t\tb = vB;\r\n\t\t\t\t\tc = vC;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( material.side === THREE.BackSide ) {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( c, b, a, true );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tvar intersectionPoint = ray.intersectTriangle( a, b, c, material.side !== THREE.DoubleSide );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( intersectionPoint === null ) continue;\r\n\r\n\t\t\t\tintersectionPoint.applyMatrix4( this.matrixWorld );\r\n\r\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectionPoint );\r\n\r\n\t\t\t\tif ( distance < precision || distance < raycaster.near || distance > raycaster.far ) continue;\r\n\r\n\t\t\t\tintersects.push( {\r\n\r\n\t\t\t\t\tdistance: distance,\r\n\t\t\t\t\tpoint: intersectionPoint,\r\n\t\t\t\t\tface: face,\r\n\t\t\t\t\tfaceIndex: f,\r\n\t\t\t\t\tobject: this\r\n\r\n\t\t\t\t} );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Mesh.prototype.clone = function ( object, recursive ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Mesh( this.geometry, this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object, recursive );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Bone.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Bone = function ( skin ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Bone';\r\n\r\n\tthis.skin = skin;\r\n\r\n};\r\n\r\nTHREE.Bone.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Bone.prototype.constructor = THREE.Bone;\r\n\r\n// File:src/objects/Skeleton.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author michael guerrero / http://realitymeltdown.com\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.Skeleton = function ( bones, boneInverses, useVertexTexture ) {\r\n\r\n\tthis.useVertexTexture = useVertexTexture !== undefined ? useVertexTexture : true;\r\n\r\n\tthis.identityMatrix = new THREE.Matrix4();\r\n\r\n\t// copy the bone array\r\n\r\n\tbones = bones || [];\r\n\r\n\tthis.bones = bones.slice( 0 );\r\n\r\n\t// create a bone texture or an array of floats\r\n\r\n\tif ( this.useVertexTexture ) {\r\n\r\n\t\t// layout (1 matrix = 4 pixels)\r\n\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n\t\t//  with  8x8  pixel texture max   16 bones  (8 * 8  / 4)\r\n\t\t//       16x16 pixel texture max   64 bones (16 * 16 / 4)\r\n\t\t//       32x32 pixel texture max  256 bones (32 * 32 / 4)\r\n\t\t//       64x64 pixel texture max 1024 bones (64 * 64 / 4)\r\n\r\n\t\tvar size;\r\n\r\n\t\tif ( this.bones.length > 256 )\r\n\t\t\tsize = 64;\r\n\t\telse if ( this.bones.length > 64 )\r\n\t\t\tsize = 32;\r\n\t\telse if ( this.bones.length > 16 )\r\n\t\t\tsize = 16;\r\n\t\telse\r\n\t\t\tsize = 8;\r\n\r\n\t\tthis.boneTextureWidth = size;\r\n\t\tthis.boneTextureHeight = size;\r\n\r\n\t\tthis.boneMatrices = new Float32Array( this.boneTextureWidth * this.boneTextureHeight * 4 ); // 4 floats per RGBA pixel\r\n\t\tthis.boneTexture = new THREE.DataTexture( this.boneMatrices, this.boneTextureWidth, this.boneTextureHeight, THREE.RGBAFormat, THREE.FloatType );\r\n\t\tthis.boneTexture.minFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.magFilter = THREE.NearestFilter;\r\n\t\tthis.boneTexture.generateMipmaps = false;\r\n\t\tthis.boneTexture.flipY = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.boneMatrices = new Float32Array( 16 * this.bones.length );\r\n\r\n\t}\r\n\r\n\t// use the supplied bone inverses or calculate the inverses\r\n\r\n\tif ( boneInverses === undefined ) {\r\n\r\n\t\tthis.calculateInverses();\r\n\r\n\t} else {\r\n\r\n\t\tif ( this.bones.length === boneInverses.length ) {\r\n\r\n\t\t\tthis.boneInverses = boneInverses.slice( 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tTHREE.warn( 'THREE.Skeleton bonInverses is the wrong length.' );\r\n\r\n\t\t\tthis.boneInverses = [];\r\n\r\n\t\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t\tthis.boneInverses.push( new THREE.Matrix4() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.calculateInverses = function () {\r\n\r\n\tthis.boneInverses = [];\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tvar inverse = new THREE.Matrix4();\r\n\r\n\t\tif ( this.bones[ b ] ) {\r\n\r\n\t\t\tinverse.getInverse( this.bones[ b ].matrixWorld );\r\n\r\n\t\t}\r\n\r\n\t\tthis.boneInverses.push( inverse );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.pose = function () {\r\n\r\n\tvar bone;\r\n\r\n\t// recover the bind-time world matrices\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ b ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// compute the local matrices, positions, rotations and scales\r\n\r\n\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\tbone = this.bones[ b ];\r\n\r\n\t\tif ( bone ) {\r\n\r\n\t\t\tif ( bone.parent ) {\r\n\r\n\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\r\n\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.matrix.copy( bone.matrixWorld );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Skeleton.prototype.update = ( function () {\r\n\r\n\tvar offsetMatrix = new THREE.Matrix4();\r\n\t\r\n\treturn function () {\r\n\r\n\t\t// flatten bone matrices to array\r\n\r\n\t\tfor ( var b = 0, bl = this.bones.length; b < bl; b ++ ) {\r\n\r\n\t\t\t// compute the offset between the current and the original transform\r\n\r\n\t\t\tvar matrix = this.bones[ b ] ? this.bones[ b ].matrixWorld : this.identityMatrix;\r\n\r\n\t\t\toffsetMatrix.multiplyMatrices( matrix, this.boneInverses[ b ] );\r\n\t\t\toffsetMatrix.flattenToArrayOffset( this.boneMatrices, b * 16 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( this.useVertexTexture ) {\r\n\r\n\t\t\tthis.boneTexture.needsUpdate = true;\r\n\r\n\t\t}\r\n\t\t\r\n\t};\r\n\r\n} )();\r\n\r\n\r\n// File:src/objects/SkinnedMesh.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkinnedMesh = function ( geometry, material, useVertexTexture ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'SkinnedMesh';\r\n\r\n\tthis.bindMode = \"attached\";\r\n\tthis.bindMatrix = new THREE.Matrix4();\r\n\tthis.bindMatrixInverse = new THREE.Matrix4();\r\n\r\n\t// init bones\r\n\r\n\t// TODO: remove bone creation as there is no reason (other than\r\n\t// convenience) for THREE.SkinnedMesh to do this.\r\n\r\n\tvar bones = [];\r\n\r\n\tif ( this.geometry && this.geometry.bones !== undefined ) {\r\n\r\n\t\tvar bone, gbone, p, q, s;\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tp = gbone.pos;\r\n\t\t\tq = gbone.rotq;\r\n\t\t\ts = gbone.scl;\r\n\r\n\t\t\tbone = new THREE.Bone( this );\r\n\t\t\tbones.push( bone );\r\n\r\n\t\t\tbone.name = gbone.name;\r\n\t\t\tbone.position.set( p[ 0 ], p[ 1 ], p[ 2 ] );\r\n\t\t\tbone.quaternion.set( q[ 0 ], q[ 1 ], q[ 2 ], q[ 3 ] );\r\n\r\n\t\t\tif ( s !== undefined ) {\r\n\r\n\t\t\t\tbone.scale.set( s[ 0 ], s[ 1 ], s[ 2 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tbone.scale.set( 1, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var b = 0, bl = this.geometry.bones.length; b < bl; ++ b ) {\r\n\r\n\t\t\tgbone = this.geometry.bones[ b ];\r\n\r\n\t\t\tif ( gbone.parent !== - 1 ) {\r\n\r\n\t\t\t\tbones[ gbone.parent ].add( bones[ b ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.add( bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.normalizeSkinWeights();\r\n\r\n\tthis.updateMatrixWorld( true );\r\n\tthis.bind( new THREE.Skeleton( bones, undefined, useVertexTexture ) );\r\n\r\n};\r\n\r\n\r\nTHREE.SkinnedMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.SkinnedMesh.prototype.constructor = THREE.SkinnedMesh;\r\n\r\nTHREE.SkinnedMesh.prototype.bind = function( skeleton, bindMatrix ) {\r\n\r\n\tthis.skeleton = skeleton;\r\n\r\n\tif ( bindMatrix === undefined ) {\r\n\r\n\t\tthis.updateMatrixWorld( true );\r\n\r\n\t\tbindMatrix = this.matrixWorld;\r\n\r\n\t}\r\n\r\n\tthis.bindMatrix.copy( bindMatrix );\r\n\tthis.bindMatrixInverse.getInverse( bindMatrix );\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.pose = function () {\r\n\r\n\tthis.skeleton.pose();\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.normalizeSkinWeights = function () {\r\n\r\n\tif ( this.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tfor ( var i = 0; i < this.geometry.skinIndices.length; i ++ ) {\r\n\r\n\t\t\tvar sw = this.geometry.skinWeights[ i ];\r\n\r\n\t\t\tvar scale = 1.0 / sw.lengthManhattan();\r\n\r\n\t\t\tif ( scale !== Infinity ) {\r\n\r\n\t\t\t\tsw.multiplyScalar( scale );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tsw.set( 1 ); // this will be normalized by the shader anyway\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\t// skinning weights assumed to be normalized for THREE.BufferGeometry\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.updateMatrixWorld = function( force ) {\r\n\r\n\tTHREE.Mesh.prototype.updateMatrixWorld.call( this, true );\r\n\r\n\tif ( this.bindMode === \"attached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\r\n\r\n\t} else if ( this.bindMode === \"detached\" ) {\r\n\r\n\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( 'THREE.SkinnedMesh unreckognized bindMode: ' + this.bindMode );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.SkinnedMesh.prototype.clone = function( object ) {\r\n\r\n\tif ( object === undefined ) {\r\n\r\n\t\tobject = new THREE.SkinnedMesh( this.geometry, this.material, this.useVertexTexture );\r\n\r\n\t}\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n\r\n// File:src/objects/MorphAnimMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphAnimMesh = function ( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.type = 'MorphAnimMesh';\r\n\r\n\t// API\r\n\r\n\tthis.duration = 1000; // milliseconds\r\n\tthis.mirroredLoop = false;\r\n\tthis.time = 0;\r\n\r\n\t// internals\r\n\r\n\tthis.lastKeyframe = 0;\r\n\tthis.currentKeyframe = 0;\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n\tthis.setFrameRange( 0, this.geometry.morphTargets.length - 1 );\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphAnimMesh.prototype.constructor = THREE.MorphAnimMesh;\r\n\r\nTHREE.MorphAnimMesh.prototype.setFrameRange = function ( start, end ) {\r\n\r\n\tthis.startKeyframe = start;\r\n\tthis.endKeyframe = end;\r\n\r\n\tthis.length = this.endKeyframe - this.startKeyframe + 1;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionForward = function () {\r\n\r\n\tthis.direction = 1;\r\n\tthis.directionBackwards = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setDirectionBackward = function () {\r\n\r\n\tthis.direction = - 1;\r\n\tthis.directionBackwards = true;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.parseAnimations = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tif ( ! geometry.animations ) geometry.animations = {};\r\n\r\n\tvar firstAnimation, animations = geometry.animations;\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar parts = morph.name.match( pattern );\r\n\r\n\t\tif ( parts && parts.length > 1 ) {\r\n\r\n\t\t\tvar label = parts[ 1 ];\r\n\r\n\t\t\tif ( ! animations[ label ] ) animations[ label ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar animation = animations[ label ];\r\n\r\n\t\t\tif ( i < animation.start ) animation.start = i;\r\n\t\t\tif ( i > animation.end ) animation.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = label;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.setAnimationLabel = function ( label, start, end ) {\r\n\r\n\tif ( ! this.geometry.animations ) this.geometry.animations = {};\r\n\r\n\tthis.geometry.animations[ label ] = { start: start, end: end };\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.playAnimation = function ( label, fps ) {\r\n\r\n\tvar animation = this.geometry.animations[ label ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tthis.setFrameRange( animation.start, animation.end );\r\n\t\tthis.duration = 1000 * ( ( animation.end - animation.start ) / fps );\r\n\t\tthis.time = 0;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( 'THREE.MorphAnimMesh: animation[' + label + '] undefined in .playAnimation()' );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.updateAnimation = function ( delta ) {\r\n\r\n\tvar frameTime = this.duration / this.length;\r\n\r\n\tthis.time += this.direction * delta;\r\n\r\n\tif ( this.mirroredLoop ) {\r\n\r\n\t\tif ( this.time > this.duration || this.time < 0 ) {\r\n\r\n\t\t\tthis.direction *= - 1;\r\n\r\n\t\t\tif ( this.time > this.duration ) {\r\n\r\n\t\t\t\tthis.time = this.duration;\r\n\t\t\t\tthis.directionBackwards = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( this.time < 0 ) {\r\n\r\n\t\t\t\tthis.time = 0;\r\n\t\t\t\tthis.directionBackwards = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t} else {\r\n\r\n\t\tthis.time = this.time % this.duration;\r\n\r\n\t\tif ( this.time < 0 ) this.time += this.duration;\r\n\r\n\t}\r\n\r\n\tvar keyframe = this.startKeyframe + THREE.Math.clamp( Math.floor( this.time / frameTime ), 0, this.length - 1 );\r\n\r\n\tif ( keyframe !== this.currentKeyframe ) {\r\n\r\n\t\tthis.morphTargetInfluences[ this.lastKeyframe ] = 0;\r\n\t\tthis.morphTargetInfluences[ this.currentKeyframe ] = 1;\r\n\r\n\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\tthis.lastKeyframe = this.currentKeyframe;\r\n\t\tthis.currentKeyframe = keyframe;\r\n\r\n\t}\r\n\r\n\tvar mix = ( this.time % frameTime ) / frameTime;\r\n\r\n\tif ( this.directionBackwards ) {\r\n\r\n\t\tmix = 1 - mix;\r\n\r\n\t}\r\n\r\n\tthis.morphTargetInfluences[ this.currentKeyframe ] = mix;\r\n\tthis.morphTargetInfluences[ this.lastKeyframe ] = 1 - mix;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.interpolateTargets = function ( a, b, t ) {\r\n\r\n\tvar influences = this.morphTargetInfluences;\r\n\r\n\tfor ( var i = 0, l = influences.length; i < l; i ++ ) {\r\n\r\n\t\tinfluences[ i ] = 0;\r\n\r\n\t}\r\n\r\n\tif ( a > -1 ) influences[ a ] = 1 - t;\r\n\tif ( b > -1 ) influences[ b ] = t;\r\n\r\n};\r\n\r\nTHREE.MorphAnimMesh.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.MorphAnimMesh( this.geometry, this.material );\r\n\r\n\tobject.duration = this.duration;\r\n\tobject.mirroredLoop = this.mirroredLoop;\r\n\tobject.time = this.time;\r\n\r\n\tobject.lastKeyframe = this.lastKeyframe;\r\n\tobject.currentKeyframe = this.currentKeyframe;\r\n\r\n\tobject.direction = this.direction;\r\n\tobject.directionBackwards = this.directionBackwards;\r\n\r\n\tTHREE.Mesh.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/LOD.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.LOD = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.objects = [];\r\n\r\n};\r\n\r\n\r\nTHREE.LOD.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LOD.prototype.constructor = THREE.LOD;\r\n\r\nTHREE.LOD.prototype.addLevel = function ( object, distance ) {\r\n\r\n\tif ( distance === undefined ) distance = 0;\r\n\r\n\tdistance = Math.abs( distance );\r\n\r\n\tfor ( var l = 0; l < this.objects.length; l ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ l ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.objects.splice( l, 0, { distance: distance, object: object } );\r\n\tthis.add( object );\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.getObjectForDistance = function ( distance ) {\r\n\r\n\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\tif ( distance < this.objects[ i ].distance ) {\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\treturn this.objects[ i - 1 ].object;\r\n\r\n};\r\n\r\nTHREE.LOD.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.origin.distanceTo( matrixPosition );\r\n\r\n\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.LOD.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\r\n\treturn function ( camera ) {\r\n\r\n\t\tif ( this.objects.length > 1 ) {\r\n\r\n\t\t\tv1.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\tv2.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\t\tvar distance = v1.distanceTo( v2 );\r\n\r\n\t\t\tthis.objects[ 0 ].object.visible = true;\r\n\r\n\t\t\tfor ( var i = 1, l = this.objects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tif ( distance >= this.objects[ i ].distance ) {\r\n\r\n\t\t\t\t\tthis.objects[ i - 1 ].object.visible = false;\r\n\t\t\t\t\tthis.objects[ i     ].object.visible = true;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( ; i < l; i ++ ) {\r\n\r\n\t\t\t\tthis.objects[ i ].object.visible = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}();\r\n\r\nTHREE.LOD.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.LOD();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tfor ( var i = 0, l = this.objects.length; i < l; i ++ ) {\r\n\t\tvar x = this.objects[ i ].object.clone();\r\n\t\tx.visible = i === 0;\r\n\t\tobject.addLevel( x, this.objects[ i ].distance );\r\n\t}\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/objects/Sprite.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Sprite = ( function () {\r\n\r\n\tvar indices = new Uint16Array( [ 0, 1, 2,  0, 2, 3 ] );\r\n\tvar vertices = new Float32Array( [ - 0.5, - 0.5, 0,   0.5, - 0.5, 0,   0.5, 0.5, 0,   - 0.5, 0.5, 0 ] );\r\n\tvar uvs = new Float32Array( [ 0, 0,   1, 0,   1, 1,   0, 1 ] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n\treturn function ( material ) {\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tthis.type = 'Sprite';\r\n\r\n\t\tthis.geometry = geometry;\r\n\t\tthis.material = ( material !== undefined ) ? material : new THREE.SpriteMaterial();\r\n\r\n\t};\r\n\r\n} )();\r\n\r\nTHREE.Sprite.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Sprite.prototype.constructor = THREE.Sprite;\r\n\r\nTHREE.Sprite.prototype.raycast = ( function () {\r\n\r\n\tvar matrixPosition = new THREE.Vector3();\r\n\r\n\treturn function ( raycaster, intersects ) {\r\n\r\n\t\tmatrixPosition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tvar distance = raycaster.ray.distanceToPoint( matrixPosition );\r\n\r\n\t\tif ( distance > this.scale.x ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tintersects.push( {\r\n\r\n\t\t\tdistance: distance,\r\n\t\t\tpoint: this.position,\r\n\t\t\tface: null,\r\n\t\t\tobject: this\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.Sprite.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Sprite( this.material );\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// Backwards compatibility\r\n\r\nTHREE.Particle = THREE.Sprite;\r\n\r\n// File:src/objects/LensFlare.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlare = function ( texture, size, distance, blending, color ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.lensFlares = [];\r\n\r\n\tthis.positionScreen = new THREE.Vector3();\r\n\tthis.customUpdateCallback = undefined;\r\n\r\n\tif ( texture !== undefined ) {\r\n\r\n\t\tthis.add( texture, size, distance, blending, color );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.LensFlare.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.LensFlare.prototype.constructor = THREE.LensFlare;\r\n\r\n\r\n/*\r\n * Add: adds another flare\r\n */\r\n\r\nTHREE.LensFlare.prototype.add = function ( texture, size, distance, blending, color, opacity ) {\r\n\r\n\tif ( size === undefined ) size = - 1;\r\n\tif ( distance === undefined ) distance = 0;\r\n\tif ( opacity === undefined ) opacity = 1;\r\n\tif ( color === undefined ) color = new THREE.Color( 0xffffff );\r\n\tif ( blending === undefined ) blending = THREE.NormalBlending;\r\n\r\n\tdistance = Math.min( distance, Math.max( 0, distance ) );\r\n\r\n\tthis.lensFlares.push( {\r\n\t\ttexture: texture, \t\t\t// THREE.Texture\r\n\t\tsize: size, \t\t\t\t// size in pixels (-1 = use texture.width)\r\n\t\tdistance: distance, \t\t// distance (0-1) from light source (0=at light source)\r\n\t\tx: 0, y: 0, z: 0,\t\t\t// screen position (-1 => 1) z = 0 is ontop z = 1 is back\r\n\t\tscale: 1, \t\t\t\t\t// scale\r\n\t\trotation: 1, \t\t\t\t// rotation\r\n\t\topacity: opacity,\t\t\t// opacity\r\n\t\tcolor: color,\t\t\t\t// color\r\n\t\tblending: blending\t\t\t// blending\r\n\t} );\r\n\r\n};\r\n\r\n/*\r\n * Update lens flares update positions on all flares based on the screen position\r\n * Set myLensFlare.customUpdateCallback to alter the flares in your project specific way.\r\n */\r\n\r\nTHREE.LensFlare.prototype.updateLensFlares = function () {\r\n\r\n\tvar f, fl = this.lensFlares.length;\r\n\tvar flare;\r\n\tvar vecX = - this.positionScreen.x * 2;\r\n\tvar vecY = - this.positionScreen.y * 2;\r\n\r\n\tfor ( f = 0; f < fl; f ++ ) {\r\n\r\n\t\tflare = this.lensFlares[ f ];\r\n\r\n\t\tflare.x = this.positionScreen.x + vecX * flare.distance;\r\n\t\tflare.y = this.positionScreen.y + vecY * flare.distance;\r\n\r\n\t\tflare.wantedRotation = flare.x * Math.PI * 0.25;\r\n\t\tflare.rotation += ( flare.wantedRotation - flare.rotation ) * 0.25;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/scenes/Scene.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Scene = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Scene';\r\n\r\n\tthis.fog = null;\r\n\tthis.overrideMaterial = null;\r\n\r\n\tthis.autoUpdate = true; // checked by the renderer\r\n\r\n};\r\n\r\nTHREE.Scene.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Scene.prototype.constructor = THREE.Scene;\r\n\r\nTHREE.Scene.prototype.clone = function ( object ) {\r\n\r\n\tif ( object === undefined ) object = new THREE.Scene();\r\n\r\n\tTHREE.Object3D.prototype.clone.call( this, object );\r\n\r\n\tif ( this.fog !== null ) object.fog = this.fog.clone();\r\n\tif ( this.overrideMaterial !== null ) object.overrideMaterial = this.overrideMaterial.clone();\r\n\r\n\tobject.autoUpdate = this.autoUpdate;\r\n\tobject.matrixAutoUpdate = this.matrixAutoUpdate;\r\n\r\n\treturn object;\r\n\r\n};\r\n\r\n// File:src/scenes/Fog.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Fog = function ( color, near, far ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\r\n\tthis.near = ( near !== undefined ) ? near : 1;\r\n\tthis.far = ( far !== undefined ) ? far : 1000;\r\n\r\n};\r\n\r\nTHREE.Fog.prototype.clone = function () {\r\n\r\n\treturn new THREE.Fog( this.color.getHex(), this.near, this.far );\r\n\r\n};\r\n\r\n// File:src/scenes/FogExp2.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.FogExp2 = function ( color, density ) {\r\n\r\n\tthis.name = '';\r\n\r\n\tthis.color = new THREE.Color( color );\r\n\tthis.density = ( density !== undefined ) ? density : 0.00025;\r\n\r\n};\r\n\r\nTHREE.FogExp2.prototype.clone = function () {\r\n\r\n\treturn new THREE.FogExp2( this.color.getHex(), this.density );\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderChunk.js\r\n\r\nTHREE.ShaderChunk = {};\r\n\r\n// File:src/renderers/shaders/ShaderChunk/common.glsl\r\n\r\nTHREE.ShaderChunk[ 'common'] = \"#define PI 3.14159\\n#define PI2 6.28318\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n\\nfloat square( in float a ) { return a*a; }\\nvec2  square( in vec2 a )  { return vec2( a.x*a.x, a.y*a.y ); }\\nvec3  square( in vec3 a )  { return vec3( a.x*a.x, a.y*a.y, a.z*a.z ); }\\nvec4  square( in vec4 a )  { return vec4( a.x*a.x, a.y*a.y, a.z*a.z, a.w*a.w ); }\\nfloat saturate( in float a ) { return clamp( a, 0.0, 1.0 ); }\\nvec2  saturate( in vec2 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec3  saturate( in vec3 a )  { return clamp( a, 0.0, 1.0 ); }\\nvec4  saturate( in vec4 a )  { return clamp( a, 0.0, 1.0 ); }\\nfloat average( in float a ) { return a; }\\nfloat average( in vec2 a )  { return ( a.x + a.y) * 0.5; }\\nfloat average( in vec3 a )  { return ( a.x + a.y + a.z) / 3.0; }\\nfloat average( in vec4 a )  { return ( a.x + a.y + a.z + a.w) * 0.25; }\\nfloat whiteCompliment( in float a ) { return saturate( 1.0 - a ); }\\nvec2  whiteCompliment( in vec2 a )  { return saturate( vec2(1.0) - a ); }\\nvec3  whiteCompliment( in vec3 a )  { return saturate( vec3(1.0) - a ); }\\nvec4  whiteCompliment( in vec4 a )  { return saturate( vec4(1.0) - a ); }\\nvec3 transformDirection( in vec3 normal, in mat4 matrix ) {\\n\treturn normalize( ( matrix * vec4( normal, 0.0 ) ).xyz );\\n}\\n// http://en.wikibooks.org/wiki/GLSL_Programming/Applying_Matrix_Transformations\\nvec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {\\n\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal) {\\n\tfloat distance = dot( planeNormal, point-pointOnPlane );\\n\treturn point - distance * planeNormal;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\treturn pointOnLine + lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) );\\n}\\nfloat calcLightAttenuation( float lightDistance, float cutoffDistance, float decayExponent ) {\\n\tif ( decayExponent > 0.0 ) {\\n\t  return pow( saturate( 1.0 - lightDistance / cutoffDistance ), decayExponent );\\n\t}\\n\treturn 1.0;\\n}\\n\\nvec3 inputToLinear( in vec3 a ) {\\n#ifdef GAMMA_INPUT\\n\treturn pow( a, vec3( float( GAMMA_FACTOR ) ) );\\n#else\\n\treturn a;\\n#endif\\n}\\nvec3 linearToOutput( in vec3 a ) {\\n#ifdef GAMMA_OUTPUT\\n\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );\\n#else\\n\treturn a;\\n#endif\\n}\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphatest_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphatest_fragment'] = \"#ifdef ALPHATEST\\n\\n\tif ( diffuseColor.a < ALPHATEST ) discard;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_vertex'] = \"vLightFront = vec3( 0.0 );\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack = vec3( 0.0 );\\n\\n#endif\\n\\ntransformedNormal = normalize( transformedNormal );\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\nfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\tfloat dotProduct = dot( transformedNormal, dirVector );\\n\tvec3 directionalLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvec3 directionalLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 directionalLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\t#ifdef WRAP_AROUND\\n\\n\t\tvec3 directionalLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\tdirectionalLightWeighting = mix( directionalLightWeighting, directionalLightWeightingHalf, wrapRGB );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tdirectionalLightWeightingBack = mix( directionalLightWeightingBack, directionalLightWeightingHalfBack, wrapRGB );\\n\\n\t\t#endif\\n\\n\t#endif\\n\\n\tvLightFront += directionalLightColor[ i ] * directionalLightWeighting;\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tvLightBack += directionalLightColor[ i ] * directionalLightWeightingBack;\\n\\n\t#endif\\n\\n}\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tvec3 pointLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvec3 pointLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 pointLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tvec3 pointLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\tpointLightWeighting = mix( pointLightWeighting, pointLightWeightingHalf, wrapRGB );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tpointLightWeightingBack = mix( pointLightWeightingBack, pointLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t\tvLightFront += pointLightColor[ i ] * pointLightWeighting * attenuation;\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += pointLightColor[ i ] * pointLightWeightingBack * attenuation;\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz - mvPosition.xyz;\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - worldPosition.xyz ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\t\tlVector = normalize( lVector );\\n\\n\t\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\t\t\tvec3 spotLightWeighting = vec3( max( dotProduct, 0.0 ) );\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvec3 spotLightWeightingBack = vec3( max( -dotProduct, 0.0 ) );\\n\\n\t\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\t\tvec3 spotLightWeightingHalfBack = vec3( max( -0.5 * dotProduct + 0.5, 0.0 ) );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tvec3 spotLightWeightingHalf = vec3( max( 0.5 * dotProduct + 0.5, 0.0 ) );\\n\t\t\t\tspotLightWeighting = mix( spotLightWeighting, spotLightWeightingHalf, wrapRGB );\\n\\n\t\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\t\tspotLightWeightingBack = mix( spotLightWeightingBack, spotLightWeightingHalfBack, wrapRGB );\\n\\n\t\t\t\t#endif\\n\\n\t\t\t#endif\\n\\n\t\t\tvLightFront += spotLightColor[ i ] * spotLightWeighting * attenuation * spotEffect;\\n\\n\t\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\t\tvLightBack += spotLightColor[ i ] * spotLightWeightingBack * attenuation * spotEffect;\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\t\tfloat dotProduct = dot( transformedNormal, lVector );\\n\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\t\tfloat hemiDiffuseWeightBack = -0.5 * dotProduct + 0.5;\\n\\n\t\tvLightFront += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\t#ifdef DOUBLE_SIDED\\n\\n\t\t\tvLightBack += mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeightBack );\\n\\n\t\t#endif\\n\\n\t}\\n\\n#endif\\n\\nvLightFront += ambientLightColor;\\n\\n#ifdef DOUBLE_SIDED\\n\\n\tvLightBack += ambientLightColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_pars_fragment'] = \"#ifdef USE_MAP\\n\\n\tuniform vec4 offsetRepeat;\\n\tuniform sampler2D map;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/default_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'default_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec4 mvPosition = modelViewMatrix * skinned;\\n\\n#elif defined( USE_MORPHTARGETS )\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( morphed, 1.0 );\\n\\n#else\\n\\n\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\n#endif\\n\\ngl_Position = projectionMatrix * mvPosition;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_fragment'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\\n#endif\\n\\n#ifdef USE_MAP\\n\\n\tuniform sampler2D map;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 skinMatrix = mat4( 0.0 );\\n\tskinMatrix += skinWeight.x * boneMatX;\\n\tskinMatrix += skinWeight.y * boneMatY;\\n\tskinMatrix += skinWeight.z * boneMatZ;\\n\tskinMatrix += skinWeight.w * boneMatW;\\n\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\n\t#ifdef USE_MORPHNORMALS\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( morphedNormal, 0.0 );\\n\\n\t#else\\n\\n\tvec4 skinnedNormal = skinMatrix * vec4( normal, 0.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n\tuniform float logDepthBufFC;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_fragment'] = \"#ifndef FLAT_SHADED\\n\\n\tvec3 normal = normalize( vNormal );\\n\\n\t#ifdef DOUBLE_SIDED\\n\\n\t\tnormal = normal * ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\\n\t#endif\\n\\n#else\\n\\n\tvec3 fdx = dFdx( vViewPosition );\\n\tvec3 fdy = dFdy( vViewPosition );\\n\tvec3 normal = normalize( cross( fdx, fdy ) );\\n\\n#endif\\n\\nvec3 viewPosition = normalize( vViewPosition );\\n\\n#ifdef USE_NORMALMAP\\n\\n\tnormal = perturbNormal2Arb( -vViewPosition, normal );\\n\\n#elif defined( USE_BUMPMAP )\\n\\n\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n\\n#endif\\n\\nvec3 totalDiffuseLight = vec3( 0.0 );\\nvec3 totalSpecularLight = vec3( 0.0 );\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_POINT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( pointLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), pointLightDistance[ i ], pointLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat pointDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat pointDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 pointDiffuseWeight = mix( vec3( pointDiffuseWeightFull ), vec3( pointDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat pointDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\ttotalDiffuseLight += pointLightColor[ i ] * pointDiffuseWeight * attenuation;\\n\\n\t\t\t\t// specular\\n\\n\t\tvec3 pointHalfVector = normalize( lVector + viewPosition );\\n\t\tfloat pointDotNormalHalf = max( dot( normal, pointHalfVector ), 0.0 );\\n\t\tfloat pointSpecularWeight = specularStrength * max( pow( pointDotNormalHalf, shininess ), 0.0 );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, pointHalfVector ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += schlick * pointLightColor[ i ] * pointSpecularWeight * pointDiffuseWeight * attenuation * specularNormalization;\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tfor ( int i = 0; i < MAX_SPOT_LIGHTS; i ++ ) {\\n\\n\t\tvec4 lPosition = viewMatrix * vec4( spotLightPosition[ i ], 1.0 );\\n\t\tvec3 lVector = lPosition.xyz + vViewPosition.xyz;\\n\\n\t\tfloat attenuation = calcLightAttenuation( length( lVector ), spotLightDistance[ i ], spotLightDecay[ i ] );\\n\\n\t\tlVector = normalize( lVector );\\n\\n\t\tfloat spotEffect = dot( spotLightDirection[ i ], normalize( spotLightPosition[ i ] - vWorldPosition ) );\\n\\n\t\tif ( spotEffect > spotLightAngleCos[ i ] ) {\\n\\n\t\t\tspotEffect = max( pow( max( spotEffect, 0.0 ), spotLightExponent[ i ] ), 0.0 );\\n\\n\t\t\t// diffuse\\n\\n\t\t\tfloat dotProduct = dot( normal, lVector );\\n\\n\t\t\t#ifdef WRAP_AROUND\\n\\n\t\t\t\tfloat spotDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\t\tfloat spotDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\t\tvec3 spotDiffuseWeight = mix( vec3( spotDiffuseWeightFull ), vec3( spotDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t\t#else\\n\\n\t\t\t\tfloat spotDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t\t#endif\\n\\n\t\t\ttotalDiffuseLight += spotLightColor[ i ] * spotDiffuseWeight * attenuation * spotEffect;\\n\\n\t\t\t// specular\\n\\n\t\t\tvec3 spotHalfVector = normalize( lVector + viewPosition );\\n\t\t\tfloat spotDotNormalHalf = max( dot( normal, spotHalfVector ), 0.0 );\\n\t\t\tfloat spotSpecularWeight = specularStrength * max( pow( spotDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, spotHalfVector ), 0.0 ), 5.0 );\\n\t\t\ttotalSpecularLight += schlick * spotLightColor[ i ] * spotSpecularWeight * spotDiffuseWeight * attenuation * specularNormalization * spotEffect;\\n\\n\t\t}\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_DIR_LIGHTS; i ++ ) {\\n\\n\t\tvec3 dirVector = transformDirection( directionalLightDirection[ i ], viewMatrix );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, dirVector );\\n\\n\t\t#ifdef WRAP_AROUND\\n\\n\t\t\tfloat dirDiffuseWeightFull = max( dotProduct, 0.0 );\\n\t\t\tfloat dirDiffuseWeightHalf = max( 0.5 * dotProduct + 0.5, 0.0 );\\n\\n\t\t\tvec3 dirDiffuseWeight = mix( vec3( dirDiffuseWeightFull ), vec3( dirDiffuseWeightHalf ), wrapRGB );\\n\\n\t\t#else\\n\\n\t\t\tfloat dirDiffuseWeight = max( dotProduct, 0.0 );\\n\\n\t\t#endif\\n\\n\t\ttotalDiffuseLight += directionalLightColor[ i ] * dirDiffuseWeight;\\n\\n\t\t// specular\\n\\n\t\tvec3 dirHalfVector = normalize( dirVector + viewPosition );\\n\t\tfloat dirDotNormalHalf = max( dot( normal, dirHalfVector ), 0.0 );\\n\t\tfloat dirSpecularWeight = specularStrength * max( pow( dirDotNormalHalf, shininess ), 0.0 );\\n\\n\t\t/*\\n\t\t// fresnel term from skin shader\\n\t\tconst float F0 = 0.128;\\n\\n\t\tfloat base = 1.0 - dot( viewPosition, dirHalfVector );\\n\t\tfloat exponential = pow( base, 5.0 );\\n\\n\t\tfloat fresnel = exponential + F0 * ( 1.0 - exponential );\\n\t\t*/\\n\\n\t\t/*\\n\t\t// fresnel term from fresnel shader\\n\t\tconst float mFresnelBias = 0.08;\\n\t\tconst float mFresnelScale = 0.3;\\n\t\tconst float mFresnelPower = 5.0;\\n\\n\t\tfloat fresnel = mFresnelBias + mFresnelScale * pow( 1.0 + dot( normalize( -viewPosition ), normal ), mFresnelPower );\\n\t\t*/\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\t// \t\tdirSpecular += specular * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization * fresnel;\\n\\n\t\tvec3 schlick = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( dirVector, dirHalfVector ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += schlick * directionalLightColor[ i ] * dirSpecularWeight * dirDiffuseWeight * specularNormalization;\\n\\n\\n\t}\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tfor( int i = 0; i < MAX_HEMI_LIGHTS; i ++ ) {\\n\\n\t\tvec3 lVector = transformDirection( hemisphereLightDirection[ i ], viewMatrix );\\n\\n\t\t// diffuse\\n\\n\t\tfloat dotProduct = dot( normal, lVector );\\n\t\tfloat hemiDiffuseWeight = 0.5 * dotProduct + 0.5;\\n\\n\t\tvec3 hemiColor = mix( hemisphereLightGroundColor[ i ], hemisphereLightSkyColor[ i ], hemiDiffuseWeight );\\n\\n\t\ttotalDiffuseLight += hemiColor;\\n\\n\t\t// specular (sky light)\\n\\n\t\tvec3 hemiHalfVectorSky = normalize( lVector + viewPosition );\\n\t\tfloat hemiDotNormalHalfSky = 0.5 * dot( normal, hemiHalfVectorSky ) + 0.5;\\n\t\tfloat hemiSpecularWeightSky = specularStrength * max( pow( max( hemiDotNormalHalfSky, 0.0 ), shininess ), 0.0 );\\n\\n\t\t// specular (ground light)\\n\\n\t\tvec3 lVectorGround = -lVector;\\n\\n\t\tvec3 hemiHalfVectorGround = normalize( lVectorGround + viewPosition );\\n\t\tfloat hemiDotNormalHalfGround = 0.5 * dot( normal, hemiHalfVectorGround ) + 0.5;\\n\t\tfloat hemiSpecularWeightGround = specularStrength * max( pow( max( hemiDotNormalHalfGround, 0.0 ), shininess ), 0.0 );\\n\\n\t\tfloat dotProductGround = dot( normal, lVectorGround );\\n\\n\t\tfloat specularNormalization = ( shininess + 2.0 ) / 8.0;\\n\\n\t\tvec3 schlickSky = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVector, hemiHalfVectorSky ), 0.0 ), 5.0 );\\n\t\tvec3 schlickGround = specular + vec3( 1.0 - specular ) * pow( max( 1.0 - dot( lVectorGround, hemiHalfVectorGround ), 0.0 ), 5.0 );\\n\t\ttotalSpecularLight += hemiColor * specularNormalization * ( schlickSky * hemiSpecularWeightSky * max( dotProduct, 0.0 ) + schlickGround * hemiSpecularWeightGround * max( dotProductGround, 0.0 ) );\\n\\n\t}\\n\\n#endif\\n\\n#ifdef METAL\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) * specular + totalSpecularLight + emissive;\\n\\n#else\\n\\n\toutgoingLight += diffuseColor.rgb * ( totalDiffuseLight + ambientLightColor ) + totalSpecularLight + emissive;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_pars_fragment'] = \"#ifdef USE_FOG\\n\\n\tuniform vec3 fogColor;\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tuniform float fogDensity;\\n\\n\t#else\\n\\n\t\tuniform float fogNear;\\n\t\tuniform float fogFar;\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphnormal_vertex'] = \"#ifdef USE_MORPHNORMALS\\n\\n\tvec3 morphedNormal = vec3( 0.0 );\\n\\n\tmorphedNormal += ( morphNormal0 - normal ) * morphTargetInfluences[ 0 ];\\n\tmorphedNormal += ( morphNormal1 - normal ) * morphTargetInfluences[ 1 ];\\n\tmorphedNormal += ( morphNormal2 - normal ) * morphTargetInfluences[ 2 ];\\n\tmorphedNormal += ( morphNormal3 - normal ) * morphTargetInfluences[ 3 ];\\n\\n\tmorphedNormal += normal;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\tuniform float reflectivity;\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tuniform samplerCube envMap;\\n\t#else\\n\t\tuniform sampler2D envMap;\\n\t#endif\\n\tuniform float flipEnvMap;\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tuniform float refractionRatio;\\n\\n\t#else\\n\\n\t\tvarying vec3 vReflect;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_fragment'] = \"#if defined(USE_LOGDEPTHBUF) && defined(USE_LOGDEPTHBUF_EXT)\\n\\n\tgl_FragDepthEXT = log2(vFragDepth) * logDepthBufFC * 0.5;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/normalmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'normalmap_pars_fragment'] = \"#ifdef USE_NORMALMAP\\n\\n\tuniform sampler2D normalMap;\\n\tuniform vec2 normalScale;\\n\\n\t// Per-Pixel Tangent Space Normal Mapping\\n\t// http://hacksoflife.blogspot.ch/2009/11/per-pixel-tangent-space-normal-mapping.html\\n\\n\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm ) {\\n\\n\t\tvec3 q0 = dFdx( eye_pos.xyz );\\n\t\tvec3 q1 = dFdy( eye_pos.xyz );\\n\t\tvec2 st0 = dFdx( vUv.st );\\n\t\tvec2 st1 = dFdy( vUv.st );\\n\\n\t\tvec3 S = normalize( q0 * st1.t - q1 * st0.t );\\n\t\tvec3 T = normalize( -q0 * st1.s + q1 * st0.s );\\n\t\tvec3 N = normalize( surf_norm );\\n\\n\t\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\t\tmapN.xy = normalScale * mapN.xy;\\n\t\tmat3 tsn = mat3( S, T, N );\\n\t\treturn normalize( tsn * mapN );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_pars_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvarying vec2 vUv2;\\n\tuniform sampler2D lightMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvShadowCoord[ i ] = shadowMatrix[ i ] * worldPosition;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_vertex'] = \"#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvWorldPosition = worldPosition.xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_fragment'] = \"#ifdef USE_MAP\\n\\n\tvec4 texelColor = texture2D( map, vUv );\\n\\n\ttexelColor.xyz = inputToLinear( texelColor.xyz );\\n\\n\tdiffuseColor *= texelColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_vertex'] = \"#ifdef USE_LIGHTMAP\\n\\n\tvUv2 = uv2;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_particle_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_particle_fragment'] = \"#ifdef USE_MAP\\n\\n\tdiffuseColor *= texture2D( map, vec2( gl_PointCoord.x, 1.0 - gl_PointCoord.y ) * offsetRepeat.zw + offsetRepeat.xy );\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_fragment'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvColor.xyz = inputToLinear( color.xyz );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_vertex'] = \"#ifdef USE_SKINNING\\n\\n\t#ifdef USE_MORPHTARGETS\\n\\n\tvec4 skinVertex = bindMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\tvec4 skinVertex = bindMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n\tvec4 skinned = vec4( 0.0 );\\n\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\tskinned  = bindMatrixInverse * skinned;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_pars_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvarying vec3 vReflect;\\n\\n\tuniform float refractionRatio;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/linear_to_gamma_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'linear_to_gamma_fragment'] = \"\\n\toutgoingLight = linearToOutput( outgoingLight );\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_pars_vertex'] = \"#ifdef USE_COLOR\\n\\n\tvarying vec3 vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_lambert_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_lambert_pars_vertex'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_pars_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvarying vec2 vUv;\\n\tuniform vec4 offsetRepeat;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_fragment'] = \"#ifdef USE_ENVMAP\\n\\n\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\n\t\tvec3 cameraToVertex = normalize( vWorldPosition - cameraPosition );\\n\\n\t\t// Transforming Normal Vectors with the Inverse Transformation\\n\t\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\n\t\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\t\tvec3 reflectVec = reflect( cameraToVertex, worldNormal );\\n\\n\t\t#else\\n\\n\t\t\tvec3 reflectVec = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t\t#endif\\n\\n\t#else\\n\\n\t\tvec3 reflectVec = vReflect;\\n\\n\t#endif\\n\\n\t#ifdef DOUBLE_SIDED\\n\t\tfloat flipNormal = ( -1.0 + 2.0 * float( gl_FrontFacing ) );\\n\t#else\\n\t\tfloat flipNormal = 1.0;\\n\t#endif\\n\\n\t#ifdef ENVMAP_TYPE_CUBE\\n\t\tvec4 envColor = textureCube( envMap, flipNormal * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\n\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\t\tvec2 sampleUV;\\n\t\tsampleUV.y = saturate( flipNormal * reflectVec.y * 0.5 + 0.5 );\\n\t\tsampleUV.x = atan( flipNormal * reflectVec.z, flipNormal * reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\t\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\n\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\t\tvec3 reflectView = flipNormal * normalize((viewMatrix * vec4( reflectVec, 0.0 )).xyz + vec3(0.0,0.0,1.0));\\n\t\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\t#endif\\n\\n\tenvColor.xyz = inputToLinear( envColor.xyz );\\n\\n\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\n\t\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\n\t\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\n\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\n\t\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_pars_fragment'] = \"#ifdef USE_SPECULARMAP\\n\\n\tuniform sampler2D specularMap;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_vertex'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tgl_Position.z = log2(max( EPSILON, gl_Position.w + 1.0 )) * logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tvFragDepth = 1.0 + gl_Position.w;\\n\\n#else\\n\\n\t\tgl_Position.z = (gl_Position.z - 1.0) * gl_Position.w;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_pars_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tuniform float morphTargetInfluences[ 8 ];\\n\\n\t#else\\n\\n\tuniform float morphTargetInfluences[ 4 ];\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/specularmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'specularmap_fragment'] = \"float specularStrength;\\n\\n#ifdef USE_SPECULARMAP\\n\\n\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\tspecularStrength = texelSpecular.r;\\n\\n#else\\n\\n\tspecularStrength = 1.0;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/fog_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'fog_fragment'] = \"#ifdef USE_FOG\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\\n\\n\t#else\\n\\n\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\\n\\n\t#endif\\n\\n\t#ifdef FOG_EXP2\\n\\n\t\tfloat fogFactor = exp2( - square( fogDensity ) * square( depth ) * LOG2 );\\n\t\tfogFactor = whiteCompliment( fogFactor );\\n\\n\t#else\\n\\n\t\tfloat fogFactor = smoothstep( fogNear, fogFar, depth );\\n\\n\t#endif\\n\t\\n\toutgoingLight = mix( outgoingLight, fogColor, fogFactor );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/bumpmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'bumpmap_pars_fragment'] = \"#ifdef USE_BUMPMAP\\n\\n\tuniform sampler2D bumpMap;\\n\tuniform float bumpScale;\\n\\n\t// Derivative maps - bump mapping unparametrized surfaces by Morten Mikkelsen\\n\t// http://mmikkelsen3d.blogspot.sk/2011/07/derivative-maps.html\\n\\n\t// Evaluate the derivative of the height w.r.t. screen-space using forward differencing (listing 2)\\n\\n\tvec2 dHdxy_fwd() {\\n\\n\t\tvec2 dSTdx = dFdx( vUv );\\n\t\tvec2 dSTdy = dFdy( vUv );\\n\\n\t\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\t\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\t\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\n\t\treturn vec2( dBx, dBy );\\n\\n\t}\\n\\n\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\n\t\tvec3 vSigmaX = dFdx( surf_pos );\\n\t\tvec3 vSigmaY = dFdy( surf_pos );\\n\t\tvec3 vN = surf_norm;\t\t// normalized\\n\\n\t\tvec3 R1 = cross( vSigmaY, vN );\\n\t\tvec3 R2 = cross( vN, vSigmaX );\\n\\n\t\tfloat fDet = dot( vSigmaX, R1 );\\n\\n\t\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\t\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\n\t}\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/defaultnormal_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'defaultnormal_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tvec3 objectNormal = skinnedNormal.xyz;\\n\\n#elif defined( USE_MORPHNORMALS )\\n\\n\tvec3 objectNormal = morphedNormal;\\n\\n#else\\n\\n\tvec3 objectNormal = normal;\\n\\n#endif\\n\\n#ifdef FLIP_SIDED\\n\\n\tobjectNormal = -objectNormal;\\n\\n#endif\\n\\nvec3 transformedNormal = normalMatrix * objectNormal;\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lights_phong_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lights_phong_pars_fragment'] = \"uniform vec3 ambientLightColor;\\n\\n#if MAX_DIR_LIGHTS > 0\\n\\n\tuniform vec3 directionalLightColor[ MAX_DIR_LIGHTS ];\\n\tuniform vec3 directionalLightDirection[ MAX_DIR_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_HEMI_LIGHTS > 0\\n\\n\tuniform vec3 hemisphereLightSkyColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightGroundColor[ MAX_HEMI_LIGHTS ];\\n\tuniform vec3 hemisphereLightDirection[ MAX_HEMI_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_POINT_LIGHTS > 0\\n\\n\tuniform vec3 pointLightColor[ MAX_POINT_LIGHTS ];\\n\\n\tuniform vec3 pointLightPosition[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDistance[ MAX_POINT_LIGHTS ];\\n\tuniform float pointLightDecay[ MAX_POINT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0\\n\\n\tuniform vec3 spotLightColor[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightPosition[ MAX_SPOT_LIGHTS ];\\n\tuniform vec3 spotLightDirection[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightAngleCos[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightExponent[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDistance[ MAX_SPOT_LIGHTS ];\\n\tuniform float spotLightDecay[ MAX_SPOT_LIGHTS ];\\n\\n#endif\\n\\n#if MAX_SPOT_LIGHTS > 0 || defined( USE_BUMPMAP ) || defined( USE_ENVMAP )\\n\\n\tvarying vec3 vWorldPosition;\\n\\n#endif\\n\\n#ifdef WRAP_AROUND\\n\\n\tuniform vec3 wrapRGB;\\n\\n#endif\\n\\nvarying vec3 vViewPosition;\\n\\n#ifndef FLAT_SHADED\\n\\n\tvarying vec3 vNormal;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinbase_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinbase_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/map_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'map_vertex'] = \"#if defined( USE_MAP ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( USE_SPECULARMAP ) || defined( USE_ALPHAMAP )\\n\\n\tvUv = uv * offsetRepeat.zw + offsetRepeat.xy;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/lightmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'lightmap_fragment'] = \"#ifdef USE_LIGHTMAP\\n\\n\toutgoingLight *= diffuseColor.xyz * texture2D( lightMap, vUv2 ).xyz;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_vertex'] = \"#ifdef USE_SHADOWMAP\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\tuniform mat4 shadowMatrix[ MAX_SHADOWS ];\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/color_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'color_fragment'] = \"#ifdef USE_COLOR\\n\\n\tdiffuseColor.rgb *= vColor;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/morphtarget_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'morphtarget_vertex'] = \"#ifdef USE_MORPHTARGETS\\n\\n\tvec3 morphed = vec3( 0.0 );\\n\tmorphed += ( morphTarget0 - position ) * morphTargetInfluences[ 0 ];\\n\tmorphed += ( morphTarget1 - position ) * morphTargetInfluences[ 1 ];\\n\tmorphed += ( morphTarget2 - position ) * morphTargetInfluences[ 2 ];\\n\tmorphed += ( morphTarget3 - position ) * morphTargetInfluences[ 3 ];\\n\\n\t#ifndef USE_MORPHNORMALS\\n\\n\tmorphed += ( morphTarget4 - position ) * morphTargetInfluences[ 4 ];\\n\tmorphed += ( morphTarget5 - position ) * morphTargetInfluences[ 5 ];\\n\tmorphed += ( morphTarget6 - position ) * morphTargetInfluences[ 6 ];\\n\tmorphed += ( morphTarget7 - position ) * morphTargetInfluences[ 7 ];\\n\\n\t#endif\\n\\n\tmorphed += position;\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/envmap_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'envmap_vertex'] = \"#if defined( USE_ENVMAP ) && ! defined( USE_BUMPMAP ) && ! defined( USE_NORMALMAP ) && ! defined( PHONG )\\n\\n\tvec3 worldNormal = transformDirection( objectNormal, modelMatrix );\\n\\n\tvec3 cameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\n\t#ifdef ENVMAP_MODE_REFLECTION\\n\\n\t\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\n\t#else\\n\\n\t\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\tvec3 frustumColors[3];\\n\t\tfrustumColors[0] = vec3( 1.0, 0.5, 0.0 );\\n\t\tfrustumColors[1] = vec3( 0.0, 1.0, 0.8 );\\n\t\tfrustumColors[2] = vec3( 0.0, 0.5, 1.0 );\\n\\n\t#endif\\n\\n\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\tint inFrustumCount = 0;\\n\\n\t#endif\\n\\n\tfloat fDepth;\\n\tvec3 shadowColor = vec3( 1.0 );\\n\\n\tfor( int i = 0; i < MAX_SHADOWS; i ++ ) {\\n\\n\t\tvec3 shadowCoord = vShadowCoord[ i ].xyz / vShadowCoord[ i ].w;\\n\\n\t\t\t\t// if ( something && something ) breaks ATI OpenGL shader compiler\\n\t\t\t\t// if ( all( something, something ) ) using this instead\\n\\n\t\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\t\tbool inFrustum = all( inFrustumVec );\\n\\n\t\t\t\t// don't shadow pixels outside of light frustum\\n\t\t\t\t// use just first frustum (for cascades)\\n\t\t\t\t// don't shadow pixels behind far plane of light frustum\\n\\n\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\tinFrustumCount += int( inFrustum );\\n\t\t\tbvec3 frustumTestVec = bvec3( inFrustum, inFrustumCount == 1, shadowCoord.z <= 1.0 );\\n\\n\t\t#else\\n\\n\t\t\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\n\t\t#endif\\n\\n\t\tbool frustumTest = all( frustumTestVec );\\n\\n\t\tif ( frustumTest ) {\\n\\n\t\t\tshadowCoord.z += shadowBias[ i ];\\n\\n\t\t\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t/*\\n\t\t\t\t\t\t// nested loops breaks shader compiler / validator on some ATI cards when using OpenGL\\n\t\t\t\t\t\t// must enroll loop manually\\n\\n\t\t\t\tfor ( float y = -1.25; y <= 1.25; y += 1.25 )\\n\t\t\t\t\tfor ( float x = -1.25; x <= 1.25; x += 1.25 ) {\\n\\n\t\t\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy );\\n\\n\t\t\t\t\t\t\t\t// doesn't seem to produce any noticeable visual difference compared to simple texture2D lookup\\n\t\t\t\t\t\t\t\t//vec4 rgbaDepth = texture2DProj( shadowMap[ i ], vec4( vShadowCoord[ i ].w * ( vec2( x * xPixelOffset, y * yPixelOffset ) + shadowCoord.xy ), 0.05, vShadowCoord[ i ].w ) );\\n\\n\t\t\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\t\t\tif ( fDepth < shadowCoord.z )\\n\t\t\t\t\t\t\tshadow += 1.0;\\n\\n\t\t\t\t}\\n\\n\t\t\t\tshadow /= 9.0;\\n\\n\t\t*/\\n\\n\t\t\t\tconst float shadowDelta = 1.0 / 9.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.25 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.25 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.25 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.25 * yPixelOffset;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tfDepth = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\t\t\t\tif ( fDepth < shadowCoord.z ) shadow += shadowDelta;\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\n\t\t\t\t\t\t// Percentage-close filtering\\n\t\t\t\t\t\t// (9 pixel kernel)\\n\t\t\t\t\t\t// http://fabiensanglard.net/shadowmappingPCF/\\n\\n\t\t\t\tfloat shadow = 0.0;\\n\\n\t\t\t\tfloat xPixelOffset = 1.0 / shadowMapSize[ i ].x;\\n\t\t\t\tfloat yPixelOffset = 1.0 / shadowMapSize[ i ].y;\\n\\n\t\t\t\tfloat dx0 = -1.0 * xPixelOffset;\\n\t\t\t\tfloat dy0 = -1.0 * yPixelOffset;\\n\t\t\t\tfloat dx1 = 1.0 * xPixelOffset;\\n\t\t\t\tfloat dy1 = 1.0 * yPixelOffset;\\n\\n\t\t\t\tmat3 shadowKernel;\\n\t\t\t\tmat3 depthKernel;\\n\\n\t\t\t\tdepthKernel[0][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy0 ) ) );\\n\t\t\t\tdepthKernel[0][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, 0.0 ) ) );\\n\t\t\t\tdepthKernel[0][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx0, dy1 ) ) );\\n\t\t\t\tdepthKernel[1][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy0 ) ) );\\n\t\t\t\tdepthKernel[1][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy ) );\\n\t\t\t\tdepthKernel[1][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( 0.0, dy1 ) ) );\\n\t\t\t\tdepthKernel[2][0] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy0 ) ) );\\n\t\t\t\tdepthKernel[2][1] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, 0.0 ) ) );\\n\t\t\t\tdepthKernel[2][2] = unpackDepth( texture2D( shadowMap[ i ], shadowCoord.xy + vec2( dx1, dy1 ) ) );\\n\\n\t\t\t\tvec3 shadowZ = vec3( shadowCoord.z );\\n\t\t\t\tshadowKernel[0] = vec3(lessThan(depthKernel[0], shadowZ ));\\n\t\t\t\tshadowKernel[0] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[1] = vec3(lessThan(depthKernel[1], shadowZ ));\\n\t\t\t\tshadowKernel[1] *= vec3(0.25);\\n\\n\t\t\t\tshadowKernel[2] = vec3(lessThan(depthKernel[2], shadowZ ));\\n\t\t\t\tshadowKernel[2] *= vec3(0.25);\\n\\n\t\t\t\tvec2 fractionalCoord = 1.0 - fract( shadowCoord.xy * shadowMapSize[i].xy );\\n\\n\t\t\t\tshadowKernel[0] = mix( shadowKernel[1], shadowKernel[0], fractionalCoord.x );\\n\t\t\t\tshadowKernel[1] = mix( shadowKernel[2], shadowKernel[1], fractionalCoord.x );\\n\\n\t\t\t\tvec4 shadowValues;\\n\t\t\t\tshadowValues.x = mix( shadowKernel[0][1], shadowKernel[0][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.y = mix( shadowKernel[0][2], shadowKernel[0][1], fractionalCoord.y );\\n\t\t\t\tshadowValues.z = mix( shadowKernel[1][1], shadowKernel[1][0], fractionalCoord.y );\\n\t\t\t\tshadowValues.w = mix( shadowKernel[1][2], shadowKernel[1][1], fractionalCoord.y );\\n\\n\t\t\t\tshadow = dot( shadowValues, vec4( 1.0 ) );\\n\\n\t\t\t\tshadowColor = shadowColor * vec3( ( 1.0 - shadowDarkness[ i ] * shadow ) );\\n\\n\t\t\t#else\\n\\n\t\t\t\tvec4 rgbaDepth = texture2D( shadowMap[ i ], shadowCoord.xy );\\n\t\t\t\tfloat fDepth = unpackDepth( rgbaDepth );\\n\\n\t\t\t\tif ( fDepth < shadowCoord.z )\\n\\n\t\t// spot with multiple shadows is darker\\n\\n\t\t\t\t\tshadowColor = shadowColor * vec3( 1.0 - shadowDarkness[ i ] );\\n\\n\t\t// spot with multiple shadows has the same color as single shadow spot\\n\\n\t\t// \t\t\t\t\tshadowColor = min( shadowColor, vec3( shadowDarkness[ i ] ) );\\n\\n\t\t\t#endif\\n\\n\t\t}\\n\\n\\n\t\t#ifdef SHADOWMAP_DEBUG\\n\\n\t\t\t#ifdef SHADOWMAP_CASCADE\\n\\n\t\t\t\tif ( inFrustum && inFrustumCount == 1 ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t\t#else\\n\\n\t\t\t\tif ( inFrustum ) outgoingLight *= frustumColors[ i ];\\n\\n\t\t\t#endif\\n\\n\t\t#endif\\n\\n\t}\\n\\n\t// NOTE: I am unsure if this is correct in linear space.  -bhouston, Dec 29, 2014\\n\tshadowColor = inputToLinear( shadowColor );\\n\\n\toutgoingLight = outgoingLight * shadowColor;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/worldpos_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'worldpos_vertex'] = \"#if defined( USE_ENVMAP ) || defined( PHONG ) || defined( LAMBERT ) || defined ( USE_SHADOWMAP )\\n\\n\t#ifdef USE_SKINNING\\n\\n\t\tvec4 worldPosition = modelMatrix * skinned;\\n\\n\t#elif defined( USE_MORPHTARGETS )\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( morphed, 1.0 );\\n\\n\t#else\\n\\n\t\tvec4 worldPosition = modelMatrix * vec4( position, 1.0 );\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/shadowmap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'shadowmap_pars_fragment'] = \"#ifdef USE_SHADOWMAP\\n\\n\tuniform sampler2D shadowMap[ MAX_SHADOWS ];\\n\tuniform vec2 shadowMapSize[ MAX_SHADOWS ];\\n\\n\tuniform float shadowDarkness[ MAX_SHADOWS ];\\n\tuniform float shadowBias[ MAX_SHADOWS ];\\n\\n\tvarying vec4 vShadowCoord[ MAX_SHADOWS ];\\n\\n\tfloat unpackDepth( const in vec4 rgba_depth ) {\\n\\n\t\tconst vec4 bit_shift = vec4( 1.0 / ( 256.0 * 256.0 * 256.0 ), 1.0 / ( 256.0 * 256.0 ), 1.0 / 256.0, 1.0 );\\n\t\tfloat depth = dot( rgba_depth, bit_shift );\\n\t\treturn depth;\\n\\n\t}\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/skinning_pars_vertex.glsl\r\n\r\nTHREE.ShaderChunk[ 'skinning_pars_vertex'] = \"#ifdef USE_SKINNING\\n\\n\tuniform mat4 bindMatrix;\\n\tuniform mat4 bindMatrixInverse;\\n\\n\t#ifdef BONE_TEXTURE\\n\\n\t\tuniform sampler2D boneTexture;\\n\t\tuniform int boneTextureWidth;\\n\t\tuniform int boneTextureHeight;\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tfloat j = i * 4.0;\\n\t\t\tfloat x = mod( j, float( boneTextureWidth ) );\\n\t\t\tfloat y = floor( j / float( boneTextureWidth ) );\\n\\n\t\t\tfloat dx = 1.0 / float( boneTextureWidth );\\n\t\t\tfloat dy = 1.0 / float( boneTextureHeight );\\n\\n\t\t\ty = dy * ( y + 0.5 );\\n\\n\t\t\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\t\t\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\t\t\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\t\t\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\n\t\t\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#else\\n\\n\t\tuniform mat4 boneGlobalMatrices[ MAX_BONES ];\\n\\n\t\tmat4 getBoneMatrix( const in float i ) {\\n\\n\t\t\tmat4 bone = boneGlobalMatrices[ int(i) ];\\n\t\t\treturn bone;\\n\\n\t\t}\\n\\n\t#endif\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/logdepthbuf_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'logdepthbuf_pars_fragment'] = \"#ifdef USE_LOGDEPTHBUF\\n\\n\tuniform float logDepthBufFC;\\n\\n\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\n\t\t#extension GL_EXT_frag_depth : enable\\n\t\tvarying float vFragDepth;\\n\\n\t#endif\\n\\n#endif\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/ShaderChunk/alphamap_pars_fragment.glsl\r\n\r\nTHREE.ShaderChunk[ 'alphamap_pars_fragment'] = \"#ifdef USE_ALPHAMAP\\n\\n\tuniform sampler2D alphaMap;\\n\\n#endif\\n\";\r\n\r\n// File:src/renderers/shaders/UniformsUtils.js\r\n\r\n/**\r\n * Uniform Utilities\r\n */\r\n\r\nTHREE.UniformsUtils = {\r\n\r\n\tmerge: function ( uniforms ) {\r\n\r\n\t\tvar merged = {};\r\n\r\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\r\n\r\n\t\t\tvar tmp = this.clone( uniforms[ u ] );\r\n\r\n\t\t\tfor ( var p in tmp ) {\r\n\r\n\t\t\t\tmerged[ p ] = tmp[ p ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn merged;\r\n\r\n\t},\r\n\r\n\tclone: function ( uniforms_src ) {\r\n\r\n\t\tvar uniforms_dst = {};\r\n\r\n\t\tfor ( var u in uniforms_src ) {\r\n\r\n\t\t\tuniforms_dst[ u ] = {};\r\n\r\n\t\t\tfor ( var p in uniforms_src[ u ] ) {\r\n\r\n\t\t\t\tvar parameter_src = uniforms_src[ u ][ p ];\r\n\r\n\t\t\t\tif ( parameter_src instanceof THREE.Color ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector2 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector3 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Vector4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Matrix4 ||\r\n\t\t\t\t\t parameter_src instanceof THREE.Texture ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.clone();\r\n\r\n\t\t\t\t} else if ( parameter_src instanceof Array ) {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src.slice();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tuniforms_dst[ u ][ p ] = parameter_src;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms_dst;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/UniformsLib.js\r\n\r\n/**\r\n * Uniforms library for shared webgl shaders\r\n */\r\n\r\nTHREE.UniformsLib = {\r\n\r\n\tcommon: {\r\n\r\n\t\t\"diffuse\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"lightMap\" : { type: \"t\", value: null },\r\n\t\t\"specularMap\" : { type: \"t\", value: null },\r\n\t\t\"alphaMap\" : { type: \"t\", value: null },\r\n\r\n\t\t\"envMap\" : { type: \"t\", value: null },\r\n\t\t\"flipEnvMap\" : { type: \"f\", value: - 1 },\r\n\t\t\"reflectivity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"refractionRatio\" : { type: \"f\", value: 0.98 },\r\n\r\n\t\t\"morphTargetInfluences\" : { type: \"f\", value: 0 }\r\n\r\n\t},\r\n\r\n\tbump: {\r\n\r\n\t\t\"bumpMap\" : { type: \"t\", value: null },\r\n\t\t\"bumpScale\" : { type: \"f\", value: 1 }\r\n\r\n\t},\r\n\r\n\tnormalmap: {\r\n\r\n\t\t\"normalMap\" : { type: \"t\", value: null },\r\n\t\t\"normalScale\" : { type: \"v2\", value: new THREE.Vector2( 1, 1 ) }\r\n\t},\r\n\r\n\tfog : {\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tlights: {\r\n\r\n\t\t\"ambientLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"directionalLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"directionalLightColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"hemisphereLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightSkyColor\" : { type: \"fv\", value: [] },\r\n\t\t\"hemisphereLightGroundColor\" : { type: \"fv\", value: [] },\r\n\r\n\t\t\"pointLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"pointLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"pointLightDecay\" : { type: \"fv1\", value: [] },\r\n\r\n\t\t\"spotLightColor\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightPosition\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDirection\" : { type: \"fv\", value: [] },\r\n\t\t\"spotLightDistance\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightAngleCos\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightExponent\" : { type: \"fv1\", value: [] },\r\n\t\t\"spotLightDecay\" : { type: \"fv1\", value: [] }\r\n\r\n\t},\r\n\r\n\tparticle: {\r\n\r\n\t\t\"psColor\" : { type: \"c\", value: new THREE.Color( 0xeeeeee ) },\r\n\t\t\"opacity\" : { type: \"f\", value: 1.0 },\r\n\t\t\"size\" : { type: \"f\", value: 1.0 },\r\n\t\t\"scale\" : { type: \"f\", value: 1.0 },\r\n\t\t\"map\" : { type: \"t\", value: null },\r\n\t\t\"offsetRepeat\" : { type: \"v4\", value: new THREE.Vector4( 0, 0, 1, 1 ) },\r\n\r\n\t\t\"fogDensity\" : { type: \"f\", value: 0.00025 },\r\n\t\t\"fogNear\" : { type: \"f\", value: 1 },\r\n\t\t\"fogFar\" : { type: \"f\", value: 2000 },\r\n\t\t\"fogColor\" : { type: \"c\", value: new THREE.Color( 0xffffff ) }\r\n\r\n\t},\r\n\r\n\tshadowmap: {\r\n\r\n\t\t\"shadowMap\": { type: \"tv\", value: [] },\r\n\t\t\"shadowMapSize\": { type: \"v2v\", value: [] },\r\n\r\n\t\t\"shadowBias\" : { type: \"fv1\", value: [] },\r\n\t\t\"shadowDarkness\": { type: \"fv1\", value: [] },\r\n\r\n\t\t\"shadowMatrix\" : { type: \"m4v\", value: [] }\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/shaders/ShaderLib.js\r\n\r\n/**\r\n * Webgl Shader Library for three.js\r\n *\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\n\r\nTHREE.ShaderLib = {\r\n\r\n\t'basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_ENVMAP\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\t\t// TODO: Light map on an otherwise unlit surface doesn't make sense.\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\t\t// TODO: Shadows on an otherwise unlit surface doesn't make sense.\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'lambert': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define LAMBERT\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_lambert_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_lambert_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"varying vec3 vLightFront;\",\r\n\r\n\t\t\t\"#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\"\tvarying vec3 vLightBack;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef DOUBLE_SIDED\",\r\n\r\n\t\t\t\t\t//\"float isFront = float( gl_FrontFacing );\",\r\n\t\t\t\t\t//\"gl_FragColor.xyz *= isFront * vLightFront + ( 1.0 - isFront ) * vLightBack;\",\r\n\r\n\t\t\t\"\t\tif ( gl_FrontFacing )\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\t\t\t\"\t\telse\",\r\n\t\t\t\"\t\t\toutgoingLight += diffuseColor.rgb * vLightBack + emissive;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\toutgoingLight += diffuseColor.rgb * vLightFront + emissive;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'phong': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"bump\" ],\r\n\t\t\tTHREE.UniformsLib[ \"normalmap\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\t\t\tTHREE.UniformsLib[ \"lights\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"emissive\" : { type: \"c\", value: new THREE.Color( 0x000000 ) },\r\n\t\t\t\t\"specular\" : { type: \"c\", value: new THREE.Color( 0x111111 ) },\r\n\t\t\t\t\"shininess\": { type: \"f\", value: 30 },\r\n\t\t\t\t\"wrapRGB\"  : { type: \"v3\", value: new THREE.Vector3( 1, 1, 1 ) }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"varying vec3 vViewPosition;\",\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\",\r\n\r\n\t\t\t\"\tvarying vec3 vNormal;\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinnormal_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"defaultnormal_vertex\" ],\r\n\r\n\t\t\t\"#ifndef FLAT_SHADED\", // Normal computed with derivatives when FLAT_SHADED\r\n\r\n\t\t\t\"\tvNormal = normalize( transformedNormal );\",\r\n\r\n\t\t\t\"#endif\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"\tvViewPosition = -mvPosition.xyz;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"#define PHONG\",\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform vec3 emissive;\",\r\n\t\t\t\"uniform vec3 specular;\",\r\n\t\t\t\"uniform float shininess;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"alphamap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lightmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"envmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"lights_phong_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"bumpmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"normalmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"specularmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphamap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"specularmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lights_phong_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"lightmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"envmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"linear_to_gamma_fragment\" ],\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'particle_basic': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"particle\" ],\r\n\t\t\tTHREE.UniformsLib[ \"shadowmap\" ]\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float size;\",\r\n\t\t\t\"uniform float scale;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\"\t#ifdef USE_SIZEATTENUATION\",\r\n\t\t\t\"\t\tgl_PointSize = size * ( scale / length( mvPosition.xyz ) );\",\r\n\t\t\t\"\t#else\",\r\n\t\t\t\"\t\tgl_PointSize = size;\",\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"worldpos_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 psColor;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"map_particle_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"shadowmap_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( psColor, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"map_particle_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"alphatest_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"shadowmap_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'dashed': {\r\n\r\n\t\tuniforms: THREE.UniformsUtils.merge( [\r\n\r\n\t\t\tTHREE.UniformsLib[ \"common\" ],\r\n\t\t\tTHREE.UniformsLib[ \"fog\" ],\r\n\r\n\t\t\t{\r\n\t\t\t\t\"scale\"    : { type: \"f\", value: 1 },\r\n\t\t\t\t\"dashSize\" : { type: \"f\", value: 1 },\r\n\t\t\t\t\"totalSize\": { type: \"f\", value: 2 }\r\n\t\t\t}\r\n\r\n\t\t] ),\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"uniform float scale;\",\r\n\t\t\t\"attribute float lineDistance;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_vertex\" ],\r\n\r\n\t\t\t\"\tvLineDistance = scale * lineDistance;\",\r\n\r\n\t\t\t\"\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\",\r\n\t\t\t\"\tgl_Position = projectionMatrix * mvPosition;\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform vec3 diffuse;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\t\"uniform float dashSize;\",\r\n\t\t\t\"uniform float totalSize;\",\r\n\r\n\t\t\t\"varying float vLineDistance;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"color_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"fog_pars_fragment\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\",\r\n\r\n\t\t\t\"\t\tdiscard;\",\r\n\r\n\t\t\t\"\t}\",\r\n\r\n\t\t\t\"\tvec3 outgoingLight = vec3( 0.0 );\",\t// outgoing light does not have an alpha, the surface does\r\n\t\t\t\"\tvec4 diffuseColor = vec4( diffuse, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"color_fragment\" ],\r\n\r\n\t\t\t\"\toutgoingLight = diffuseColor.rgb;\", // simple shader\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"fog_fragment\" ],\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\",\t// TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'depth': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"mNear\": { type: \"f\", value: 1.0 },\r\n\t\t\t\"mFar\" : { type: \"f\", value: 2000.0 },\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float mNear;\",\r\n\t\t\t\"uniform float mFar;\",\r\n\t\t\t\"uniform float opacity;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragDepthEXT / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tfloat depth = gl_FragCoord.z / gl_FragCoord.w;\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, depth );\",\r\n\t\t\t\"\tgl_FragColor = vec4( vec3( color ), opacity );\",   // TODO, this should be pre-multiplied to allow for bright highlights on very transparent objects\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t'normal': {\r\n\r\n\t\tuniforms: {\r\n\r\n\t\t\t\"opacity\" : { type: \"f\", value: 1.0 }\r\n\r\n\t\t},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvNormal = normalize( normalMatrix * normal );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform float opacity;\",\r\n\t\t\t\"varying vec3 vNormal;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = vec4( 0.5 * normalize( vNormal ) + 0.5, opacity );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'cube': {\r\n\r\n\t\tuniforms: { \"tCube\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform samplerCube tCube;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* -------------------------------------------------------------------------\r\n\t//\tCube map shader\r\n\t ------------------------------------------------------------------------- */\r\n\r\n\t'equirect': {\r\n\r\n\t\tuniforms: { \"tEquirect\": { type: \"t\", value: null },\r\n\t\t\t\t\t\"tFlip\": { type: \"f\", value: - 1 } },\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\"\tvWorldPosition = transformDirection( position, modelMatrix );\",\r\n\r\n\t\t\t\"\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\t\"uniform sampler2D tEquirect;\",\r\n\t\t\t\"uniform float tFlip;\",\r\n\r\n\t\t\t\"varying vec3 vWorldPosition;\",\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t// \"\tgl_FragColor = textureCube( tCube, vec3( tFlip * vWorldPosition.x, vWorldPosition.yz ) );\",\r\n\t\t\t\t\"vec3 direction = normalize( vWorldPosition );\",\r\n\t\t\t\t\"vec2 sampleUV;\",\r\n\t\t\t\t\"sampleUV.y = saturate( tFlip * direction.y * -0.5 + 0.5 );\",\r\n\t\t\t\t\"sampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\r\n\t\t\t\t\"gl_FragColor = texture2D( tEquirect, sampleUV );\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t},\r\n\r\n\t/* Depth encoding into RGBA texture\r\n\t *\r\n\t * based on SpiderGL shadow map example\r\n\t * http://spidergl.org/example.php?id=6\r\n\t *\r\n\t * originally from\r\n\t * http://www.gamedev.net/topic/442138-packing-a-float-into-a-a8r8g8b8-texture-shader/page__whichpage__1%25EF%25BF%25BD\r\n\t *\r\n\t * see also\r\n\t * http://aras-p.info/blog/2009/07/30/encoding-floats-to-rgba-the-final/\r\n\t */\r\n\r\n\t'depthRGBA': {\r\n\r\n\t\tuniforms: {},\r\n\r\n\t\tvertexShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"morphtarget_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"skinning_pars_vertex\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_vertex\" ],\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinbase_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"morphtarget_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"skinning_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"default_vertex\" ],\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_vertex\" ],\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\"),\r\n\r\n\t\tfragmentShader: [\r\n\r\n\t\t\tTHREE.ShaderChunk[ \"common\" ],\r\n\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_pars_fragment\" ],\r\n\r\n\t\t\t\"vec4 pack_depth( const in float depth ) {\",\r\n\r\n\t\t\t\"\tconst vec4 bit_shift = vec4( 256.0 * 256.0 * 256.0, 256.0 * 256.0, 256.0, 1.0 );\",\r\n\t\t\t\"\tconst vec4 bit_mask = vec4( 0.0, 1.0 / 256.0, 1.0 / 256.0, 1.0 / 256.0 );\",\r\n\t\t\t\"\tvec4 res = mod( depth * bit_shift * vec4( 255 ), vec4( 256 ) ) / vec4( 255 );\", // \"\tvec4 res = fract( depth * bit_shift );\",\r\n\t\t\t\"\tres -= res.xxyz * bit_mask;\",\r\n\t\t\t\"\treturn res;\",\r\n\r\n\t\t\t\"}\",\r\n\r\n\t\t\t\"void main() {\",\r\n\r\n\t\t\t\tTHREE.ShaderChunk[ \"logdepthbuf_fragment\" ],\r\n\r\n\t\t\t\"\t#ifdef USE_LOGDEPTHBUF_EXT\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragDepthEXT );\",\r\n\r\n\t\t\t\"\t#else\",\r\n\r\n\t\t\t\"\t\tgl_FragData[ 0 ] = pack_depth( gl_FragCoord.z );\",\r\n\r\n\t\t\t\"\t#endif\",\r\n\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( gl_FragCoord.z / gl_FragCoord.w );\",\r\n\t\t\t\t//\"float z = ( ( gl_FragCoord.z / gl_FragCoord.w ) - 3.0 ) / ( 4000.0 - 3.0 );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = pack_depth( z );\",\r\n\t\t\t\t//\"gl_FragData[ 0 ] = vec4( z, z, z, 1.0 );\",\r\n\r\n\t\t\t\"}\"\r\n\r\n\t\t].join(\"\\n\")\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderer.js\r\n\r\n/**\r\n * @author supereggbert / http://www.paulbrunt.co.uk/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author szimek / https://github.com/szimek/\r\n */\r\n\r\nTHREE.WebGLRenderer = function ( parameters ) {\r\n\r\n\tconsole.log( 'THREE.WebGLRenderer', THREE.REVISION );\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElement( 'canvas' ),\r\n\t_context = parameters.context !== undefined ? parameters.context : null,\r\n\r\n\tpixelRatio = 1,\r\n\r\n\t_precision = parameters.precision !== undefined ? parameters.precision : 'highp',\r\n\r\n\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\r\n\t_depth = parameters.depth !== undefined ? parameters.depth : true,\r\n\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\r\n\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\r\n\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\r\n\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\r\n\t_logarithmicDepthBuffer = parameters.logarithmicDepthBuffer !== undefined ? parameters.logarithmicDepthBuffer : false,\r\n\r\n\t_clearColor = new THREE.Color( 0x000000 ),\r\n\t_clearAlpha = 0;\r\n\r\n\tvar lights = [];\r\n\r\n\tvar _webglObjects = {};\r\n\tvar _webglObjectsImmediate = [];\r\n\r\n\tvar opaqueObjects = [];\r\n\tvar transparentObjects = [];\r\n\r\n\tvar sprites = [];\r\n\tvar lensFlares = [];\r\n\r\n\t// public properties\r\n\r\n\tthis.domElement = _canvas;\r\n\tthis.context = null;\r\n\r\n\t// clearing\r\n\r\n\tthis.autoClear = true;\r\n\tthis.autoClearColor = true;\r\n\tthis.autoClearDepth = true;\r\n\tthis.autoClearStencil = true;\r\n\r\n\t// scene graph\r\n\r\n\tthis.sortObjects = true;\r\n\r\n\t// physically based shading\r\n\r\n\tthis.gammaFactor = 2.0;\t// for backwards compatibility\r\n\tthis.gammaInput = false;\r\n\tthis.gammaOutput = false;\r\n\r\n\t// shadow map\r\n\r\n\tthis.shadowMapEnabled = false;\r\n\tthis.shadowMapType = THREE.PCFShadowMap;\r\n\tthis.shadowMapCullFace = THREE.CullFaceFront;\r\n\tthis.shadowMapDebug = false;\r\n\tthis.shadowMapCascade = false;\r\n\r\n\t// morphs\r\n\r\n\tthis.maxMorphTargets = 8;\r\n\tthis.maxMorphNormals = 4;\r\n\r\n\t// flags\r\n\r\n\tthis.autoScaleCubemaps = true;\r\n\r\n\t// info\r\n\r\n\tthis.info = {\r\n\r\n\t\tmemory: {\r\n\r\n\t\t\tprograms: 0,\r\n\t\t\tgeometries: 0,\r\n\t\t\ttextures: 0\r\n\r\n\t\t},\r\n\r\n\t\trender: {\r\n\r\n\t\t\tcalls: 0,\r\n\t\t\tvertices: 0,\r\n\t\t\tfaces: 0,\r\n\t\t\tpoints: 0\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// internal properties\r\n\r\n\tvar _this = this,\r\n\r\n\t_programs = [],\r\n\r\n\t// internal state cache\r\n\r\n\t_currentProgram = null,\r\n\t_currentFramebuffer = null,\r\n\t_currentMaterialId = - 1,\r\n\t_currentGeometryProgram = '',\r\n\t_currentCamera = null,\r\n\r\n\t_usedTextureUnits = 0,\r\n\r\n\t_viewportX = 0,\r\n\t_viewportY = 0,\r\n\t_viewportWidth = _canvas.width,\r\n\t_viewportHeight = _canvas.height,\r\n\t_currentWidth = 0,\r\n\t_currentHeight = 0,\r\n\r\n\t// frustum\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\r\n\t // camera matrices cache\r\n\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_vector3 = new THREE.Vector3(),\r\n\r\n\t// light arrays cache\r\n\r\n\t_direction = new THREE.Vector3(),\r\n\r\n\t_lightsNeedUpdate = true,\r\n\r\n\t_lights = {\r\n\r\n\t\tambient: [ 0, 0, 0 ],\r\n\t\tdirectional: { length: 0, colors:[], positions: [] },\r\n\t\tpoint: { length: 0, colors: [], positions: [], distances: [], decays: [] },\r\n\t\tspot: { length: 0, colors: [], positions: [], distances: [], directions: [], anglesCos: [], exponents: [], decays: [] },\r\n\t\themi: { length: 0, skyColors: [], groundColors: [], positions: [] }\r\n\r\n\t};\r\n\r\n\t// initialize\r\n\r\n\tvar _gl;\r\n\r\n\ttry {\r\n\r\n\t\tvar attributes = {\r\n\t\t\talpha: _alpha,\r\n\t\t\tdepth: _depth,\r\n\t\t\tstencil: _stencil,\r\n\t\t\tantialias: _antialias,\r\n\t\t\tpremultipliedAlpha: _premultipliedAlpha,\r\n\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer\r\n\t\t};\r\n\r\n\t\t_gl = _context || _canvas.getContext( 'webgl', attributes ) || _canvas.getContext( 'experimental-webgl', attributes );\r\n\r\n\t\tif ( _gl === null ) {\r\n\r\n\t\t\tif ( _canvas.getContext( 'webgl') !== null ) {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context with your selected attributes.';\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthrow 'Error creating WebGL context.';\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_canvas.addEventListener( 'webglcontextlost', function ( event ) {\r\n\r\n\t\t\tevent.preventDefault();\r\n\r\n\t\t\tresetGLState();\r\n\t\t\tsetDefaultGLState();\r\n\r\n\t\t\t_webglObjects = {};\r\n\r\n\t\t}, false);\r\n\r\n\t} catch ( error ) {\r\n\r\n\t\tTHREE.error( 'THREE.WebGLRenderer: ' + error );\r\n\r\n\t}\r\n\r\n\tvar state = new THREE.WebGLState( _gl, paramThreeToGL );\r\n\r\n\tif ( _gl.getShaderPrecisionFormat === undefined ) {\r\n\r\n\t\t_gl.getShaderPrecisionFormat = function () {\r\n\r\n\t\t\treturn {\r\n\t\t\t\t'rangeMin': 1,\r\n\t\t\t\t'rangeMax': 1,\r\n\t\t\t\t'precision': 1\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar extensions = new THREE.WebGLExtensions( _gl );\r\n\r\n\textensions.get( 'OES_texture_float' );\r\n\textensions.get( 'OES_texture_float_linear' );\r\n\textensions.get( 'OES_texture_half_float' );\r\n\textensions.get( 'OES_texture_half_float_linear' );\r\n\textensions.get( 'OES_standard_derivatives' );\r\n\r\n\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\textensions.get( 'EXT_frag_depth' );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar glClearColor = function ( r, g, b, a ) {\r\n\r\n\t\tif ( _premultipliedAlpha === true ) {\r\n\r\n\t\t\tr *= a; g *= a; b *= a;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.clearColor( r, g, b, a );\r\n\r\n\t};\r\n\r\n\tvar setDefaultGLState = function () {\r\n\r\n\t\t_gl.clearColor( 0, 0, 0, 1 );\r\n\t\t_gl.clearDepth( 1 );\r\n\t\t_gl.clearStencil( 0 );\r\n\r\n\t\t_gl.enable( _gl.DEPTH_TEST );\r\n\t\t_gl.depthFunc( _gl.LEQUAL );\r\n\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\t\t_gl.cullFace( _gl.BACK );\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t_gl.enable( _gl.BLEND );\r\n\t\t_gl.blendEquation( _gl.FUNC_ADD );\r\n\t\t_gl.blendFunc( _gl.SRC_ALPHA, _gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tvar resetGLState = function () {\r\n\r\n\t\t_currentProgram = null;\r\n\t\t_currentCamera = null;\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\tstate.reset();\r\n\r\n\t};\r\n\r\n\tsetDefaultGLState();\r\n\r\n\tthis.context = _gl;\r\n\tthis.state = state;\r\n\r\n\t// GPU capabilities\r\n\r\n\tvar _maxTextures = _gl.getParameter( _gl.MAX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxVertexTextures = _gl.getParameter( _gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS );\r\n\tvar _maxTextureSize = _gl.getParameter( _gl.MAX_TEXTURE_SIZE );\r\n\tvar _maxCubemapSize = _gl.getParameter( _gl.MAX_CUBE_MAP_TEXTURE_SIZE );\r\n\r\n\tvar _supportsVertexTextures = _maxVertexTextures > 0;\r\n\tvar _supportsBoneTextures = _supportsVertexTextures && extensions.get( 'OES_texture_float' );\r\n\r\n\t//\r\n\r\n\tvar _vertexShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _vertexShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.VERTEX_SHADER, _gl.MEDIUM_FLOAT );\r\n\r\n\tvar _fragmentShaderPrecisionHighpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.HIGH_FLOAT );\r\n\tvar _fragmentShaderPrecisionMediumpFloat = _gl.getShaderPrecisionFormat( _gl.FRAGMENT_SHADER, _gl.MEDIUM_FLOAT );\r\n\r\n\tvar getCompressedTextureFormats = ( function () {\r\n\r\n\t\tvar array;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( array !== undefined ) {\r\n\r\n\t\t\t\treturn array;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tarray = [];\r\n\r\n\t\t\tif ( extensions.get( 'WEBGL_compressed_texture_pvrtc' ) || extensions.get( 'WEBGL_compressed_texture_s3tc' ) ) {\r\n\r\n\t\t\t\tvar formats = _gl.getParameter( _gl.COMPRESSED_TEXTURE_FORMATS );\r\n\r\n\t\t\t\tfor ( var i = 0; i < formats.length; i ++ ) {\r\n\r\n\t\t\t\t\tarray.push( formats[ i ] );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn array;\r\n\r\n\t\t};\r\n\r\n\t} )();\r\n\r\n\t// clamp precision to maximum available\r\n\r\n\tvar highpAvailable = _vertexShaderPrecisionHighpFloat.precision > 0 && _fragmentShaderPrecisionHighpFloat.precision > 0;\r\n\tvar mediumpAvailable = _vertexShaderPrecisionMediumpFloat.precision > 0 && _fragmentShaderPrecisionMediumpFloat.precision > 0;\r\n\r\n\tif ( _precision === 'highp' && ! highpAvailable ) {\r\n\r\n\t\tif ( mediumpAvailable ) {\r\n\r\n\t\t\t_precision = 'mediump';\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: highp not supported, using mediump.' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_precision = 'lowp';\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: highp and mediump not supported, using lowp.' );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tif ( _precision === 'mediump' && ! mediumpAvailable ) {\r\n\r\n\t\t_precision = 'lowp';\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: mediump not supported, using lowp.' );\r\n\r\n\t}\r\n\r\n\t// Plugins\r\n\r\n\tvar shadowMapPlugin = new THREE.ShadowMapPlugin( this, lights, _webglObjects, _webglObjectsImmediate );\r\n\r\n\tvar spritePlugin = new THREE.SpritePlugin( this, sprites );\r\n\tvar lensFlarePlugin = new THREE.LensFlarePlugin( this, lensFlares );\r\n\r\n\t// API\r\n\r\n\tthis.getContext = function () {\r\n\r\n\t\treturn _gl;\r\n\r\n\t};\r\n\r\n\tthis.forceContextLoss = function () {\r\n\r\n\t\textensions.get( 'WEBGL_lose_context' ).loseContext();\r\n\r\n\t};\r\n\r\n\tthis.supportsVertexTextures = function () {\r\n\r\n\t\treturn _supportsVertexTextures;\r\n\r\n\t};\r\n\r\n\tthis.supportsFloatTextures = function () {\r\n\r\n\t\treturn extensions.get( 'OES_texture_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsHalfFloatTextures = function () {\r\n\r\n\t\treturn extensions.get( 'OES_texture_half_float' );\r\n\r\n\t};\r\n\r\n\tthis.supportsStandardDerivatives = function () {\r\n\r\n\t\treturn extensions.get( 'OES_standard_derivatives' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTextureS3TC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsCompressedTexturePVRTC = function () {\r\n\r\n\t\treturn extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t};\r\n\r\n\tthis.supportsBlendMinMax = function () {\r\n\r\n\t\treturn extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t};\r\n\r\n\tthis.getMaxAnisotropy = ( function () {\r\n\r\n\t\tvar value;\r\n\r\n\t\treturn function () {\r\n\r\n\t\t\tif ( value !== undefined ) {\r\n\r\n\t\t\t\treturn value;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\t\tvalue = extension !== null ? _gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT ) : 0;\r\n\r\n\t\t\treturn value;\r\n\r\n\t\t}\r\n\r\n\t} )();\r\n\r\n\tthis.getPrecision = function () {\r\n\r\n\t\treturn _precision;\r\n\r\n\t};\r\n\r\n\tthis.getPixelRatio = function () {\r\n\r\n\t\treturn pixelRatio;\r\n\r\n\t};\r\n\r\n\tthis.setPixelRatio = function ( value ) {\r\n\r\n\t\tpixelRatio = value;\r\n\r\n\t};\r\n\r\n\tthis.setSize = function ( width, height, updateStyle ) {\r\n\r\n\t\t_canvas.width = width * pixelRatio;\r\n\t\t_canvas.height = height * pixelRatio;\r\n\r\n\t\tif ( updateStyle !== false ) {\r\n\r\n\t\t\t_canvas.style.width = width + 'px';\r\n\t\t\t_canvas.style.height = height + 'px';\r\n\r\n\t\t}\r\n\r\n\t\tthis.setViewport( 0, 0, width, height );\r\n\r\n\t};\r\n\r\n\tthis.setViewport = function ( x, y, width, height ) {\r\n\r\n\t\t_viewportX = x * pixelRatio;\r\n\t\t_viewportY = y * pixelRatio;\r\n\r\n\t\t_viewportWidth = width * pixelRatio;\r\n\t\t_viewportHeight = height * pixelRatio;\r\n\r\n\t\t_gl.viewport( _viewportX, _viewportY, _viewportWidth, _viewportHeight );\r\n\r\n\t};\r\n\r\n\tthis.setScissor = function ( x, y, width, height ) {\r\n\r\n\t\t_gl.scissor(\r\n\t\t\tx * pixelRatio,\r\n\t\t\ty * pixelRatio,\r\n\t\t\twidth * pixelRatio,\r\n\t\t\theight * pixelRatio\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tthis.enableScissorTest = function ( enable ) {\r\n\r\n\t\tenable ? _gl.enable( _gl.SCISSOR_TEST ) : _gl.disable( _gl.SCISSOR_TEST );\r\n\r\n\t};\r\n\r\n\t// Clearing\r\n\r\n\tthis.getClearColor = function () {\r\n\r\n\t\treturn _clearColor;\r\n\r\n\t};\r\n\r\n\tthis.setClearColor = function ( color, alpha ) {\r\n\r\n\t\t_clearColor.set( color );\r\n\r\n\t\t_clearAlpha = alpha !== undefined ? alpha : 1;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.getClearAlpha = function () {\r\n\r\n\t\treturn _clearAlpha;\r\n\r\n\t};\r\n\r\n\tthis.setClearAlpha = function ( alpha ) {\r\n\r\n\t\t_clearAlpha = alpha;\r\n\r\n\t\tglClearColor( _clearColor.r, _clearColor.g, _clearColor.b, _clearAlpha );\r\n\r\n\t};\r\n\r\n\tthis.clear = function ( color, depth, stencil ) {\r\n\r\n\t\tvar bits = 0;\r\n\r\n\t\tif ( color === undefined || color ) bits |= _gl.COLOR_BUFFER_BIT;\r\n\t\tif ( depth === undefined || depth ) bits |= _gl.DEPTH_BUFFER_BIT;\r\n\t\tif ( stencil === undefined || stencil ) bits |= _gl.STENCIL_BUFFER_BIT;\r\n\r\n\t\t_gl.clear( bits );\r\n\r\n\t};\r\n\r\n\tthis.clearColor = function () {\r\n\r\n\t\t_gl.clear( _gl.COLOR_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearDepth = function () {\r\n\r\n\t\t_gl.clear( _gl.DEPTH_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearStencil = function () {\r\n\r\n\t\t_gl.clear( _gl.STENCIL_BUFFER_BIT );\r\n\r\n\t};\r\n\r\n\tthis.clearTarget = function ( renderTarget, color, depth, stencil ) {\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\t\tthis.clear( color, depth, stencil );\r\n\r\n\t};\r\n\r\n\t// Reset\r\n\r\n\tthis.resetGLState = resetGLState;\r\n\r\n\t// Buffer allocation\r\n\r\n\tfunction createParticleBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createLineBuffers ( geometry ) {\r\n\r\n\t\tgeometry.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometry.__webglLineDistanceBuffer = _gl.createBuffer();\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\tfunction createMeshBuffers ( geometryGroup ) {\r\n\r\n\t\tgeometryGroup.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglTangentBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglColorBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUVBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglUV2Buffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglSkinIndicesBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglSkinWeightsBuffer = _gl.createBuffer();\r\n\r\n\t\tgeometryGroup.__webglFaceBuffer = _gl.createBuffer();\r\n\t\tgeometryGroup.__webglLineBuffer = _gl.createBuffer();\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphTargetsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphTargetsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__webglMorphNormalsBuffers = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglMorphNormalsBuffers.push( _gl.createBuffer() );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries ++;\r\n\r\n\t};\r\n\r\n\t// Events\r\n\r\n\tvar onObjectRemoved = function ( event ) {\r\n\r\n\t\tvar object = event.target;\r\n\r\n\t\tobject.traverse( function ( child ) {\r\n\r\n\t\t\tchild.removeEventListener( 'remove', onObjectRemoved );\r\n\r\n\t\t\tremoveObject( child );\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\r\n\tvar onGeometryDispose = function ( event ) {\r\n\r\n\t\tvar geometry = event.target;\r\n\r\n\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\tdeallocateGeometry( geometry );\r\n\r\n\t};\r\n\r\n\tvar onTextureDispose = function ( event ) {\r\n\r\n\t\tvar texture = event.target;\r\n\r\n\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\tdeallocateTexture( texture );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\r\n\t};\r\n\r\n\tvar onRenderTargetDispose = function ( event ) {\r\n\r\n\t\tvar renderTarget = event.target;\r\n\r\n\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\tdeallocateRenderTarget( renderTarget );\r\n\r\n\t\t_this.info.memory.textures --;\r\n\r\n\t};\r\n\r\n\tvar onMaterialDispose = function ( event ) {\r\n\r\n\t\tvar material = event.target;\r\n\r\n\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tdeallocateMaterial( material );\r\n\r\n\t};\r\n\r\n\t// Buffer deallocation\r\n\r\n\tvar deleteBuffers = function ( geometry ) {\r\n\r\n\t\tvar buffers = [\r\n\t\t\t'__webglVertexBuffer',\r\n\t\t\t'__webglNormalBuffer',\r\n\t\t\t'__webglTangentBuffer',\r\n\t\t\t'__webglColorBuffer',\r\n\t\t\t'__webglUVBuffer',\r\n\t\t\t'__webglUV2Buffer',\r\n\r\n\t\t\t'__webglSkinIndicesBuffer',\r\n\t\t\t'__webglSkinWeightsBuffer',\r\n\r\n\t\t\t'__webglFaceBuffer',\r\n\t\t\t'__webglLineBuffer',\r\n\r\n\t\t\t'__webglLineDistanceBuffer'\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0, l = buffers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar name = buffers[ i ];\r\n\r\n\t\t\tif ( geometry[ name ] !== undefined ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry[ name ] );\r\n\r\n\t\t\t\tdelete geometry[ name ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( geometry.__webglCustomAttributesList !== undefined ) {\r\n\r\n\t\t\tfor ( var name in geometry.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\t_gl.deleteBuffer( geometry.__webglCustomAttributesList[ name ].buffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tdelete geometry.__webglCustomAttributesList;\r\n\r\n\t\t}\r\n\r\n\t\t_this.info.memory.geometries --;\r\n\r\n\t};\r\n\r\n\tvar deallocateGeometry = function ( geometry ) {\r\n\r\n\t\tdelete geometry.__webglInit;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tfor ( var name in geometry.attributes ) {\r\n\r\n\t\t\t\tvar attribute = geometry.attributes[ name ];\r\n\r\n\t\t\t\tif ( attribute.buffer !== undefined ) {\r\n\r\n\t\t\t\t\t_gl.deleteBuffer( attribute.buffer );\r\n\r\n\t\t\t\t\tdelete attribute.buffer;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.memory.geometries --;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tif ( geometryGroupsList !== undefined ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphTargets !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphTargetsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphTargetsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( geometryGroup.numMorphNormals !== undefined ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0, ml = geometryGroup.numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\t\t\t\t_gl.deleteBuffer( geometryGroup.__webglMorphNormalsBuffers[ m ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tdelete geometryGroup.__webglMorphNormalsBuffers;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdeleteBuffers( geometryGroup );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdelete geometryGroups[ geometry.id ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tdeleteBuffers( geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// TOFIX: Workaround for deleted geometry being currently bound\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t};\r\n\r\n\tvar deallocateTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.image && texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t// cube texture\r\n\r\n\t\t\t_gl.deleteTexture( texture.image.__webglTextureCube );\r\n\r\n\t\t\tdelete texture.image.__webglTextureCube;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// 2D texture\r\n\r\n\t\t\tif ( texture.__webglInit === undefined ) return;\r\n\r\n\t\t\t_gl.deleteTexture( texture.__webglTexture );\r\n\r\n\t\t\tdelete texture.__webglTexture;\r\n\t\t\tdelete texture.__webglInit;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tvar deallocateRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tif ( ! renderTarget || renderTarget.__webglTexture === undefined ) return;\r\n\r\n\t\t_gl.deleteTexture( renderTarget.__webglTexture );\r\n\r\n\t\tdelete renderTarget.__webglTexture;\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer[ i ] );\r\n\t\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer[ i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.deleteFramebuffer( renderTarget.__webglFramebuffer );\r\n\t\t\t_gl.deleteRenderbuffer( renderTarget.__webglRenderbuffer );\r\n\r\n\t\t}\r\n\r\n\t\tdelete renderTarget.__webglFramebuffer;\r\n\t\tdelete renderTarget.__webglRenderbuffer;\r\n\r\n\t};\r\n\r\n\tvar deallocateMaterial = function ( material ) {\r\n\r\n\t\tvar program = material.program.program;\r\n\r\n\t\tif ( program === undefined ) return;\r\n\r\n\t\tmaterial.program = undefined;\r\n\r\n\t\t// only deallocate GL program if this was the last use of shared program\r\n\t\t// assumed there is only single copy of any program in the _programs list\r\n\t\t// (that's how it's constructed)\r\n\r\n\t\tvar i, il, programInfo;\r\n\t\tvar deleteProgram = false;\r\n\r\n\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\tif ( programInfo.program === program ) {\r\n\r\n\t\t\t\tprogramInfo.usedTimes --;\r\n\r\n\t\t\t\tif ( programInfo.usedTimes === 0 ) {\r\n\r\n\t\t\t\t\tdeleteProgram = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( deleteProgram === true ) {\r\n\r\n\t\t\t// avoid using array.splice, this is costlier than creating new array from scratch\r\n\r\n\t\t\tvar newPrograms = [];\r\n\r\n\t\t\tfor ( i = 0, il = _programs.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tprogramInfo = _programs[ i ];\r\n\r\n\t\t\t\tif ( programInfo.program !== program ) {\r\n\r\n\t\t\t\t\tnewPrograms.push( programInfo );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_programs = newPrograms;\r\n\r\n\t\t\t_gl.deleteProgram( program );\r\n\r\n\t\t\t_this.info.memory.programs --;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer initialization\r\n\r\n\tfunction initCustomAttributes ( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometry.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\tvar attribute = material.attributes[ name ];\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\tattribute.needsUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometry.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction initParticleBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\r\n\t\tgeometry.__webglParticleCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initLineBuffers ( geometry, object ) {\r\n\r\n\t\tvar nvertices = geometry.vertices.length;\r\n\r\n\t\tgeometry.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometry.__lineDistanceArray = new Float32Array( nvertices * 1 );\r\n\r\n\t\tgeometry.__webglLineCount = nvertices;\r\n\r\n\t\tinitCustomAttributes( object );\r\n\r\n\t};\r\n\r\n\tfunction initMeshBuffers ( geometryGroup, object ) {\r\n\r\n\t\tvar geometry = object.geometry,\r\n\t\t\tfaces3 = geometryGroup.faces3,\r\n\r\n\t\t\tnvertices = faces3.length * 3,\r\n\t\t\tntris     = faces3.length * 1,\r\n\t\t\tnlines    = faces3.length * 3,\r\n\r\n\t\t\tmaterial = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\tgeometryGroup.__vertexArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__normalArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__colorArray = new Float32Array( nvertices * 3 );\r\n\t\tgeometryGroup.__uvArray = new Float32Array( nvertices * 2 );\r\n\r\n\t\tif ( geometry.faceVertexUvs.length > 1 ) {\r\n\r\n\t\t\tgeometryGroup.__uv2Array = new Float32Array( nvertices * 2 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( geometry.hasTangents ) {\r\n\r\n\t\t\tgeometryGroup.__tangentArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.geometry.skinWeights.length && object.geometry.skinIndices.length ) {\r\n\r\n\t\t\tgeometryGroup.__skinIndexArray = new Float32Array( nvertices * 4 );\r\n\t\t\tgeometryGroup.__skinWeightArray = new Float32Array( nvertices * 4 );\r\n\r\n\t\t}\r\n\r\n\t\tvar UintArray = extensions.get( 'OES_element_index_uint' ) !== null && ntris > 21845 ? Uint32Array : Uint16Array; // 65535 / 3\r\n\r\n\t\tgeometryGroup.__typeArray = UintArray;\r\n\t\tgeometryGroup.__faceArray = new UintArray( ntris * 3 );\r\n\t\tgeometryGroup.__lineArray = new UintArray( nlines * 2 );\r\n\r\n\t\tvar numMorphTargets = geometryGroup.numMorphTargets;\r\n\r\n\t\tif ( numMorphTargets ) {\r\n\r\n\t\t\tgeometryGroup.__morphTargetsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphTargetsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar numMorphNormals = geometryGroup.numMorphNormals;\r\n\r\n\t\tif ( numMorphNormals ) {\r\n\r\n\t\t\tgeometryGroup.__morphNormalsArrays = [];\r\n\r\n\t\t\tfor ( var m = 0, ml = numMorphNormals; m < ml; m ++ ) {\r\n\r\n\t\t\t\tgeometryGroup.__morphNormalsArrays.push( new Float32Array( nvertices * 3 ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__webglFaceCount = ntris * 3;\r\n\t\tgeometryGroup.__webglLineCount = nlines * 2;\r\n\r\n\r\n\t\t// custom attributes\r\n\r\n\t\tif ( material.attributes ) {\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList === undefined ) {\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList = [];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\t\t// Do a shallow copy of the attribute object so different geometryGroup chunks use different\r\n\t\t\t\t// attribute buffers which are correctly indexed in the setMeshBuffers function\r\n\r\n\t\t\t\tvar originalAttribute = material.attributes[ name ];\r\n\r\n\t\t\t\tvar attribute = {};\r\n\r\n\t\t\t\tfor ( var property in originalAttribute ) {\r\n\r\n\t\t\t\t\tattribute[ property ] = originalAttribute[ property ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( ! attribute.__webglInitialized || attribute.createUniqueBuffers ) {\r\n\r\n\t\t\t\t\tattribute.__webglInitialized = true;\r\n\r\n\t\t\t\t\tvar size = 1;   // \"f\" and \"i\"\r\n\r\n\t\t\t\t\tif ( attribute.type === 'v2' ) size = 2;\r\n\t\t\t\t\telse if ( attribute.type === 'v3' ) size = 3;\r\n\t\t\t\t\telse if ( attribute.type === 'v4' ) size = 4;\r\n\t\t\t\t\telse if ( attribute.type === 'c'  ) size = 3;\r\n\r\n\t\t\t\t\tattribute.size = size;\r\n\r\n\t\t\t\t\tattribute.array = new Float32Array( nvertices * size );\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\tattribute.buffer.belongsToAttribute = name;\r\n\r\n\t\t\t\t\toriginalAttribute.needsUpdate = true;\r\n\t\t\t\t\tattribute.__original = originalAttribute;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tgeometryGroup.__webglCustomAttributesList.push( attribute );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometryGroup.__inittedArrays = true;\r\n\r\n\t};\r\n\r\n\tfunction getBufferMaterial( object, geometryGroup ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t ? object.material.materials[ geometryGroup.materialIndex ]\r\n\t\t\t : object.material;\r\n\r\n\t}\r\n\r\n\tfunction materialNeedsFaceNormals ( material ) {\r\n\r\n\t\treturn material instanceof THREE.MeshPhongMaterial === false && material.shading === THREE.FlatShading;\r\n\r\n\t}\r\n\r\n\t// Buffer setting\r\n\r\n\tfunction setParticleBuffers ( geometry, hint, object ) {\r\n\r\n\t\tvar v, c, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tvl = vertices.length,\r\n\r\n\t\tcolors = geometry.colors,\r\n\t\tcl = colors.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\t\ti, il,\r\n\t\tca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined ||  customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]      = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setLineBuffers ( geometry, hint ) {\r\n\r\n\t\tvar v, c, d, vertex, offset, color,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tcolors = geometry.colors,\r\n\t\tlineDistances = geometry.lineDistances,\r\n\r\n\t\tvl = vertices.length,\r\n\t\tcl = colors.length,\r\n\t\tdl = lineDistances.length,\r\n\r\n\t\tvertexArray = geometry.__vertexArray,\r\n\t\tcolorArray = geometry.__colorArray,\r\n\t\tlineDistanceArray = geometry.__lineDistanceArray,\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyLineDistances = geometry.lineDistancesNeedUpdate,\r\n\r\n\t\tcustomAttributes = geometry.__webglCustomAttributesList,\r\n\r\n\t\ti, il,\r\n\t\tca, cal, value,\r\n\t\tcustomAttribute;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( v = 0; v < vl; v ++ ) {\r\n\r\n\t\t\t\tvertex = vertices[ v ];\r\n\r\n\t\t\t\toffset = v * 3;\r\n\r\n\t\t\t\tvertexArray[ offset ]     = vertex.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = vertex.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( c = 0; c < cl; c ++ ) {\r\n\r\n\t\t\t\tcolor = colors[ c ];\r\n\r\n\t\t\t\toffset = c * 3;\r\n\r\n\t\t\t\tcolorArray[ offset ]     = color.r;\r\n\t\t\t\tcolorArray[ offset + 1 ] = color.g;\r\n\t\t\t\tcolorArray[ offset + 2 ] = color.b;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyLineDistances ) {\r\n\r\n\t\t\tfor ( d = 0; d < dl; d ++ ) {\r\n\r\n\t\t\t\tlineDistanceArray[ d ] = lineDistances[ d ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometry.__webglLineDistanceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, lineDistanceArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( customAttribute.needsUpdate && ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) ) {\r\n\r\n\t\t\t\t\toffset = 0;\r\n\r\n\t\t\t\t\tcal = customAttribute.value.length;\r\n\r\n\t\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ ca ] = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\r\n\t\t\t\t\t\t\toffset += 2;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.r;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.g;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.b;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset ]   = value.x;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1 ] = value.y;\r\n\t\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2 ] = value.z;\r\n\r\n\t\t\t\t\t\t\t\toffset += 3;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\t\tfor ( ca = 0; ca < cal; ca ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ ca ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset ]    = value.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 1  ] = value.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 2  ] = value.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset + 3  ] = value.w;\r\n\r\n\t\t\t\t\t\t\toffset += 4;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t\t\tcustomAttribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMeshBuffers( geometryGroup, object, hint, dispose, material ) {\r\n\r\n\t\tif ( ! geometryGroup.__inittedArrays ) {\r\n\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar needsFaceNormals = materialNeedsFaceNormals( material );\r\n\r\n\t\tvar f, fl, fi, face,\r\n\t\tvertexNormals, faceNormal,\r\n\t\tvertexColors, faceColor,\r\n\t\tvertexTangents,\r\n\t\tuv, uv2, v1, v2, v3, t1, t2, t3, n1, n2, n3,\r\n\t\tc1, c2, c3,\r\n\t\tsw1, sw2, sw3,\r\n\t\tsi1, si2, si3,\r\n\t\ti, il,\r\n\t\tvn, uvi, uv2i,\r\n\t\tvk, vkl, vka,\r\n\t\tnka, chf, faceVertexNormals,\r\n\r\n\t\tvertexIndex = 0,\r\n\r\n\t\toffset = 0,\r\n\t\toffset_uv = 0,\r\n\t\toffset_uv2 = 0,\r\n\t\toffset_face = 0,\r\n\t\toffset_normal = 0,\r\n\t\toffset_tangent = 0,\r\n\t\toffset_line = 0,\r\n\t\toffset_color = 0,\r\n\t\toffset_skin = 0,\r\n\t\toffset_morphTarget = 0,\r\n\t\toffset_custom = 0,\r\n\r\n\t\tvalue,\r\n\r\n\t\tvertexArray = geometryGroup.__vertexArray,\r\n\t\tuvArray = geometryGroup.__uvArray,\r\n\t\tuv2Array = geometryGroup.__uv2Array,\r\n\t\tnormalArray = geometryGroup.__normalArray,\r\n\t\ttangentArray = geometryGroup.__tangentArray,\r\n\t\tcolorArray = geometryGroup.__colorArray,\r\n\r\n\t\tskinIndexArray = geometryGroup.__skinIndexArray,\r\n\t\tskinWeightArray = geometryGroup.__skinWeightArray,\r\n\r\n\t\tmorphTargetsArrays = geometryGroup.__morphTargetsArrays,\r\n\t\tmorphNormalsArrays = geometryGroup.__morphNormalsArrays,\r\n\r\n\t\tcustomAttributes = geometryGroup.__webglCustomAttributesList,\r\n\t\tcustomAttribute,\r\n\r\n\t\tfaceArray = geometryGroup.__faceArray,\r\n\t\tlineArray = geometryGroup.__lineArray,\r\n\r\n\t\tgeometry = object.geometry, // this is shared for all chunks\r\n\r\n\t\tdirtyVertices = geometry.verticesNeedUpdate,\r\n\t\tdirtyElements = geometry.elementsNeedUpdate,\r\n\t\tdirtyUvs = geometry.uvsNeedUpdate,\r\n\t\tdirtyNormals = geometry.normalsNeedUpdate,\r\n\t\tdirtyTangents = geometry.tangentsNeedUpdate,\r\n\t\tdirtyColors = geometry.colorsNeedUpdate,\r\n\t\tdirtyMorphTargets = geometry.morphTargetsNeedUpdate,\r\n\r\n\t\tvertices = geometry.vertices,\r\n\t\tchunk_faces3 = geometryGroup.faces3,\r\n\t\tobj_faces = geometry.faces,\r\n\r\n\t\tobj_uvs  = geometry.faceVertexUvs[ 0 ],\r\n\t\tobj_uvs2 = geometry.faceVertexUvs[ 1 ],\r\n\r\n\t\tobj_skinIndices = geometry.skinIndices,\r\n\t\tobj_skinWeights = geometry.skinWeights,\r\n\r\n\t\tmorphTargets = geometry.morphTargets,\r\n\t\tmorphNormals = geometry.morphNormals;\r\n\r\n\t\tif ( dirtyVertices ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tv1 = vertices[ face.a ];\r\n\t\t\t\tv2 = vertices[ face.b ];\r\n\t\t\t\tv3 = vertices[ face.c ];\r\n\r\n\t\t\t\tvertexArray[ offset ]     = v1.x;\r\n\t\t\t\tvertexArray[ offset + 1 ] = v1.y;\r\n\t\t\t\tvertexArray[ offset + 2 ] = v1.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 3 ] = v2.x;\r\n\t\t\t\tvertexArray[ offset + 4 ] = v2.y;\r\n\t\t\t\tvertexArray[ offset + 5 ] = v2.z;\r\n\r\n\t\t\t\tvertexArray[ offset + 6 ] = v3.x;\r\n\t\t\t\tvertexArray[ offset + 7 ] = v3.y;\r\n\t\t\t\tvertexArray[ offset + 8 ] = v3.z;\r\n\r\n\t\t\t\toffset += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, vertexArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyMorphTargets ) {\r\n\r\n\t\t\tfor ( vk = 0, vkl = morphTargets.length; vk < vkl; vk ++ ) {\r\n\r\n\t\t\t\toffset_morphTarget = 0;\r\n\r\n\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\tchf = chunk_faces3[ f ];\r\n\t\t\t\t\tface = obj_faces[ chf ];\r\n\r\n\t\t\t\t\t// morph positions\r\n\r\n\t\t\t\t\tv1 = morphTargets[ vk ].vertices[ face.a ];\r\n\t\t\t\t\tv2 = morphTargets[ vk ].vertices[ face.b ];\r\n\t\t\t\t\tv3 = morphTargets[ vk ].vertices[ face.c ];\r\n\r\n\t\t\t\t\tvka = morphTargetsArrays[ vk ];\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget ]     = v1.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 1 ] = v1.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 2 ] = v1.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 3 ] = v2.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 4 ] = v2.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 5 ] = v2.z;\r\n\r\n\t\t\t\t\tvka[ offset_morphTarget + 6 ] = v3.x;\r\n\t\t\t\t\tvka[ offset_morphTarget + 7 ] = v3.y;\r\n\t\t\t\t\tvka[ offset_morphTarget + 8 ] = v3.z;\r\n\r\n\t\t\t\t\t// morph normals\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\tif ( needsFaceNormals ) {\r\n\r\n\t\t\t\t\t\t\tn1 = morphNormals[ vk ].faceNormals[ chf ];\r\n\t\t\t\t\t\t\tn2 = n1;\r\n\t\t\t\t\t\t\tn3 = n1;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tfaceVertexNormals = morphNormals[ vk ].vertexNormals[ chf ];\r\n\r\n\t\t\t\t\t\t\tn1 = faceVertexNormals.a;\r\n\t\t\t\t\t\t\tn2 = faceVertexNormals.b;\r\n\t\t\t\t\t\t\tn3 = faceVertexNormals.c;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tnka = morphNormalsArrays[ vk ];\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget ]     = n1.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 1 ] = n1.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 2 ] = n1.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 3 ] = n2.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 4 ] = n2.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 5 ] = n2.z;\r\n\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 6 ] = n3.x;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 7 ] = n3.y;\r\n\t\t\t\t\t\tnka[ offset_morphTarget + 8 ] = n3.z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t//\r\n\r\n\t\t\t\t\toffset_morphTarget += 9;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ vk ] );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphTargetsArrays[ vk ], hint );\r\n\r\n\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ vk ] );\r\n\t\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, morphNormalsArrays[ vk ], hint );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( obj_skinWeights.length ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t// weights\r\n\r\n\t\t\t\tsw1 = obj_skinWeights[ face.a ];\r\n\t\t\t\tsw2 = obj_skinWeights[ face.b ];\r\n\t\t\t\tsw3 = obj_skinWeights[ face.c ];\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin ]     = sw1.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 1 ] = sw1.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 2 ] = sw1.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 3 ] = sw1.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 4 ] = sw2.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 5 ] = sw2.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 6 ] = sw2.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 7 ] = sw2.w;\r\n\r\n\t\t\t\tskinWeightArray[ offset_skin + 8 ]  = sw3.x;\r\n\t\t\t\tskinWeightArray[ offset_skin + 9 ]  = sw3.y;\r\n\t\t\t\tskinWeightArray[ offset_skin + 10 ] = sw3.z;\r\n\t\t\t\tskinWeightArray[ offset_skin + 11 ] = sw3.w;\r\n\r\n\t\t\t\t// indices\r\n\r\n\t\t\t\tsi1 = obj_skinIndices[ face.a ];\r\n\t\t\t\tsi2 = obj_skinIndices[ face.b ];\r\n\t\t\t\tsi3 = obj_skinIndices[ face.c ];\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin ]     = si1.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 1 ] = si1.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 2 ] = si1.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 3 ] = si1.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 4 ] = si2.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 5 ] = si2.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 6 ] = si2.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 7 ] = si2.w;\r\n\r\n\t\t\t\tskinIndexArray[ offset_skin + 8 ]  = si3.x;\r\n\t\t\t\tskinIndexArray[ offset_skin + 9 ]  = si3.y;\r\n\t\t\t\tskinIndexArray[ offset_skin + 10 ] = si3.z;\r\n\t\t\t\tskinIndexArray[ offset_skin + 11 ] = si3.w;\r\n\r\n\t\t\t\toffset_skin += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_skin > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinIndexArray, hint );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, skinWeightArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyColors ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexColors = face.vertexColors;\r\n\t\t\t\tfaceColor = face.color;\r\n\r\n\t\t\t\tif ( vertexColors.length === 3 && material.vertexColors === THREE.VertexColors ) {\r\n\r\n\t\t\t\t\tc1 = vertexColors[ 0 ];\r\n\t\t\t\t\tc2 = vertexColors[ 1 ];\r\n\t\t\t\t\tc3 = vertexColors[ 2 ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tc1 = faceColor;\r\n\t\t\t\t\tc2 = faceColor;\r\n\t\t\t\t\tc3 = faceColor;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tcolorArray[ offset_color ]     = c1.r;\r\n\t\t\t\tcolorArray[ offset_color + 1 ] = c1.g;\r\n\t\t\t\tcolorArray[ offset_color + 2 ] = c1.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 3 ] = c2.r;\r\n\t\t\t\tcolorArray[ offset_color + 4 ] = c2.g;\r\n\t\t\t\tcolorArray[ offset_color + 5 ] = c2.b;\r\n\r\n\t\t\t\tcolorArray[ offset_color + 6 ] = c3.r;\r\n\t\t\t\tcolorArray[ offset_color + 7 ] = c3.g;\r\n\t\t\t\tcolorArray[ offset_color + 8 ] = c3.b;\r\n\r\n\t\t\t\toffset_color += 9;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_color > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, colorArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyTangents && geometry.hasTangents ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexTangents = face.vertexTangents;\r\n\r\n\t\t\t\tt1 = vertexTangents[ 0 ];\r\n\t\t\t\tt2 = vertexTangents[ 1 ];\r\n\t\t\t\tt3 = vertexTangents[ 2 ];\r\n\r\n\t\t\t\ttangentArray[ offset_tangent ]     = t1.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 1 ] = t1.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 2 ] = t1.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 3 ] = t1.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 4 ] = t2.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 5 ] = t2.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 6 ] = t2.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 7 ] = t2.w;\r\n\r\n\t\t\t\ttangentArray[ offset_tangent + 8 ]  = t3.x;\r\n\t\t\t\ttangentArray[ offset_tangent + 9 ]  = t3.y;\r\n\t\t\t\ttangentArray[ offset_tangent + 10 ] = t3.z;\r\n\t\t\t\ttangentArray[ offset_tangent + 11 ] = t3.w;\r\n\r\n\t\t\t\toffset_tangent += 12;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, tangentArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyNormals ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\tvertexNormals = face.vertexNormals;\r\n\t\t\t\tfaceNormal = face.normal;\r\n\r\n\t\t\t\tif ( vertexNormals.length === 3 && needsFaceNormals === false ) {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tvn = vertexNormals[ i ];\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = vn.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = vn.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = vn.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\t\tnormalArray[ offset_normal ]     = faceNormal.x;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 1 ] = faceNormal.y;\r\n\t\t\t\t\t\tnormalArray[ offset_normal + 2 ] = faceNormal.z;\r\n\r\n\t\t\t\t\t\toffset_normal += 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, normalArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv = obj_uvs[ fi ];\r\n\r\n\t\t\t\tif ( uv === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuvi = uv[ i ];\r\n\r\n\t\t\t\t\tuvArray[ offset_uv ]     = uvi.x;\r\n\t\t\t\t\tuvArray[ offset_uv + 1 ] = uvi.y;\r\n\r\n\t\t\t\t\toffset_uv += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uvArray, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyUvs && obj_uvs2 ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfi = chunk_faces3[ f ];\r\n\r\n\t\t\t\tuv2 = obj_uvs2[ fi ];\r\n\r\n\t\t\t\tif ( uv2 === undefined ) continue;\r\n\r\n\t\t\t\tfor ( i = 0; i < 3; i ++ ) {\r\n\r\n\t\t\t\t\tuv2i = uv2[ i ];\r\n\r\n\t\t\t\t\tuv2Array[ offset_uv2 ]     = uv2i.x;\r\n\t\t\t\t\tuv2Array[ offset_uv2 + 1 ] = uv2i.y;\r\n\r\n\t\t\t\t\toffset_uv2 += 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( offset_uv2 > 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, uv2Array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dirtyElements ) {\r\n\r\n\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\tfaceArray[ offset_face ]   = vertexIndex;\r\n\t\t\t\tfaceArray[ offset_face + 1 ] = vertexIndex + 1;\r\n\t\t\t\tfaceArray[ offset_face + 2 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_face += 3;\r\n\r\n\t\t\t\tlineArray[ offset_line ]     = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 1 ] = vertexIndex + 1;\r\n\r\n\t\t\t\tlineArray[ offset_line + 2 ] = vertexIndex;\r\n\t\t\t\tlineArray[ offset_line + 3 ] = vertexIndex + 2;\r\n\r\n\t\t\t\tlineArray[ offset_line + 4 ] = vertexIndex + 1;\r\n\t\t\t\tlineArray[ offset_line + 5 ] = vertexIndex + 2;\r\n\r\n\t\t\t\toffset_line += 6;\r\n\r\n\t\t\t\tvertexIndex += 3;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, faceArray, hint );\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t_gl.bufferData( _gl.ELEMENT_ARRAY_BUFFER, lineArray, hint );\r\n\r\n\t\t}\r\n\r\n\t\tif ( customAttributes ) {\r\n\r\n\t\t\tfor ( i = 0, il = customAttributes.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tcustomAttribute = customAttributes[ i ];\r\n\r\n\t\t\t\tif ( ! customAttribute.__original.needsUpdate ) continue;\r\n\r\n\t\t\t\toffset_custom = 0;\r\n\r\n\t\t\t\tif ( customAttribute.size === 1 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = value;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = value;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 3;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 2 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2.y;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v3.y;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 6;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 3 ) {\r\n\r\n\t\t\t\t\tvar pp;\r\n\r\n\t\t\t\t\tif ( customAttribute.type === 'c' ) {\r\n\r\n\t\t\t\t\t\tpp = [ 'r', 'g', 'b' ];\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tpp = [ 'x', 'y', 'z' ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom ]     = v1[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1 ] = v1[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2 ] = v1[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3 ] = v2[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4 ] = v2[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5 ] = v2[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6 ] = v3[ pp[ 0 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7 ] = v3[ pp[ 1 ] ];\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8 ] = v3[ pp[ 2 ] ];\r\n\r\n\t\t\t\t\t\t\toffset_custom += 9;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else if ( customAttribute.size === 4 ) {\r\n\r\n\t\t\t\t\tif ( customAttribute.boundTo === undefined || customAttribute.boundTo === 'vertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tface = obj_faces[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = customAttribute.value[ face.a ];\r\n\t\t\t\t\t\t\tv2 = customAttribute.value[ face.b ];\r\n\t\t\t\t\t\t\tv3 = customAttribute.value[ face.c ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faces' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value;\r\n\t\t\t\t\t\t\tv2 = value;\r\n\t\t\t\t\t\t\tv3 = value;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( customAttribute.boundTo === 'faceVertices' ) {\r\n\r\n\t\t\t\t\t\tfor ( f = 0, fl = chunk_faces3.length; f < fl; f ++ ) {\r\n\r\n\t\t\t\t\t\t\tvalue = customAttribute.value[ chunk_faces3[ f ] ];\r\n\r\n\t\t\t\t\t\t\tv1 = value[ 0 ];\r\n\t\t\t\t\t\t\tv2 = value[ 1 ];\r\n\t\t\t\t\t\t\tv3 = value[ 2 ];\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom  ]   = v1.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 1  ] = v1.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 2  ] = v1.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 3  ] = v1.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 4  ] = v2.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 5  ] = v2.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 6  ] = v2.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 7  ] = v2.w;\r\n\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 8  ] = v3.x;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 9  ] = v3.y;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 10 ] = v3.z;\r\n\t\t\t\t\t\t\tcustomAttribute.array[ offset_custom + 11 ] = v3.w;\r\n\r\n\t\t\t\t\t\t\toffset_custom += 12;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, customAttribute.buffer );\r\n\t\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, customAttribute.array, hint );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( dispose ) {\r\n\r\n\t\t\tdelete geometryGroup.__inittedArrays;\r\n\t\t\tdelete geometryGroup.__colorArray;\r\n\t\t\tdelete geometryGroup.__normalArray;\r\n\t\t\tdelete geometryGroup.__tangentArray;\r\n\t\t\tdelete geometryGroup.__uvArray;\r\n\t\t\tdelete geometryGroup.__uv2Array;\r\n\t\t\tdelete geometryGroup.__faceArray;\r\n\t\t\tdelete geometryGroup.__vertexArray;\r\n\t\t\tdelete geometryGroup.__lineArray;\r\n\t\t\tdelete geometryGroup.__skinIndexArray;\r\n\t\t\tdelete geometryGroup.__skinWeightArray;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\t// Buffer rendering\r\n\r\n\tthis.renderBufferImmediate = function ( object, program, material ) {\r\n\r\n\t\tstate.initAttributes();\r\n\r\n\t\tif ( object.hasPositions && ! object.__webglVertexBuffer ) object.__webglVertexBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasNormals && ! object.__webglNormalBuffer ) object.__webglNormalBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasUvs && ! object.__webglUvBuffer ) object.__webglUvBuffer = _gl.createBuffer();\r\n\t\tif ( object.hasColors && ! object.__webglColorBuffer ) object.__webglColorBuffer = _gl.createBuffer();\r\n\r\n\t\tif ( object.hasPositions ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglVertexBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasNormals ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglNormalBuffer );\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial === false &&\r\n\t\t\t\t   material.shading === THREE.FlatShading ) {\r\n\r\n\t\t\t\tvar nx, ny, nz,\r\n\t\t\t\t\tnax, nbx, ncx, nay, nby, ncy, naz, nbz, ncz,\r\n\t\t\t\t\tnormalArray,\r\n\t\t\t\t\ti, il = object.count * 3;\r\n\r\n\t\t\t\tfor ( i = 0; i < il; i += 9 ) {\r\n\r\n\t\t\t\t\tnormalArray = object.normalArray;\r\n\r\n\t\t\t\t\tnax  = normalArray[ i ];\r\n\t\t\t\t\tnay  = normalArray[ i + 1 ];\r\n\t\t\t\t\tnaz  = normalArray[ i + 2 ];\r\n\r\n\t\t\t\t\tnbx  = normalArray[ i + 3 ];\r\n\t\t\t\t\tnby  = normalArray[ i + 4 ];\r\n\t\t\t\t\tnbz  = normalArray[ i + 5 ];\r\n\r\n\t\t\t\t\tncx  = normalArray[ i + 6 ];\r\n\t\t\t\t\tncy  = normalArray[ i + 7 ];\r\n\t\t\t\t\tncz  = normalArray[ i + 8 ];\r\n\r\n\t\t\t\t\tnx = ( nax + nbx + ncx ) / 3;\r\n\t\t\t\t\tny = ( nay + nby + ncy ) / 3;\r\n\t\t\t\t\tnz = ( naz + nbz + ncz ) / 3;\r\n\r\n\t\t\t\t\tnormalArray[ i ]   = nx;\r\n\t\t\t\t\tnormalArray[ i + 1 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 2 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 3 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 4 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 5 ] = nz;\r\n\r\n\t\t\t\t\tnormalArray[ i + 6 ] = nx;\r\n\t\t\t\t\tnormalArray[ i + 7 ] = ny;\r\n\t\t\t\t\tnormalArray[ i + 8 ] = nz;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.normal );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasUvs && material.map ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglUvBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.uv );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.hasColors && material.vertexColors !== THREE.NoColors ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, object.__webglColorBuffer );\r\n\t\t\t_gl.bufferData( _gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\tstate.enableAttribute( program.attributes.color );\r\n\r\n\t\t\t_gl.vertexAttribPointer( program.attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t_gl.drawArrays( _gl.TRIANGLES, 0, object.count );\r\n\r\n\t\tobject.count = 0;\r\n\r\n\t};\r\n\r\n\tfunction setupVertexAttributes( material, program, geometry, startIndex ) {\r\n\r\n\t\tvar geometryAttributes = geometry.attributes;\r\n\r\n\t\tvar programAttributes = program.attributes;\r\n\t\tvar programAttributesKeys = program.attributesKeys;\r\n\r\n\t\tfor ( var i = 0, l = programAttributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar key = programAttributesKeys[ i ];\r\n\t\t\tvar programAttribute = programAttributes[ key ];\r\n\r\n\t\t\tif ( programAttribute >= 0 ) {\r\n\r\n\t\t\t\tvar geometryAttribute = geometryAttributes[ key ];\r\n\r\n\t\t\t\tif ( geometryAttribute !== undefined ) {\r\n\r\n\t\t\t\t\tvar size = geometryAttribute.itemSize;\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryAttribute.buffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( programAttribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, _gl.FLOAT, false, 0, startIndex * size * 4 ); // 4 bytes per Float32\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\t\t\t\t\tif ( material.defaultAttributeValues[ key ].length === 2 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t} else if ( material.defaultAttributeValues[ key ].length === 3 ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, material.defaultAttributeValues[ key ] );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t}\r\n\r\n\tthis.renderBufferDirect = function ( camera, lights, fog, material, geometry, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = 'direct_' + geometry.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar mode = material.wireframe === true ? _gl.LINES : _gl.TRIANGLES;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed triangles\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\t\t\t\t\t_this.info.render.faces += index.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tupdateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed triangles\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\t\t\t\t\t\t_this.info.render.faces += offsets[ i ].count / 3;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed triangles\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes[ 'position' ];\r\n\r\n\t\t\t\t// render non-indexed triangles\r\n\r\n\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / position.itemSize );\r\n\r\n\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t_this.info.render.vertices += position.array.length / position.itemSize;\r\n\t\t\t\t_this.info.render.faces += position.array.length / ( 3 * position.itemSize );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t// render particles\r\n\r\n\t\t\tvar mode = _gl.POINTS;\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed points\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array && extensions.get( 'OES_element_index_uint' ) ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0);\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += index.array.length;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed points\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed points\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.points += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.points += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tstate.setLineWidth( material.linewidth * pixelRatio );\r\n\r\n\t\t\tvar index = geometry.attributes.index;\r\n\r\n\t\t\tif ( index ) {\r\n\r\n\t\t\t\t// indexed lines\r\n\r\n\t\t\t\tvar type, size;\r\n\r\n\t\t\t\tif ( index.array instanceof Uint32Array ) {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_INT;\r\n\t\t\t\t\tsize = 4;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\ttype = _gl.UNSIGNED_SHORT;\r\n\t\t\t\t\tsize = 2;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.drawElements( mode, index.array.length, type, 0 ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += index.array.length; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t// if there is more than 1 chunk\r\n\t\t\t\t\t// must set attribute pointers to use new offsets for each chunk\r\n\t\t\t\t\t// even if geometry and materials didn't change\r\n\r\n\t\t\t\t\tif ( offsets.length > 1 ) updateBuffers = true;\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar startIndex = offsets[ i ].index;\r\n\r\n\t\t\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\t\t\tsetupVertexAttributes( material, program, geometry, startIndex );\r\n\t\t\t\t\t\t\t_gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, index.buffer );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t// render indexed lines\r\n\r\n\t\t\t\t\t\t_gl.drawElements( mode, offsets[ i ].count, type, offsets[ i ].start * size ); // 2 bytes per Uint16Array\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count; // not really true, here vertices can be shared\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// non-indexed lines\r\n\r\n\t\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t\tsetupVertexAttributes( material, program, geometry, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar position = geometry.attributes.position;\r\n\t\t\t\tvar offsets = geometry.offsets;\r\n\r\n\t\t\t\tif ( offsets.length === 0 ) {\r\n\r\n\t\t\t\t\t_gl.drawArrays( mode, 0, position.array.length / 3 );\r\n\r\n\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t_this.info.render.vertices += position.array.length / 3;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = offsets.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\t_gl.drawArrays( mode, offsets[ i ].index, offsets[ i ].count );\r\n\r\n\t\t\t\t\t\t_this.info.render.calls ++;\r\n\t\t\t\t\t\t_this.info.render.vertices += offsets[ i ].count;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.renderBuffer = function ( camera, lights, fog, material, geometryGroup, object ) {\r\n\r\n\t\tif ( material.visible === false ) return;\r\n\r\n\t\tupdateObject( object );\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tvar updateBuffers = false,\r\n\t\t\twireframeBit = material.wireframe ? 1 : 0,\r\n\t\t\tgeometryProgram = geometryGroup.id + '_' + program.id + '_' + wireframeBit;\r\n\r\n\t\tif ( geometryProgram !== _currentGeometryProgram ) {\r\n\r\n\t\t\t_currentGeometryProgram = geometryProgram;\r\n\t\t\tupdateBuffers = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\tstate.initAttributes();\r\n\r\n\t\t}\r\n\r\n\t\t// vertices\r\n\r\n\t\tif ( ! material.morphTargets && attributes.position >= 0 ) {\r\n\r\n\t\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( object.morphTargetBase ) {\r\n\r\n\t\t\t\tsetupMorphTargets( material, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\r\n\t\tif ( updateBuffers ) {\r\n\r\n\t\t\t// custom attributes\r\n\r\n\t\t\t// Use the per-geometryGroup custom attribute arrays which are setup in initMeshBuffers\r\n\r\n\t\t\tif ( geometryGroup.__webglCustomAttributesList ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = geometryGroup.__webglCustomAttributesList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tvar attribute = geometryGroup.__webglCustomAttributesList[ i ];\r\n\r\n\t\t\t\t\tif ( attributes[ attribute.buffer.belongsToAttribute ] >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, attribute.buffer );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attributes[ attribute.buffer.belongsToAttribute ] );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ attribute.buffer.belongsToAttribute ], attribute.size, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// colors\r\n\r\n\t\t\tif ( attributes.color >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.colors.length > 0 || object.geometry.faces.length > 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglColorBuffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.color );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.color, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib3fv( attributes.color, material.defaultAttributeValues.color );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// normals\r\n\r\n\t\t\tif ( attributes.normal >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglNormalBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.normal );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.normal, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// tangents\r\n\r\n\t\t\tif ( attributes.tangent >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglTangentBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.tangent );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.tangent, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// uvs\r\n\r\n\t\t\tif ( attributes.uv >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 0 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUVBuffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.uv );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv, material.defaultAttributeValues.uv );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( attributes.uv2 >= 0 ) {\r\n\r\n\t\t\t\tif ( object.geometry.faceVertexUvs[ 1 ] ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglUV2Buffer );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attributes.uv2 );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes.uv2, 2, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t} else if ( material.defaultAttributeValues !== undefined ) {\r\n\r\n\r\n\t\t\t\t\t_gl.vertexAttrib2fv( attributes.uv2, material.defaultAttributeValues.uv2 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.skinning &&\r\n\t\t\t\t attributes.skinIndex >= 0 && attributes.skinWeight >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinIndicesBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.skinIndex );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinIndex, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglSkinWeightsBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.skinWeight );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.skinWeight, 4, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// line distances\r\n\r\n\t\t\tif ( attributes.lineDistance >= 0 ) {\r\n\r\n\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglLineDistanceBuffer );\r\n\r\n\t\t\t\tstate.enableAttribute( attributes.lineDistance );\r\n\r\n\t\t\t\t_gl.vertexAttribPointer( attributes.lineDistance, 1, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tstate.disableUnusedAttributes();\r\n\r\n\t\t// render mesh\r\n\r\n\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\tvar type = geometryGroup.__typeArray === Uint32Array ? _gl.UNSIGNED_INT : _gl.UNSIGNED_SHORT;\r\n\r\n\t\t\t// wireframe\r\n\r\n\t\t\tif ( material.wireframe ) {\r\n\r\n\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * pixelRatio );\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglLineBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.LINES, geometryGroup.__webglLineCount, type, 0 );\r\n\r\n\t\t\t// triangles\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tif ( updateBuffers ) _gl.bindBuffer( _gl.ELEMENT_ARRAY_BUFFER, geometryGroup.__webglFaceBuffer );\r\n\t\t\t\t_gl.drawElements( _gl.TRIANGLES, geometryGroup.__webglFaceCount, type, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.vertices += geometryGroup.__webglFaceCount;\r\n\t\t\t_this.info.render.faces += geometryGroup.__webglFaceCount / 3;\r\n\r\n\t\t// render lines\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar mode = ( object.mode === THREE.LineStrip ) ? _gl.LINE_STRIP : _gl.LINES;\r\n\r\n\t\t\tstate.setLineWidth( material.linewidth * pixelRatio );\r\n\r\n\t\t\t_gl.drawArrays( mode, 0, geometryGroup.__webglLineCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\r\n\t\t// render particles\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t_gl.drawArrays( _gl.POINTS, 0, geometryGroup.__webglParticleCount );\r\n\r\n\t\t\t_this.info.render.calls ++;\r\n\t\t\t_this.info.render.points += geometryGroup.__webglParticleCount;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction setupMorphTargets ( material, geometryGroup, object ) {\r\n\r\n\t\t// set base\r\n\r\n\t\tvar attributes = material.program.attributes;\r\n\r\n\t\tif ( object.morphTargetBase !== - 1 && attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ object.morphTargetBase ] );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t} else if ( attributes.position >= 0 ) {\r\n\r\n\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglVertexBuffer );\r\n\r\n\t\t\tstate.enableAttribute( attributes.position );\r\n\r\n\t\t\t_gl.vertexAttribPointer( attributes.position, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.morphTargetForcedOrder.length ) {\r\n\r\n\t\t\t// set forced order\r\n\r\n\t\t\tvar m = 0;\r\n\t\t\tvar order = object.morphTargetForcedOrder;\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\twhile ( m < material.numSupportedMorphTargets && m < order.length ) {\r\n\r\n\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ order[ m ] ] );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ order[ m ] ] );\r\n\r\n\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ order[ m ] ];\r\n\r\n\t\t\t\tm ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// find the most influencing\r\n\r\n\t\t\tvar activeInfluenceIndices = [];\r\n\t\t\tvar influences = object.morphTargetInfluences;\r\n\t\t\tvar morphTargets = object.geometry.morphTargets;\r\n\r\n\t\t\tif ( influences.length > morphTargets.length ) {\r\n\r\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Influences array is bigger than morphTargets array.' );\r\n\t\t\t\tinfluences.length = morphTargets.length;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, il = influences.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar influence = influences[ i ];\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ influence, i ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( activeInfluenceIndices.length > material.numSupportedMorphTargets ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\t\t\t\tactiveInfluenceIndices.length = material.numSupportedMorphTargets;\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length > material.numSupportedMorphNormals ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.sort( numericalSort );\r\n\r\n\t\t\t} else if ( activeInfluenceIndices.length === 0 ) {\r\n\r\n\t\t\t\tactiveInfluenceIndices.push( [ 0, 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar attribute;\r\n\r\n\t\t\tfor ( var m = 0, ml = material.numSupportedMorphTargets; m < ml; m ++ ) {\r\n\r\n\t\t\t\tif ( activeInfluenceIndices[ m ] ) {\r\n\r\n\t\t\t\t\tvar influenceIndex = activeInfluenceIndices[ m ][ 1 ];\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphTarget' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphTargetsBuffers[ influenceIndex ] );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattribute = attributes[ 'morphNormal' + m ];\r\n\r\n\t\t\t\t\tif ( attribute >= 0 && material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.bindBuffer( _gl.ARRAY_BUFFER, geometryGroup.__webglMorphNormalsBuffers[ influenceIndex ] );\r\n\r\n\t\t\t\t\t\tstate.enableAttribute( attribute );\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attribute, 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = influences[ influenceIndex ];\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t/*\r\n\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphTarget\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\t\t\t\t_gl.vertexAttribPointer( attributes[ \"morphNormal\" + m ], 3, _gl.FLOAT, false, 0, 0 );\r\n\r\n\t\t\t\t\t}\r\n\t\t\t\t\t*/\r\n\r\n\t\t\t\t\tobject.__webglMorphTargetInfluences[ m ] = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// load updated influences uniform\r\n\r\n\t\tif ( material.program.uniforms.morphTargetInfluences !== null ) {\r\n\r\n\t\t\t_gl.uniform1fv( material.program.uniforms.morphTargetInfluences, object.__webglMorphTargetInfluences );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Sorting\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} else if ( a.material.id !== b.material.id ) {\r\n\r\n\t\t\treturn a.material.id - b.material.id;\r\n\r\n\t\t} else if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn a.z - b.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction reversePainterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.object.renderOrder !== b.object.renderOrder ) {\r\n\r\n\t\t\treturn a.object.renderOrder - b.object.renderOrder;\r\n\r\n\t\t} if ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn a.id - b.id;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction numericalSort ( a, b ) {\r\n\r\n\t\treturn b[ 0 ] - a[ 0 ];\r\n\r\n\t}\r\n\r\n\t// Rendering\r\n\r\n\tthis.render = function ( scene, camera, renderTarget, forceClear ) {\r\n\r\n\t\tif ( camera instanceof THREE.Camera === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\t// reset caching for this frame\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\t\t_currentMaterialId = - 1;\r\n\t\t_currentCamera = null;\r\n\t\t_lightsNeedUpdate = true;\r\n\r\n\t\t// update scene graph\r\n\r\n\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t// update camera matrices and frustum\r\n\r\n\t\tif ( camera.parent === undefined ) camera.updateMatrixWorld();\r\n\r\n\t\t// update Skeleton objects\r\n\r\n\t\tscene.traverse( function ( object ) {\r\n\r\n\t\t\tif ( object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tobject.skeleton.update();\r\n\r\n\t\t\t}\r\n\r\n\t\t} );\r\n\r\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\r\n\r\n\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\r\n\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\tlights.length = 0;\r\n\t\topaqueObjects.length = 0;\r\n\t\ttransparentObjects.length = 0;\r\n\r\n\t\tsprites.length = 0;\r\n\t\tlensFlares.length = 0;\r\n\r\n\t\tprojectObject( scene );\r\n\r\n\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\topaqueObjects.sort( painterSortStable );\r\n\t\t\ttransparentObjects.sort( reversePainterSortStable );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (pre pass)\r\n\r\n\t\tshadowMapPlugin.render( scene, camera );\r\n\r\n\t\t//\r\n\r\n\t\t_this.info.render.calls = 0;\r\n\t\t_this.info.render.vertices = 0;\r\n\t\t_this.info.render.faces = 0;\r\n\t\t_this.info.render.points = 0;\r\n\r\n\t\tthis.setRenderTarget( renderTarget );\r\n\r\n\t\tif ( this.autoClear || forceClear ) {\r\n\r\n\t\t\tthis.clear( this.autoClearColor, this.autoClearDepth, this.autoClearStencil );\r\n\r\n\t\t}\r\n\r\n\t\t// set matrices for immediate objects\r\n\r\n\t\tfor ( var i = 0, il = _webglObjectsImmediate.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar webglObject = _webglObjectsImmediate[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\t\tunrollImmediateBufferMaterial( webglObject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( scene.overrideMaterial ) {\r\n\r\n\t\t\tvar overrideMaterial = scene.overrideMaterial;\r\n\r\n\t\t\tsetMaterial( overrideMaterial );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, overrideMaterial );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, '', camera, lights, fog, overrideMaterial );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// opaque pass (front-to-back order)\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t\trenderObjects( opaqueObjects, camera, lights, fog, null );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'opaque', camera, lights, fog, null );\r\n\r\n\t\t\t// transparent pass (back-to-front order)\r\n\r\n\t\t\trenderObjects( transparentObjects, camera, lights, fog, null );\r\n\t\t\trenderObjectsImmediate( _webglObjectsImmediate, 'transparent', camera, lights, fog, null );\r\n\r\n\t\t}\r\n\r\n\t\t// custom render plugins (post pass)\r\n\r\n\t\tspritePlugin.render( scene, camera );\r\n\t\tlensFlarePlugin.render( scene, camera, _currentWidth, _currentHeight );\r\n\r\n\t\t// Generate mipmap if we're using any kind of mipmap filtering\r\n\r\n\t\tif ( renderTarget && renderTarget.generateMipmaps && renderTarget.minFilter !== THREE.NearestFilter && renderTarget.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\tupdateRenderTargetMipmap( renderTarget );\r\n\r\n\t\t}\r\n\r\n\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\r\n\r\n\t\tstate.setDepthTest( true );\r\n\t\tstate.setDepthWrite( true );\r\n\t\tstate.setColorWrite( true );\r\n\r\n\t\t// _gl.finish();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( object ) {\r\n\r\n\t\tif ( object.visible === false ) return;\r\n\r\n\t\tif ( object instanceof THREE.Scene || object instanceof THREE.Group ) {\r\n\r\n\t\t\t// skip\r\n\r\n\t\t} else {\r\n\r\n\t\t\tinitObject( object );\r\n\r\n\t\t\tif ( object instanceof THREE.Light ) {\r\n\r\n\t\t\t\tlights.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Sprite ) {\r\n\r\n\t\t\t\tsprites.push( object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.LensFlare ) {\r\n\r\n\t\t\t\tlensFlares.push( object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\t\tif ( webglObjects && ( object.frustumCulled === false || _frustum.intersectsObject( object ) === true ) ) {\r\n\r\n\t\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\tvar webglObject = webglObjects[ i ];\r\n\r\n\t\t\t\t\t\tunrollBufferMaterial( webglObject );\r\n\r\n\t\t\t\t\t\twebglObject.render = true;\r\n\r\n\t\t\t\t\t\tif ( _this.sortObjects === true ) {\r\n\r\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld );\r\n\t\t\t\t\t\t\t_vector3.applyProjection( _projScreenMatrix );\r\n\r\n\t\t\t\t\t\t\twebglObject.z = _vector3.z;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tprojectObject( object.children[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjects( renderList, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\r\n\t\t\tvar object = webglObject.object;\r\n\t\t\tvar buffer = webglObject.buffer;\r\n\r\n\t\t\tsetupMatrices( object, camera );\r\n\r\n\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tmaterial = webglObject.material;\r\n\r\n\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_this.setMaterialFaces( material );\r\n\r\n\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.renderBufferDirect( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_this.renderBuffer( camera, lights, fog, material, buffer, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction renderObjectsImmediate ( renderList, materialType, camera, lights, fog, overrideMaterial ) {\r\n\r\n\t\tvar material;\r\n\r\n\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar webglObject = renderList[ i ];\r\n\t\t\tvar object = webglObject.object;\r\n\r\n\t\t\tif ( object.visible ) {\r\n\r\n\t\t\t\tif ( overrideMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = overrideMaterial;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = webglObject[ materialType ];\r\n\r\n\t\t\t\t\tif ( ! material ) continue;\r\n\r\n\t\t\t\t\tsetMaterial( material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_this.renderImmediateObject( camera, lights, fog, material, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.renderImmediateObject = function ( camera, lights, fog, material, object ) {\r\n\r\n\t\tvar program = setProgram( camera, lights, fog, material, object );\r\n\r\n\t\t_currentGeometryProgram = '';\r\n\r\n\t\t_this.setMaterialFaces( material );\r\n\r\n\t\tif ( object.immediateRenderCallback ) {\r\n\r\n\t\t\tobject.immediateRenderCallback( program, _gl, _frustum );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tobject.render( function ( object ) { _this.renderBufferImmediate( object, program, material ); } );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction unrollImmediateBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object,\r\n\t\t\tmaterial = object.material;\r\n\r\n\t\tif ( material.transparent ) {\r\n\r\n\t\t\tglobject.transparent = material;\r\n\t\t\tglobject.opaque = null;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tglobject.opaque = material;\r\n\t\t\tglobject.transparent = null;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction unrollBufferMaterial ( globject ) {\r\n\r\n\t\tvar object = globject.object;\r\n\t\tvar buffer = globject.buffer;\r\n\r\n\t\tvar geometry = object.geometry;\r\n\t\tvar material = object.material;\r\n\r\n\t\tif ( material instanceof THREE.MeshFaceMaterial ) {\r\n\r\n\t\t\tvar materialIndex = geometry instanceof THREE.BufferGeometry ? 0 : buffer.materialIndex;\r\n\r\n\t\t\tmaterial = material.materials[ materialIndex ];\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( material ) {\r\n\r\n\t\t\tglobject.material = material;\r\n\r\n\t\t\tif ( material.transparent ) {\r\n\r\n\t\t\t\ttransparentObjects.push( globject );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\topaqueObjects.push( globject );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction initObject( object ) {\r\n\r\n\t\tif ( object.__webglInit === undefined ) {\r\n\r\n\t\t\tobject.__webglInit = true;\r\n\t\t\tobject._modelViewMatrix = new THREE.Matrix4();\r\n\t\t\tobject._normalMatrix = new THREE.Matrix3();\r\n\r\n\t\t\tobject.addEventListener( 'removed', onObjectRemoved );\r\n\r\n\t\t}\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry === undefined ) {\r\n\r\n\t\t\t// ImmediateRenderObject\r\n\r\n\t\t} else if ( geometry.__webglInit === undefined ) {\r\n\r\n\t\t\tgeometry.__webglInit = true;\r\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\r\n\r\n\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t_this.info.memory.geometries ++;\r\n\r\n\t\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateLineBuffers( geometry );\r\n\t\t\t\t\tinitLineBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\t\t\t\t\tgeometry.lineDistancesNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\tif ( geometry.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\t\tcreateParticleBuffers( geometry );\r\n\t\t\t\t\tinitParticleBuffers( geometry, object );\r\n\r\n\t\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( object.__webglActive === undefined) {\r\n\r\n\t\t\tobject.__webglActive = true;\r\n\r\n\t\t\tif ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t\t} else if ( geometry instanceof THREE.Geometry ) {\r\n\r\n\t\t\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\t\t\tfor ( var i = 0,l = geometryGroupsList.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\t\taddBuffer( _webglObjects, geometryGroupsList[ i ], object );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object instanceof THREE.Line || object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometry, object );\r\n\r\n\t\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\t\taddBufferImmediate( _webglObjectsImmediate, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Geometry splitting\r\n\r\n\tvar geometryGroups = {};\r\n\tvar geometryGroupCounter = 0;\r\n\r\n\tfunction makeGroups( geometry, usesFaceMaterial ) {\r\n\r\n\t\tvar maxVerticesInGroup = extensions.get( 'OES_element_index_uint' ) ? 4294967296 : 65535;\r\n\r\n\t\tvar groupHash, hash_map = {};\r\n\r\n\t\tvar numMorphTargets = geometry.morphTargets.length;\r\n\t\tvar numMorphNormals = geometry.morphNormals.length;\r\n\r\n\t\tvar group;\r\n\t\tvar groups = {};\r\n\t\tvar groupsList = [];\r\n\r\n\t\tfor ( var f = 0, fl = geometry.faces.length; f < fl; f ++ ) {\r\n\r\n\t\t\tvar face = geometry.faces[ f ];\r\n\t\t\tvar materialIndex = usesFaceMaterial ? face.materialIndex : 0;\r\n\r\n\t\t\tif ( ! ( materialIndex in hash_map ) ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ] = { hash: materialIndex, counter: 0 };\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\tgroup = {\r\n\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t};\r\n\r\n\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( groups[ groupHash ].vertices + 3 > maxVerticesInGroup ) {\r\n\r\n\t\t\t\thash_map[ materialIndex ].counter += 1;\r\n\t\t\t\tgroupHash = hash_map[ materialIndex ].hash + '_' + hash_map[ materialIndex ].counter;\r\n\r\n\t\t\t\tif ( ! ( groupHash in groups ) ) {\r\n\r\n\t\t\t\t\tgroup = {\r\n\t\t\t\t\t\tid: geometryGroupCounter ++,\r\n\t\t\t\t\t\tfaces3: [],\r\n\t\t\t\t\t\tmaterialIndex: materialIndex,\r\n\t\t\t\t\t\tvertices: 0,\r\n\t\t\t\t\t\tnumMorphTargets: numMorphTargets,\r\n\t\t\t\t\t\tnumMorphNormals: numMorphNormals\r\n\t\t\t\t\t};\r\n\r\n\t\t\t\t\tgroups[ groupHash ] = group;\r\n\t\t\t\t\tgroupsList.push( group );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgroups[ groupHash ].faces3.push( f );\r\n\t\t\tgroups[ groupHash ].vertices += 3;\r\n\r\n\t\t}\r\n\r\n\t\treturn groupsList;\r\n\r\n\t}\r\n\r\n\tfunction initGeometryGroups( object, geometry ) {\r\n\r\n\t\tvar material = object.material, addBuffers = false;\r\n\r\n\t\tif ( geometryGroups[ geometry.id ] === undefined || geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t\tgeometryGroups[ geometry.id ] = makeGroups( geometry, material instanceof THREE.MeshFaceMaterial );\r\n\r\n\t\t\tgeometry.groupsNeedUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t// create separate VBOs per geometry chunk\r\n\r\n\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\r\n\t\t\t// initialise VBO on the first access\r\n\r\n\t\t\tif ( geometryGroup.__webglVertexBuffer === undefined ) {\r\n\r\n\t\t\t\tcreateMeshBuffers( geometryGroup );\r\n\t\t\t\tinitMeshBuffers( geometryGroup, object );\r\n\r\n\t\t\t\tgeometry.verticesNeedUpdate = true;\r\n\t\t\t\tgeometry.morphTargetsNeedUpdate = true;\r\n\t\t\t\tgeometry.elementsNeedUpdate = true;\r\n\t\t\t\tgeometry.uvsNeedUpdate = true;\r\n\t\t\t\tgeometry.normalsNeedUpdate = true;\r\n\t\t\t\tgeometry.tangentsNeedUpdate = true;\r\n\t\t\t\tgeometry.colorsNeedUpdate = true;\r\n\r\n\t\t\t\taddBuffers = true;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\taddBuffers = false;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( addBuffers || object.__webglActive === undefined ) {\r\n\r\n\t\t\t\taddBuffer( _webglObjects, geometryGroup, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tobject.__webglActive = true;\r\n\r\n\t}\r\n\r\n\tfunction addBuffer( objlist, buffer, object ) {\r\n\r\n\t\tvar id = object.id;\r\n\t\tobjlist[id] = objlist[id] || [];\r\n\t\tobjlist[id].push(\r\n\t\t\t{\r\n\t\t\t\tid: id,\r\n\t\t\t\tbuffer: buffer,\r\n\t\t\t\tobject: object,\r\n\t\t\t\tmaterial: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\tfunction addBufferImmediate( objlist, object ) {\r\n\r\n\t\tobjlist.push(\r\n\t\t\t{\r\n\t\t\t\tid: null,\r\n\t\t\t\tobject: object,\r\n\t\t\t\topaque: null,\r\n\t\t\t\ttransparent: null,\r\n\t\t\t\tz: 0\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t};\r\n\r\n\t// Objects updates\r\n\r\n\tfunction updateObject( object ) {\r\n\r\n\t\tvar geometry = object.geometry;\r\n\r\n\t\tif ( geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\tvar attributes = geometry.attributes;\r\n\t\t\tvar attributesKeys = geometry.attributesKeys;\r\n\r\n\t\t\tfor ( var i = 0, l = attributesKeys.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tvar key = attributesKeys[ i ];\r\n\t\t\t\tvar attribute = attributes[ key ];\r\n\t\t\t\tvar bufferType = ( key === 'index' ) ? _gl.ELEMENT_ARRAY_BUFFER : _gl.ARRAY_BUFFER;\r\n\r\n\t\t\t\tif ( attribute.buffer === undefined ) {\r\n\r\n\t\t\t\t\tattribute.buffer = _gl.createBuffer();\r\n\t\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\r\n\t\t\t\t\t_gl.bufferData( bufferType, attribute.array, ( attribute instanceof THREE.DynamicBufferAttribute ) ? _gl.DYNAMIC_DRAW : _gl.STATIC_DRAW );\r\n\r\n\t\t\t\t\tattribute.needsUpdate = false;\r\n\r\n\t\t\t\t} else if ( attribute.needsUpdate === true ) {\r\n\r\n\t\t\t\t\t_gl.bindBuffer( bufferType, attribute.buffer );\r\n\r\n\t\t\t\t\tif ( attribute.updateRange === undefined || attribute.updateRange.count === -1 ) { // Not using update ranges\r\n\r\n\t\t\t\t\t\t_gl.bufferSubData( bufferType, 0, attribute.array );\r\n\r\n\t\t\t\t\t} else if ( attribute.updateRange.count === 0 ) {\r\n\r\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.updateObject: using updateRange for THREE.DynamicBufferAttribute and marked as needsUpdate but count is 0, ensure you are using set methods or updating manually.' );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_gl.bufferSubData( bufferType, attribute.updateRange.offset * attribute.array.BYTES_PER_ELEMENT,\r\n\t\t\t\t\t\t\t\t\t\t   attribute.array.subarray( attribute.updateRange.offset, attribute.updateRange.offset + attribute.updateRange.count ) );\r\n\r\n\t\t\t\t\t\tattribute.updateRange.count = 0; // reset range\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tattribute.needsUpdate = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( object instanceof THREE.Mesh ) {\r\n\r\n\t\t\t// check all geometry groups\r\n\r\n\t\t\tif ( geometry.groupsNeedUpdate === true ) {\r\n\r\n\t\t\t\tinitGeometryGroups( object, geometry );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar geometryGroupsList = geometryGroups[ geometry.id ];\r\n\r\n\t\t\tfor ( var i = 0, il = geometryGroupsList.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar geometryGroup = geometryGroupsList[ i ];\r\n\t\t\t\tvar material = getBufferMaterial( object, geometryGroup );\r\n\r\n\t\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\t\tif ( geometry.verticesNeedUpdate || geometry.morphTargetsNeedUpdate || geometry.elementsNeedUpdate ||\r\n\t\t\t\t\t geometry.uvsNeedUpdate || geometry.normalsNeedUpdate ||\r\n\t\t\t\t\t geometry.colorsNeedUpdate || geometry.tangentsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\t\tsetMeshBuffers( geometryGroup, object, _gl.DYNAMIC_DRAW, ! geometry.dynamic, material );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.morphTargetsNeedUpdate = false;\r\n\t\t\tgeometry.elementsNeedUpdate = false;\r\n\t\t\tgeometry.uvsNeedUpdate = false;\r\n\t\t\tgeometry.normalsNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.tangentsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.Line ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || geometry.lineDistancesNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetLineBuffers( geometry, _gl.DYNAMIC_DRAW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\t\t\tgeometry.lineDistancesNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t} else if ( object instanceof THREE.PointCloud ) {\r\n\r\n\t\t\tvar material = getBufferMaterial( object, geometry );\r\n\t\t\tvar customAttributesDirty = material.attributes && areCustomAttributesDirty( material );\r\n\r\n\t\t\tif ( geometry.verticesNeedUpdate || geometry.colorsNeedUpdate || customAttributesDirty ) {\r\n\r\n\t\t\t\tsetParticleBuffers( geometry, _gl.DYNAMIC_DRAW, object );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.verticesNeedUpdate = false;\r\n\t\t\tgeometry.colorsNeedUpdate = false;\r\n\r\n\t\t\tmaterial.attributes && clearCustomAttributes( material );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects updates - custom attributes check\r\n\r\n\tfunction areCustomAttributesDirty( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tif ( material.attributes[ name ].needsUpdate ) return true;\r\n\r\n\t\t}\r\n\r\n\t\treturn false;\r\n\r\n\t}\r\n\r\n\tfunction clearCustomAttributes( material ) {\r\n\r\n\t\tfor ( var name in material.attributes ) {\r\n\r\n\t\t\tmaterial.attributes[ name ].needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Objects removal\r\n\r\n\tfunction removeObject( object ) {\r\n\r\n\t\tif ( object instanceof THREE.Mesh  ||\r\n\t\t\t object instanceof THREE.PointCloud ||\r\n\t\t\t object instanceof THREE.Line ) {\r\n\r\n\t\t\tdelete _webglObjects[ object.id ];\r\n\r\n\t\t} else if ( object instanceof THREE.ImmediateRenderObject || object.immediateRenderCallback ) {\r\n\r\n\t\t\tremoveInstances( _webglObjectsImmediate, object );\r\n\r\n\t\t}\r\n\r\n\t\tdelete object.__webglInit;\r\n\t\tdelete object._modelViewMatrix;\r\n\t\tdelete object._normalMatrix;\r\n\r\n\t\tdelete object.__webglActive;\r\n\r\n\t}\r\n\r\n\tfunction removeInstances( objlist, object ) {\r\n\r\n\t\tfor ( var o = objlist.length - 1; o >= 0; o -- ) {\r\n\r\n\t\t\tif ( objlist[ o ].object === object ) {\r\n\r\n\t\t\t\tobjlist.splice( o, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Materials\r\n\r\n\tvar shaderIDs = {\r\n\t\tMeshDepthMaterial: 'depth',\r\n\t\tMeshNormalMaterial: 'normal',\r\n\t\tMeshBasicMaterial: 'basic',\r\n\t\tMeshLambertMaterial: 'lambert',\r\n\t\tMeshPhongMaterial: 'phong',\r\n\t\tLineBasicMaterial: 'basic',\r\n\t\tLineDashedMaterial: 'dashed',\r\n\t\tPointCloudMaterial: 'particle_basic'\r\n\t};\r\n\r\n\tfunction initMaterial( material, lights, fog, object ) {\r\n\r\n\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\r\n\r\n\t\tvar shaderID = shaderIDs[ material.type ];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tvar shader = THREE.ShaderLib[ shaderID ];\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: THREE.UniformsUtils.clone( shader.uniforms ),\r\n\t\t\t\tvertexShader: shader.vertexShader,\r\n\t\t\t\tfragmentShader: shader.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tmaterial.__webglShader = {\r\n\t\t\t\tuniforms: material.uniforms,\r\n\t\t\t\tvertexShader: material.vertexShader,\r\n\t\t\t\tfragmentShader: material.fragmentShader\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// heuristics to create shader parameters according to lights in the scene\r\n\t\t// (not to blow over maxLights budget)\r\n\r\n\t\tvar maxLightCount = allocateLights( lights );\r\n\t\tvar maxShadows = allocateShadows( lights );\r\n\t\tvar maxBones = allocateBones( object );\r\n\r\n\t\tvar parameters = {\r\n\r\n\t\t\tprecision: _precision,\r\n\t\t\tsupportsVertexTextures: _supportsVertexTextures,\r\n\r\n\t\t\tmap: !! material.map,\r\n\t\t\tenvMap: !! material.envMap,\r\n\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\r\n\t\t\tlightMap: !! material.lightMap,\r\n\t\t\tbumpMap: !! material.bumpMap,\r\n\t\t\tnormalMap: !! material.normalMap,\r\n\t\t\tspecularMap: !! material.specularMap,\r\n\t\t\talphaMap: !! material.alphaMap,\r\n\r\n\t\t\tcombine: material.combine,\r\n\r\n\t\t\tvertexColors: material.vertexColors,\r\n\r\n\t\t\tfog: fog,\r\n\t\t\tuseFog: material.fog,\r\n\t\t\tfogExp: fog instanceof THREE.FogExp2,\r\n\r\n\t\t\tflatShading: material.shading === THREE.FlatShading,\r\n\r\n\t\t\tsizeAttenuation: material.sizeAttenuation,\r\n\t\t\tlogarithmicDepthBuffer: _logarithmicDepthBuffer,\r\n\r\n\t\t\tskinning: material.skinning,\r\n\t\t\tmaxBones: maxBones,\r\n\t\t\tuseVertexTexture: _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture,\r\n\r\n\t\t\tmorphTargets: material.morphTargets,\r\n\t\t\tmorphNormals: material.morphNormals,\r\n\t\t\tmaxMorphTargets: _this.maxMorphTargets,\r\n\t\t\tmaxMorphNormals: _this.maxMorphNormals,\r\n\r\n\t\t\tmaxDirLights: maxLightCount.directional,\r\n\t\t\tmaxPointLights: maxLightCount.point,\r\n\t\t\tmaxSpotLights: maxLightCount.spot,\r\n\t\t\tmaxHemiLights: maxLightCount.hemi,\r\n\r\n\t\t\tmaxShadows: maxShadows,\r\n\t\t\tshadowMapEnabled: _this.shadowMapEnabled && object.receiveShadow && maxShadows > 0,\r\n\t\t\tshadowMapType: _this.shadowMapType,\r\n\t\t\tshadowMapDebug: _this.shadowMapDebug,\r\n\t\t\tshadowMapCascade: _this.shadowMapCascade,\r\n\r\n\t\t\talphaTest: material.alphaTest,\r\n\t\t\tmetal: material.metal,\r\n\t\t\twrapAround: material.wrapAround,\r\n\t\t\tdoubleSided: material.side === THREE.DoubleSide,\r\n\t\t\tflipSided: material.side === THREE.BackSide\r\n\r\n\t\t};\r\n\r\n\t\t// Generate code\r\n\r\n\t\tvar chunks = [];\r\n\r\n\t\tif ( shaderID ) {\r\n\r\n\t\t\tchunks.push( shaderID );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tchunks.push( material.fragmentShader );\r\n\t\t\tchunks.push( material.vertexShader );\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.defines !== undefined ) {\r\n\r\n\t\t\tfor ( var name in material.defines ) {\r\n\r\n\t\t\t\tchunks.push( name );\r\n\t\t\t\tchunks.push( material.defines[ name ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var name in parameters ) {\r\n\r\n\t\t\tchunks.push( name );\r\n\t\t\tchunks.push( parameters[ name ] );\r\n\r\n\t\t}\r\n\r\n\t\tvar code = chunks.join();\r\n\r\n\t\tvar program;\r\n\r\n\t\t// Check if code has been already compiled\r\n\r\n\t\tfor ( var p = 0, pl = _programs.length; p < pl; p ++ ) {\r\n\r\n\t\t\tvar programInfo = _programs[ p ];\r\n\r\n\t\t\tif ( programInfo.code === code ) {\r\n\r\n\t\t\t\tprogram = programInfo;\r\n\t\t\t\tprogram.usedTimes ++;\r\n\r\n\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tprogram = new THREE.WebGLProgram( _this, code, material, parameters );\r\n\t\t\t_programs.push( program );\r\n\r\n\t\t\t_this.info.memory.programs = _programs.length;\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.program = program;\r\n\r\n\t\tvar attributes = program.attributes;\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphTargets = 0;\r\n\r\n\t\t\tvar id, base = 'morphTarget';\r\n\r\n\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphNormals ) {\r\n\r\n\t\t\tmaterial.numSupportedMorphNormals = 0;\r\n\r\n\t\t\tvar id, base = 'morphNormal';\r\n\r\n\t\t\tfor ( i = 0; i < _this.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\t\tid = base + i;\r\n\r\n\t\t\t\tif ( attributes[ id ] >= 0 ) {\r\n\r\n\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tmaterial.uniformsList = [];\r\n\r\n\t\tfor ( var u in material.__webglShader.uniforms ) {\r\n\r\n\t\t\tvar location = material.program.uniforms[ u ];\r\n\r\n\t\t\tif ( location ) {\r\n\t\t\t\tmaterial.uniformsList.push( [ material.__webglShader.uniforms[ u ], location ] );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setMaterial( material ) {\r\n\r\n\t\tif ( material.transparent === true ) {\r\n\r\n\t\t\tstate.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tstate.setBlending( THREE.NoBlending );\r\n\r\n\t\t}\r\n\r\n\t\tstate.setDepthTest( material.depthTest );\r\n\t\tstate.setDepthWrite( material.depthWrite );\r\n\t\tstate.setColorWrite( material.colorWrite );\r\n\t\tstate.setPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\r\n\r\n\t}\r\n\r\n\tfunction setProgram( camera, lights, fog, material, object ) {\r\n\r\n\t\t_usedTextureUnits = 0;\r\n\r\n\t\tif ( material.needsUpdate ) {\r\n\r\n\t\t\tif ( material.program ) deallocateMaterial( material );\r\n\r\n\t\t\tinitMaterial( material, lights, fog, object );\r\n\t\t\tmaterial.needsUpdate = false;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.morphTargets ) {\r\n\r\n\t\t\tif ( ! object.__webglMorphTargetInfluences ) {\r\n\r\n\t\t\t\tobject.__webglMorphTargetInfluences = new Float32Array( _this.maxMorphTargets );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar refreshProgram = false;\r\n\t\tvar refreshMaterial = false;\r\n\t\tvar refreshLights = false;\r\n\r\n\t\tvar program = material.program,\r\n\t\t\tp_uniforms = program.uniforms,\r\n\t\t\tm_uniforms = material.__webglShader.uniforms;\r\n\r\n\t\tif ( program.id !== _currentProgram ) {\r\n\r\n\t\t\t_gl.useProgram( program.program );\r\n\t\t\t_currentProgram = program.id;\r\n\r\n\t\t\trefreshProgram = true;\r\n\t\t\trefreshMaterial = true;\r\n\t\t\trefreshLights = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.id !== _currentMaterialId ) {\r\n\r\n\t\t\tif ( _currentMaterialId === -1 ) refreshLights = true;\r\n\t\t\t_currentMaterialId = material.id;\r\n\r\n\t\t\trefreshMaterial = true;\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshProgram || camera !== _currentCamera ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\t\tif ( _logarithmicDepthBuffer ) {\r\n\r\n\t\t\t\t_gl.uniform1f( p_uniforms.logDepthBufFC, 2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tif ( camera !== _currentCamera ) _currentCamera = camera;\r\n\r\n\t\t\t// load material specific uniforms\r\n\t\t\t// (shader material also gets them for the sake of genericity)\r\n\r\n\t\t\tif ( material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material.envMap ) {\r\n\r\n\t\t\t\tif ( p_uniforms.cameraPosition !== null ) {\r\n\r\n\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld );\r\n\t\t\t\t\t_gl.uniform3f( p_uniforms.cameraPosition, _vector3.x, _vector3.y, _vector3.z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.ShaderMaterial ||\r\n\t\t\t\t material.skinning ) {\r\n\r\n\t\t\t\tif ( p_uniforms.viewMatrix !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.viewMatrix, false, camera.matrixWorldInverse.elements );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// skinning uniforms must be set even if material didn't change\r\n\t\t// auto-setting of texture unit for bone texture must go before other textures\r\n\t\t// not sure why, but otherwise weird things happen\r\n\r\n\t\tif ( material.skinning ) {\r\n\r\n\t\t\tif ( object.bindMatrix && p_uniforms.bindMatrix !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrix, false, object.bindMatrix.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.bindMatrixInverse && p_uniforms.bindMatrixInverse !== null ) {\r\n\r\n\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.bindMatrixInverse, false, object.bindMatrixInverse.elements );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _supportsBoneTextures && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneTexture !== null ) {\r\n\r\n\t\t\t\t\tvar textureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTexture, textureUnit );\r\n\t\t\t\t\t_this.setTexture( object.skeleton.boneTexture, textureUnit );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureWidth !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureWidth, object.skeleton.boneTextureWidth );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( p_uniforms.boneTextureHeight !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniform1i( p_uniforms.boneTextureHeight, object.skeleton.boneTextureHeight );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else if ( object.skeleton && object.skeleton.boneMatrices ) {\r\n\r\n\t\t\t\tif ( p_uniforms.boneGlobalMatrices !== null ) {\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( p_uniforms.boneGlobalMatrices, false, object.skeleton.boneMatrices );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( refreshMaterial ) {\r\n\r\n\t\t\t// refresh uniforms common to several materials\r\n\r\n\t\t\tif ( fog && material.fog ) {\r\n\r\n\t\t\t\trefreshUniformsFog( m_uniforms, fog );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshPhongMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material.lights ) {\r\n\r\n\t\t\t\tif ( _lightsNeedUpdate ) {\r\n\r\n\t\t\t\t\trefreshLights = true;\r\n\t\t\t\t\tsetupLights( lights );\r\n\t\t\t\t\t_lightsNeedUpdate = false;\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( refreshLights ) {\r\n\t\t\t\t\trefreshUniformsLights( m_uniforms, _lights );\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, true );\r\n\t\t\t\t} else {\r\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, false );\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material instanceof THREE.MeshBasicMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshLambertMaterial ||\r\n\t\t\t\t material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsCommon( m_uniforms, material );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// refresh single material specific uniforms\r\n\r\n\t\t\tif ( material instanceof THREE.LineBasicMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.LineDashedMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLine( m_uniforms, material );\r\n\t\t\t\trefreshUniformsDash( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.PointCloudMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsParticle( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshPhongMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsPhong( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshLambertMaterial ) {\r\n\r\n\t\t\t\trefreshUniformsLambert( m_uniforms, material );\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshDepthMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.mNear.value = camera.near;\r\n\t\t\t\tm_uniforms.mFar.value = camera.far;\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t} else if ( material instanceof THREE.MeshNormalMaterial ) {\r\n\r\n\t\t\t\tm_uniforms.opacity.value = material.opacity;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( object.receiveShadow && ! material._shadowPass ) {\r\n\r\n\t\t\t\trefreshUniformsShadow( m_uniforms, lights );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// load common uniforms\r\n\r\n\t\t\tloadUniformsGeneric( material.uniformsList );\r\n\r\n\t\t}\r\n\r\n\t\tloadUniformsMatrices( p_uniforms, object );\r\n\r\n\t\tif ( p_uniforms.modelMatrix !== null ) {\r\n\r\n\t\t\t_gl.uniformMatrix4fv( p_uniforms.modelMatrix, false, object.matrixWorld.elements );\r\n\r\n\t\t}\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n\t// Uniforms (refresh uniforms objects)\r\n\r\n\tfunction refreshUniformsCommon ( uniforms, material ) {\r\n\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\t\tuniforms.lightMap.value = material.lightMap;\r\n\t\tuniforms.specularMap.value = material.specularMap;\r\n\t\tuniforms.alphaMap.value = material.alphaMap;\r\n\r\n\t\tif ( material.bumpMap ) {\r\n\r\n\t\t\tuniforms.bumpMap.value = material.bumpMap;\r\n\t\t\tuniforms.bumpScale.value = material.bumpScale;\r\n\r\n\t\t}\r\n\r\n\t\tif ( material.normalMap ) {\r\n\r\n\t\t\tuniforms.normalMap.value = material.normalMap;\r\n\t\t\tuniforms.normalScale.value.copy( material.normalScale );\r\n\r\n\t\t}\r\n\r\n\t\t// uv repeat and offset setting priorities\r\n\t\t//  1. color map\r\n\t\t//  2. specular map\r\n\t\t//  3. normal map\r\n\t\t//  4. bump map\r\n\t\t//  5. alpha map\r\n\r\n\t\tvar uvScaleMap;\r\n\r\n\t\tif ( material.map ) {\r\n\r\n\t\t\tuvScaleMap = material.map;\r\n\r\n\t\t} else if ( material.specularMap ) {\r\n\r\n\t\t\tuvScaleMap = material.specularMap;\r\n\r\n\t\t} else if ( material.normalMap ) {\r\n\r\n\t\t\tuvScaleMap = material.normalMap;\r\n\r\n\t\t} else if ( material.bumpMap ) {\r\n\r\n\t\t\tuvScaleMap = material.bumpMap;\r\n\r\n\t\t} else if ( material.alphaMap ) {\r\n\r\n\t\t\tuvScaleMap = material.alphaMap;\r\n\r\n\t\t}\r\n\r\n\t\tif ( uvScaleMap !== undefined ) {\r\n\r\n\t\t\tvar offset = uvScaleMap.offset;\r\n\t\t\tvar repeat = uvScaleMap.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t\tuniforms.envMap.value = material.envMap;\r\n\t\tuniforms.flipEnvMap.value = ( material.envMap instanceof THREE.WebGLRenderTargetCube ) ? 1 : - 1;\r\n\r\n\t\tuniforms.reflectivity.value = material.reflectivity;\r\n\t\tuniforms.refractionRatio.value = material.refractionRatio;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLine ( uniforms, material ) {\r\n\r\n\t\tuniforms.diffuse.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsDash ( uniforms, material ) {\r\n\r\n\t\tuniforms.dashSize.value = material.dashSize;\r\n\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\r\n\t\tuniforms.scale.value = material.scale;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsParticle ( uniforms, material ) {\r\n\r\n\t\tuniforms.psColor.value = material.color;\r\n\t\tuniforms.opacity.value = material.opacity;\r\n\t\tuniforms.size.value = material.size;\r\n\t\tuniforms.scale.value = _canvas.height / 2.0; // TODO: Cache this.\r\n\r\n\t\tuniforms.map.value = material.map;\r\n\r\n\t\tif ( material.map !== null ) {\r\n\r\n\t\t\tvar offset = material.map.offset;\r\n\t\t\tvar repeat = material.map.repeat;\r\n\r\n\t\t\tuniforms.offsetRepeat.value.set( offset.x, offset.y, repeat.x, repeat.y );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsFog ( uniforms, fog ) {\r\n\r\n\t\tuniforms.fogColor.value = fog.color;\r\n\r\n\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\tuniforms.fogNear.value = fog.near;\r\n\t\t\tuniforms.fogFar.value = fog.far;\r\n\r\n\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\tuniforms.fogDensity.value = fog.density;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsPhong ( uniforms, material ) {\r\n\r\n\t\tuniforms.shininess.value = material.shininess;\r\n\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\t\tuniforms.specular.value = material.specular;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLambert ( uniforms, material ) {\r\n\r\n\t\tuniforms.emissive.value = material.emissive;\r\n\r\n\t\tif ( material.wrapAround ) {\r\n\r\n\t\t\tuniforms.wrapRGB.value.copy( material.wrapRGB );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsLights ( uniforms, lights ) {\r\n\r\n\t\tuniforms.ambientLightColor.value = lights.ambient;\r\n\r\n\t\tuniforms.directionalLightColor.value = lights.directional.colors;\r\n\t\tuniforms.directionalLightDirection.value = lights.directional.positions;\r\n\r\n\t\tuniforms.pointLightColor.value = lights.point.colors;\r\n\t\tuniforms.pointLightPosition.value = lights.point.positions;\r\n\t\tuniforms.pointLightDistance.value = lights.point.distances;\r\n\t\tuniforms.pointLightDecay.value = lights.point.decays;\r\n\r\n\t\tuniforms.spotLightColor.value = lights.spot.colors;\r\n\t\tuniforms.spotLightPosition.value = lights.spot.positions;\r\n\t\tuniforms.spotLightDistance.value = lights.spot.distances;\r\n\t\tuniforms.spotLightDirection.value = lights.spot.directions;\r\n\t\tuniforms.spotLightAngleCos.value = lights.spot.anglesCos;\r\n\t\tuniforms.spotLightExponent.value = lights.spot.exponents;\r\n\t\tuniforms.spotLightDecay.value = lights.spot.decays;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.value = lights.hemi.skyColors;\r\n\t\tuniforms.hemisphereLightGroundColor.value = lights.hemi.groundColors;\r\n\t\tuniforms.hemisphereLightDirection.value = lights.hemi.positions;\r\n\r\n\t}\r\n\r\n\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\r\n\r\n\tfunction markUniformsLightsNeedsUpdate ( uniforms, value ) {\r\n\r\n\t\tuniforms.ambientLightColor.needsUpdate = value;\r\n\r\n\t\tuniforms.directionalLightColor.needsUpdate = value;\r\n\t\tuniforms.directionalLightDirection.needsUpdate = value;\r\n\r\n\t\tuniforms.pointLightColor.needsUpdate = value;\r\n\t\tuniforms.pointLightPosition.needsUpdate = value;\r\n\t\tuniforms.pointLightDistance.needsUpdate = value;\r\n\t\tuniforms.pointLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.spotLightColor.needsUpdate = value;\r\n\t\tuniforms.spotLightPosition.needsUpdate = value;\r\n\t\tuniforms.spotLightDistance.needsUpdate = value;\r\n\t\tuniforms.spotLightDirection.needsUpdate = value;\r\n\t\tuniforms.spotLightAngleCos.needsUpdate = value;\r\n\t\tuniforms.spotLightExponent.needsUpdate = value;\r\n\t\tuniforms.spotLightDecay.needsUpdate = value;\r\n\r\n\t\tuniforms.hemisphereLightSkyColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightGroundColor.needsUpdate = value;\r\n\t\tuniforms.hemisphereLightDirection.needsUpdate = value;\r\n\r\n\t}\r\n\r\n\tfunction refreshUniformsShadow ( uniforms, lights ) {\r\n\r\n\t\tif ( uniforms.shadowMatrix ) {\r\n\r\n\t\t\tvar j = 0;\r\n\r\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvar light = lights[ i ];\r\n\r\n\t\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight || ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) ) {\r\n\r\n\t\t\t\t\tuniforms.shadowMap.value[ j ] = light.shadowMap;\r\n\t\t\t\t\tuniforms.shadowMapSize.value[ j ] = light.shadowMapSize;\r\n\r\n\t\t\t\t\tuniforms.shadowMatrix.value[ j ] = light.shadowMatrix;\r\n\r\n\t\t\t\t\tuniforms.shadowDarkness.value[ j ] = light.shadowDarkness;\r\n\t\t\t\t\tuniforms.shadowBias.value[ j ] = light.shadowBias;\r\n\r\n\t\t\t\t\tj ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Uniforms (load to GPU)\r\n\r\n\tfunction loadUniformsMatrices ( uniforms, object ) {\r\n\r\n\t\t_gl.uniformMatrix4fv( uniforms.modelViewMatrix, false, object._modelViewMatrix.elements );\r\n\r\n\t\tif ( uniforms.normalMatrix ) {\r\n\r\n\t\t\t_gl.uniformMatrix3fv( uniforms.normalMatrix, false, object._normalMatrix.elements );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction getTextureUnit() {\r\n\r\n\t\tvar textureUnit = _usedTextureUnits;\r\n\r\n\t\tif ( textureUnit >= _maxTextures ) {\r\n\r\n\t\t\tTHREE.warn( 'WebGLRenderer: trying to use ' + textureUnit + ' texture units while this GPU supports only ' + _maxTextures );\r\n\r\n\t\t}\r\n\r\n\t\t_usedTextureUnits += 1;\r\n\r\n\t\treturn textureUnit;\r\n\r\n\t}\r\n\r\n\tfunction loadUniformsGeneric ( uniforms ) {\r\n\r\n\t\tvar texture, textureUnit, offset;\r\n\r\n\t\tfor ( var j = 0, jl = uniforms.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar uniform = uniforms[ j ][ 0 ];\r\n\r\n\t\t\t// needsUpdate property is not added to all uniforms.\r\n\t\t\tif ( uniform.needsUpdate === false ) continue;\r\n\r\n\t\t\tvar type = uniform.type;\r\n\t\t\tvar value = uniform.value;\r\n\t\t\tvar location = uniforms[ j ][ 1 ];\r\n\r\n\t\t\tswitch ( type ) {\r\n\r\n\t\t\t\tcase '1i':\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1f':\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2f':\r\n\t\t\t\t\t_gl.uniform2f( location, value[ 0 ], value[ 1 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3f':\r\n\t\t\t\t\t_gl.uniform3f( location, value[ 0 ], value[ 1 ], value[ 2 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4f':\r\n\t\t\t\t\t_gl.uniform4f( location, value[ 0 ], value[ 1 ], value[ 2 ], value[ 3 ] );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1iv':\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3iv':\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '1fv':\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '2fv':\r\n\t\t\t\t\t_gl.uniform2fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '3fv':\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase '4fv':\r\n\t\t\t\t\t_gl.uniform4fv( location, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix3fv':\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'Matrix4fv':\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t//\r\n\r\n\t\t\t\tcase 'i':\r\n\r\n\t\t\t\t\t// single integer\r\n\t\t\t\t\t_gl.uniform1i( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'f':\r\n\r\n\t\t\t\t\t// single float\r\n\t\t\t\t\t_gl.uniform1f( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2':\r\n\r\n\t\t\t\t\t// single THREE.Vector2\r\n\t\t\t\t\t_gl.uniform2f( location, value.x, value.y );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3':\r\n\r\n\t\t\t\t\t// single THREE.Vector3\r\n\t\t\t\t\t_gl.uniform3f( location, value.x, value.y, value.z );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4':\r\n\r\n\t\t\t\t\t// single THREE.Vector4\r\n\t\t\t\t\t_gl.uniform4f( location, value.x, value.y, value.z, value.w );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'c':\r\n\r\n\t\t\t\t\t// single THREE.Color\r\n\t\t\t\t\t_gl.uniform3f( location, value.r, value.g, value.b );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv1':\r\n\r\n\t\t\t\t\t// flat array of integers (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'iv':\r\n\r\n\t\t\t\t\t// flat array of integers with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3iv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv1':\r\n\r\n\t\t\t\t\t// flat array of floats (JS or typed array)\r\n\t\t\t\t\t_gl.uniform1fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'fv':\r\n\r\n\t\t\t\t\t// flat array of floats with 3 x N size (JS or typed array)\r\n\t\t\t\t\t_gl.uniform3fv( location, value );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v2v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector2\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 2 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 2;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform2fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v3v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 3 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 3;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform3fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'v4v':\r\n\r\n\t\t\t\t\t// array of THREE.Vector4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 4 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\toffset = i * 4;\r\n\r\n\t\t\t\t\t\tuniform._array[ offset ]   = value[ i ].x;\r\n\t\t\t\t\t\tuniform._array[ offset + 1 ] = value[ i ].y;\r\n\t\t\t\t\t\tuniform._array[ offset + 2 ] = value[ i ].z;\r\n\t\t\t\t\t\tuniform._array[ offset + 3 ] = value[ i ].w;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform4fv( location, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3':\r\n\r\n\t\t\t\t\t// single THREE.Matrix3\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm3v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix3\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 9 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 9 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix3fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4':\r\n\r\n\t\t\t\t\t// single THREE.Matrix4\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, value.elements );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'm4v':\r\n\r\n\t\t\t\t\t// array of THREE.Matrix4\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = new Float32Array( 16 * value.length );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tvalue[ i ].flattenToArrayOffset( uniform._array, i * 16 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniformMatrix4fv( location, false, uniform._array );\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 't':\r\n\r\n\t\t\t\t\t// single THREE.Texture (2d or cube)\r\n\r\n\t\t\t\t\ttexture = value;\r\n\t\t\t\t\ttextureUnit = getTextureUnit();\r\n\r\n\t\t\t\t\t_gl.uniform1i( location, textureUnit );\r\n\r\n\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\tif ( texture instanceof THREE.CubeTexture ||\r\n\t\t\t\t\t   ( texture.image instanceof Array && texture.image.length === 6 ) ) { // CompressedTexture can have Array in image :/\r\n\r\n\t\t\t\t\t\tsetCubeTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else if ( texture instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t\t\t\tsetCubeTextureDynamic( texture, textureUnit );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'tv':\r\n\r\n\t\t\t\t\t// array of THREE.Texture (2d)\r\n\r\n\t\t\t\t\tif ( uniform._array === undefined ) {\r\n\r\n\t\t\t\t\t\tuniform._array = [];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\tuniform._array[ i ] = getTextureUnit();\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\t_gl.uniform1iv( location, uniform._array );\r\n\r\n\t\t\t\t\tfor ( var i = 0, il = uniform.value.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\t\ttexture = uniform.value[ i ];\r\n\t\t\t\t\t\ttextureUnit = uniform._array[ i ];\r\n\r\n\t\t\t\t\t\tif ( ! texture ) continue;\r\n\r\n\t\t\t\t\t\t_this.setTexture( texture, textureUnit );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tdefault:\r\n\r\n\t\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Unknown uniform type: ' + type );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setupMatrices ( object, camera ) {\r\n\r\n\t\tobject._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\r\n\t\tobject._normalMatrix.getNormalMatrix( object._modelViewMatrix );\r\n\r\n\t}\r\n\r\n\tfunction setColorLinear( array, offset, color, intensity ) {\r\n\r\n\t\tarray[ offset ]     = color.r * intensity;\r\n\t\tarray[ offset + 1 ] = color.g * intensity;\r\n\t\tarray[ offset + 2 ] = color.b * intensity;\r\n\r\n\t}\r\n\r\n\tfunction setupLights ( lights ) {\r\n\r\n\t\tvar l, ll, light,\r\n\t\tr = 0, g = 0, b = 0,\r\n\t\tcolor, skyColor, groundColor,\r\n\t\tintensity,\r\n\t\tdistance,\r\n\r\n\t\tzlights = _lights,\r\n\r\n\t\tdirColors = zlights.directional.colors,\r\n\t\tdirPositions = zlights.directional.positions,\r\n\r\n\t\tpointColors = zlights.point.colors,\r\n\t\tpointPositions = zlights.point.positions,\r\n\t\tpointDistances = zlights.point.distances,\r\n\t\tpointDecays = zlights.point.decays,\r\n\r\n\t\tspotColors = zlights.spot.colors,\r\n\t\tspotPositions = zlights.spot.positions,\r\n\t\tspotDistances = zlights.spot.distances,\r\n\t\tspotDirections = zlights.spot.directions,\r\n\t\tspotAnglesCos = zlights.spot.anglesCos,\r\n\t\tspotExponents = zlights.spot.exponents,\r\n\t\tspotDecays = zlights.spot.decays,\r\n\r\n\t\themiSkyColors = zlights.hemi.skyColors,\r\n\t\themiGroundColors = zlights.hemi.groundColors,\r\n\t\themiPositions = zlights.hemi.positions,\r\n\r\n\t\tdirLength = 0,\r\n\t\tpointLength = 0,\r\n\t\tspotLength = 0,\r\n\t\themiLength = 0,\r\n\r\n\t\tdirCount = 0,\r\n\t\tpointCount = 0,\r\n\t\tspotCount = 0,\r\n\t\themiCount = 0,\r\n\r\n\t\tdirOffset = 0,\r\n\t\tpointOffset = 0,\r\n\t\tspotOffset = 0,\r\n\t\themiOffset = 0;\r\n\r\n\t\tfor ( l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tlight = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow ) continue;\r\n\r\n\t\t\tcolor = light.color;\r\n\t\t\tintensity = light.intensity;\r\n\t\t\tdistance = light.distance;\r\n\r\n\t\t\tif ( light instanceof THREE.AmbientLight ) {\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tr += color.r;\r\n\t\t\t\tg += color.g;\r\n\t\t\t\tb += color.b;\r\n\r\n\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\tdirCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tdirOffset = dirLength * 3;\r\n\r\n\t\t\t\tdirPositions[ dirOffset ]     = _direction.x;\r\n\t\t\t\tdirPositions[ dirOffset + 1 ] = _direction.y;\r\n\t\t\t\tdirPositions[ dirOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tsetColorLinear( dirColors, dirOffset, color, intensity );\r\n\r\n\t\t\t\tdirLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.PointLight ) {\r\n\r\n\t\t\t\tpointCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tpointOffset = pointLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( pointColors, pointOffset, color, intensity );\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tpointPositions[ pointOffset ]     = _vector3.x;\r\n\t\t\t\tpointPositions[ pointOffset + 1 ] = _vector3.y;\r\n\t\t\t\tpointPositions[ pointOffset + 2 ] = _vector3.z;\r\n\r\n\t\t\t\t// distance is 0 if decay is 0, because there is no attenuation at all.\r\n\t\t\t\tpointDistances[ pointLength ] = distance;\r\n\t\t\t\tpointDecays[ pointLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tpointLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\tspotCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\tspotOffset = spotLength * 3;\r\n\r\n\t\t\t\tsetColorLinear( spotColors, spotOffset, color, intensity );\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\r\n\t\t\t\tspotPositions[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotPositions[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotPositions[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotDistances[ spotLength ] = distance;\r\n\r\n\t\t\t\t_vector3.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\t\t_direction.sub( _vector3 );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\tspotDirections[ spotOffset ]     = _direction.x;\r\n\t\t\t\tspotDirections[ spotOffset + 1 ] = _direction.y;\r\n\t\t\t\tspotDirections[ spotOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tspotAnglesCos[ spotLength ] = Math.cos( light.angle );\r\n\t\t\t\tspotExponents[ spotLength ] = light.exponent;\r\n\t\t\t\tspotDecays[ spotLength ] = ( light.distance === 0 ) ? 0.0 : light.decay;\r\n\r\n\t\t\t\tspotLength += 1;\r\n\r\n\t\t\t} else if ( light instanceof THREE.HemisphereLight ) {\r\n\r\n\t\t\t\themiCount += 1;\r\n\r\n\t\t\t\tif ( ! light.visible ) continue;\r\n\r\n\t\t\t\t_direction.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t\t_direction.normalize();\r\n\r\n\t\t\t\themiOffset = hemiLength * 3;\r\n\r\n\t\t\t\themiPositions[ hemiOffset ]     = _direction.x;\r\n\t\t\t\themiPositions[ hemiOffset + 1 ] = _direction.y;\r\n\t\t\t\themiPositions[ hemiOffset + 2 ] = _direction.z;\r\n\r\n\t\t\t\tskyColor = light.color;\r\n\t\t\t\tgroundColor = light.groundColor;\r\n\r\n\t\t\t\tsetColorLinear( hemiSkyColors, hemiOffset, skyColor, intensity );\r\n\t\t\t\tsetColorLinear( hemiGroundColors, hemiOffset, groundColor, intensity );\r\n\r\n\t\t\t\themiLength += 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// null eventual remains from removed lights\r\n\t\t// (this is to avoid if in shader)\r\n\r\n\t\tfor ( l = dirLength * 3, ll = Math.max( dirColors.length, dirCount * 3 ); l < ll; l ++ ) dirColors[ l ] = 0.0;\r\n\t\tfor ( l = pointLength * 3, ll = Math.max( pointColors.length, pointCount * 3 ); l < ll; l ++ ) pointColors[ l ] = 0.0;\r\n\t\tfor ( l = spotLength * 3, ll = Math.max( spotColors.length, spotCount * 3 ); l < ll; l ++ ) spotColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiSkyColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiSkyColors[ l ] = 0.0;\r\n\t\tfor ( l = hemiLength * 3, ll = Math.max( hemiGroundColors.length, hemiCount * 3 ); l < ll; l ++ ) hemiGroundColors[ l ] = 0.0;\r\n\r\n\t\tzlights.directional.length = dirLength;\r\n\t\tzlights.point.length = pointLength;\r\n\t\tzlights.spot.length = spotLength;\r\n\t\tzlights.hemi.length = hemiLength;\r\n\r\n\t\tzlights.ambient[ 0 ] = r;\r\n\t\tzlights.ambient[ 1 ] = g;\r\n\t\tzlights.ambient[ 2 ] = b;\r\n\r\n\t}\r\n\r\n\t// GL state setting\r\n\r\n\tthis.setFaceCulling = function ( cullFace, frontFaceDirection ) {\r\n\r\n\t\tif ( cullFace === THREE.CullFaceNone ) {\r\n\r\n\t\t\t_gl.disable( _gl.CULL_FACE );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tif ( frontFaceDirection === THREE.FrontFaceDirectionCW ) {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( cullFace === THREE.CullFaceBack ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t\t} else if ( cullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.cullFace( _gl.FRONT_AND_BACK );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.enable( _gl.CULL_FACE );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setMaterialFaces = function ( material ) {\r\n\r\n\t\tstate.setDoubleSided( material.side === THREE.DoubleSide );\r\n\t\tstate.setFlipSided( material.side === THREE.BackSide );\r\n\r\n\t};\r\n\r\n\t// Textures\r\n\r\n\tfunction setTextureParameters ( textureType, texture, isImagePowerOfTwo ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( isImagePowerOfTwo ) {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, paramThreeToGL( texture.wrapS ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, paramThreeToGL( texture.wrapT ) );\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, paramThreeToGL( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, paramThreeToGL( texture.minFilter ) );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE );\r\n\r\n\t\t\tif ( texture.wrapS !== THREE.ClampToEdgeWrapping || texture.wrapT !== THREE.ClampToEdgeWrapping ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MAG_FILTER, filterFallback( texture.magFilter ) );\r\n\t\t\t_gl.texParameteri( textureType, _gl.TEXTURE_MIN_FILTER, filterFallback( texture.minFilter ) );\r\n\r\n\t\t\tif ( texture.minFilter !== THREE.NearestFilter && texture.minFilter !== THREE.LinearFilter ) {\r\n\r\n\t\t\t\tTHREE.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter. ( ' + texture.sourceFile + ' )' );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_texture_filter_anisotropic' );\r\n\r\n\t\tif ( extension && texture.type !== THREE.FloatType && texture.type !== THREE.HalfFloatType ) {\r\n\r\n\t\t\tif ( texture.anisotropy > 1 || texture.__currentAnisotropy ) {\r\n\r\n\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, _this.getMaxAnisotropy() ) );\r\n\t\t\t\ttexture.__currentAnisotropy = texture.anisotropy;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.uploadTexture = function ( texture ) {\r\n\r\n\t\tif ( texture.__webglInit === undefined ) {\r\n\r\n\t\t\ttexture.__webglInit = true;\r\n\r\n\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\ttexture.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t}\r\n\r\n\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha );\r\n\t\t_gl.pixelStorei( _gl.UNPACK_ALIGNMENT, texture.unpackAlignment );\r\n\r\n\t\ttexture.image = clampToMaxSize( texture.image, _maxTextureSize );\r\n\r\n\t\tvar image = texture.image,\r\n\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\tsetTextureParameters( _gl.TEXTURE_2D, texture, isImagePowerOfTwo );\r\n\r\n\t\tvar mipmap, mipmaps = texture.mipmaps;\r\n\r\n\t\tif ( texture instanceof THREE.DataTexture ) {\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, image.width, image.height, 0, glFormat, glType, image.data );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else if ( texture instanceof THREE.CompressedTexture ) {\r\n\r\n\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tmipmap = mipmaps[ i ];\r\n\r\n\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tTHREE.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()\" );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else { // regular Texture (image, video, canvas)\r\n\r\n\t\t\t// use manually created mipmaps if available\r\n\t\t\t// if there are no manual mipmaps\r\n\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\r\n\r\n\t\t\tif ( mipmaps.length > 0 && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\r\n\r\n\t\t\t\t\tmipmap = mipmaps[ i ];\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, i, glFormat, glFormat, glType, mipmap );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.generateMipmaps = false;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, glFormat, glType, texture.image );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\ttexture.needsUpdate = false;\r\n\r\n\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t};\r\n\r\n\tthis.setTexture = function ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\r\n\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t_this.uploadTexture( texture );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, texture.__webglTexture );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction clampToMaxSize ( image, maxSize ) {\r\n\r\n\t\tif ( image.width > maxSize || image.height > maxSize ) {\r\n\r\n\t\t\t// Warning: Scaling through the canvas will only work with images that use\r\n\t\t\t// premultiplied alpha.\r\n\r\n\t\t\tvar scale = maxSize / Math.max( image.width, image.height );\r\n\r\n\t\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\t\tcanvas.width = Math.floor( image.width * scale );\r\n\t\t\tcanvas.height = Math.floor( image.height * scale );\r\n\r\n\t\t\tvar context = canvas.getContext( '2d' );\r\n\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height, 0, 0, canvas.width, canvas.height );\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: image is too big (' + image.width + 'x' + image.height + '). Resized to ' + canvas.width + 'x' + canvas.height, image );\r\n\r\n\t\t\treturn canvas;\r\n\r\n\t\t}\r\n\r\n\t\treturn image;\r\n\r\n\t}\r\n\r\n\tfunction setCubeTexture ( texture, slot ) {\r\n\r\n\t\tif ( texture.image.length === 6 ) {\r\n\r\n\t\t\tif ( texture.needsUpdate ) {\r\n\r\n\t\t\t\tif ( ! texture.image.__webglTextureCube ) {\r\n\r\n\t\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\r\n\r\n\t\t\t\t\ttexture.image.__webglTextureCube = _gl.createTexture();\r\n\r\n\t\t\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t\t_gl.pixelStorei( _gl.UNPACK_FLIP_Y_WEBGL, texture.flipY );\r\n\r\n\t\t\t\tvar isCompressed = texture instanceof THREE.CompressedTexture;\r\n\t\t\t\tvar isDataTexture = texture.image[ 0 ] instanceof THREE.DataTexture;\r\n\r\n\t\t\t\tvar cubeImage = [];\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( _this.autoScaleCubemaps && ! isCompressed && ! isDataTexture ) {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = clampToMaxSize( texture.image[ i ], _maxCubemapSize );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar image = cubeImage[ 0 ],\r\n\t\t\t\tisImagePowerOfTwo = THREE.Math.isPowerOfTwo( image.width ) && THREE.Math.isPowerOfTwo( image.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( texture.format ),\r\n\t\t\t\tglType = paramThreeToGL( texture.type );\r\n\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, texture, isImagePowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\tif ( ! isCompressed ) {\r\n\r\n\t\t\t\t\t\tif ( isDataTexture ) {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, glFormat, glType, cubeImage[ i ] );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvar mipmap, mipmaps = cubeImage[ i ].mipmaps;\r\n\r\n\t\t\t\t\t\tfor ( var j = 0, jl = mipmaps.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\t\t\tmipmap = mipmaps[ j ];\r\n\r\n\t\t\t\t\t\t\tif ( texture.format !== THREE.RGBAFormat && texture.format !== THREE.RGBFormat ) {\r\n\r\n\t\t\t\t\t\t\t\tif ( getCompressedTextureFormats().indexOf( glFormat ) > -1 ) {\r\n\r\n\t\t\t\t\t\t\t\t\t_gl.compressedTexImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t\tTHREE.warn( \"THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setCubeTexture()\" );\r\n\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( texture.generateMipmaps && isImagePowerOfTwo ) {\r\n\r\n\t\t\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\ttexture.needsUpdate = false;\r\n\r\n\t\t\t\tif ( texture.onUpdate ) texture.onUpdate();\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.image.__webglTextureCube );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction setCubeTextureDynamic ( texture, slot ) {\r\n\r\n\t\t_gl.activeTexture( _gl.TEXTURE0 + slot );\r\n\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, texture.__webglTexture );\r\n\r\n\t}\r\n\r\n\t// Render targets\r\n\r\n\tfunction setupFrameBuffer ( framebuffer, renderTarget, textureTarget ) {\r\n\r\n\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t_gl.framebufferTexture2D( _gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureTarget, renderTarget.__webglTexture, 0 );\r\n\r\n\t}\r\n\r\n\tfunction setupRenderBuffer ( renderbuffer, renderTarget  ) {\r\n\r\n\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_COMPONENT16, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t/* For some reason this is not working. Defaulting to RGBA4.\r\n\t\t} else if ( ! renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.STENCIL_INDEX8, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\t\t*/\r\n\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height );\r\n\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.renderbufferStorage( _gl.RENDERBUFFER, _gl.RGBA4, renderTarget.width, renderTarget.height );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.setRenderTarget = function ( renderTarget ) {\r\n\r\n\t\tvar isCube = ( renderTarget instanceof THREE.WebGLRenderTargetCube );\r\n\r\n\t\tif ( renderTarget && renderTarget.__webglFramebuffer === undefined ) {\r\n\r\n\t\t\tif ( renderTarget.depthBuffer === undefined ) renderTarget.depthBuffer = true;\r\n\t\t\tif ( renderTarget.stencilBuffer === undefined ) renderTarget.stencilBuffer = true;\r\n\r\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\r\n\r\n\t\t\trenderTarget.__webglTexture = _gl.createTexture();\r\n\r\n\t\t\t_this.info.memory.textures ++;\r\n\r\n\t\t\t// Setup texture, create render and frame buffers\r\n\r\n\t\t\tvar isTargetPowerOfTwo = THREE.Math.isPowerOfTwo( renderTarget.width ) && THREE.Math.isPowerOfTwo( renderTarget.height ),\r\n\t\t\t\tglFormat = paramThreeToGL( renderTarget.format ),\r\n\t\t\t\tglType = paramThreeToGL( renderTarget.type );\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = [];\r\n\t\t\t\trenderTarget.__webglRenderbuffer = [];\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_CUBE_MAP, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglFramebuffer[ i ] = _gl.createFramebuffer();\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer[ i ] = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t\t_gl.texImage2D( _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer[ i ], renderTarget, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i );\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer[ i ], renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderTarget.__webglFramebuffer = _gl.createFramebuffer();\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = renderTarget.shareDepthFrom.__webglRenderbuffer;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\trenderTarget.__webglRenderbuffer = _gl.createRenderbuffer();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t\tsetTextureParameters( _gl.TEXTURE_2D, renderTarget, isTargetPowerOfTwo );\r\n\r\n\t\t\t\t_gl.texImage2D( _gl.TEXTURE_2D, 0, glFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\r\n\r\n\t\t\t\tsetupFrameBuffer( renderTarget.__webglFramebuffer, renderTarget, _gl.TEXTURE_2D );\r\n\r\n\t\t\t\tif ( renderTarget.shareDepthFrom ) {\r\n\r\n\t\t\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\r\n\r\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( _gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderTarget.__webglRenderbuffer );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tsetupRenderBuffer( renderTarget.__webglRenderbuffer, renderTarget );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( isTargetPowerOfTwo ) _gl.generateMipmap( _gl.TEXTURE_2D );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Release everything\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t_gl.bindRenderbuffer( _gl.RENDERBUFFER, null );\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, null );\r\n\r\n\t\t}\r\n\r\n\t\tvar framebuffer, width, height, vx, vy;\r\n\r\n\t\tif ( renderTarget ) {\r\n\r\n\t\t\tif ( isCube ) {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer[ renderTarget.activeCubeFace ];\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tframebuffer = renderTarget.__webglFramebuffer;\r\n\r\n\t\t\t}\r\n\r\n\t\t\twidth = renderTarget.width;\r\n\t\t\theight = renderTarget.height;\r\n\r\n\t\t\tvx = 0;\r\n\t\t\tvy = 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tframebuffer = null;\r\n\r\n\t\t\twidth = _viewportWidth;\r\n\t\t\theight = _viewportHeight;\r\n\r\n\t\t\tvx = _viewportX;\r\n\t\t\tvy = _viewportY;\r\n\r\n\t\t}\r\n\r\n\t\tif ( framebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, framebuffer );\r\n\t\t\t_gl.viewport( vx, vy, width, height );\r\n\r\n\t\t\t_currentFramebuffer = framebuffer;\r\n\r\n\t\t}\r\n\r\n\t\t_currentWidth = width;\r\n\t\t_currentHeight = height;\r\n\r\n\t};\r\n\r\n\tthis.readRenderTargetPixels = function( renderTarget, x, y, width, height, buffer ) {\r\n\r\n\t\tif ( ! ( renderTarget instanceof THREE.WebGLRenderTarget ) ) {\r\n\r\n\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\r\n\t\t\treturn;\r\n\r\n\t\t}\r\n\r\n\t\tif ( renderTarget.__webglFramebuffer ) {\r\n\r\n\t\t\tif ( renderTarget.format !== THREE.RGBAFormat ) {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA format. readPixels can read only RGBA format.' );\r\n\t\t\t\treturn;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar restore = false;\r\n\r\n\t\t\tif ( renderTarget.__webglFramebuffer !== _currentFramebuffer ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, renderTarget.__webglFramebuffer );\r\n\r\n\t\t\t\trestore = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( _gl.checkFramebufferStatus( _gl.FRAMEBUFFER ) === _gl.FRAMEBUFFER_COMPLETE ) {\r\n\r\n\t\t\t\t_gl.readPixels( x, y, width, height, _gl.RGBA, _gl.UNSIGNED_BYTE, buffer );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( restore ) {\r\n\r\n\t\t\t\t_gl.bindFramebuffer( _gl.FRAMEBUFFER, _currentFramebuffer );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tfunction updateRenderTargetMipmap ( renderTarget ) {\r\n\r\n\t\tif ( renderTarget instanceof THREE.WebGLRenderTargetCube ) {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_CUBE_MAP );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_CUBE_MAP, null );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, renderTarget.__webglTexture );\r\n\t\t\t_gl.generateMipmap( _gl.TEXTURE_2D );\r\n\t\t\t_gl.bindTexture( _gl.TEXTURE_2D, null );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Fallback filters for non-power-of-2 textures\r\n\r\n\tfunction filterFallback ( f ) {\r\n\r\n\t\tif ( f === THREE.NearestFilter || f === THREE.NearestMipMapNearestFilter || f === THREE.NearestMipMapLinearFilter ) {\r\n\r\n\t\t\treturn _gl.NEAREST;\r\n\r\n\t\t}\r\n\r\n\t\treturn _gl.LINEAR;\r\n\r\n\t}\r\n\r\n\t// Map three.js constants to WebGL constants\r\n\r\n\tfunction paramThreeToGL ( p ) {\r\n\r\n\t\tvar extension;\r\n\r\n\t\tif ( p === THREE.RepeatWrapping ) return _gl.REPEAT;\r\n\t\tif ( p === THREE.ClampToEdgeWrapping ) return _gl.CLAMP_TO_EDGE;\r\n\t\tif ( p === THREE.MirroredRepeatWrapping ) return _gl.MIRRORED_REPEAT;\r\n\r\n\t\tif ( p === THREE.NearestFilter ) return _gl.NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapNearestFilter ) return _gl.NEAREST_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.NearestMipMapLinearFilter ) return _gl.NEAREST_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.LinearFilter ) return _gl.LINEAR;\r\n\t\tif ( p === THREE.LinearMipMapNearestFilter ) return _gl.LINEAR_MIPMAP_NEAREST;\r\n\t\tif ( p === THREE.LinearMipMapLinearFilter ) return _gl.LINEAR_MIPMAP_LINEAR;\r\n\r\n\t\tif ( p === THREE.UnsignedByteType ) return _gl.UNSIGNED_BYTE;\r\n\t\tif ( p === THREE.UnsignedShort4444Type ) return _gl.UNSIGNED_SHORT_4_4_4_4;\r\n\t\tif ( p === THREE.UnsignedShort5551Type ) return _gl.UNSIGNED_SHORT_5_5_5_1;\r\n\t\tif ( p === THREE.UnsignedShort565Type ) return _gl.UNSIGNED_SHORT_5_6_5;\r\n\r\n\t\tif ( p === THREE.ByteType ) return _gl.BYTE;\r\n\t\tif ( p === THREE.ShortType ) return _gl.SHORT;\r\n\t\tif ( p === THREE.UnsignedShortType ) return _gl.UNSIGNED_SHORT;\r\n\t\tif ( p === THREE.IntType ) return _gl.INT;\r\n\t\tif ( p === THREE.UnsignedIntType ) return _gl.UNSIGNED_INT;\r\n\t\tif ( p === THREE.FloatType ) return _gl.FLOAT;\r\n\r\n\t\textension = extensions.get( 'OES_texture_half_float' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.HalfFloatType ) return extension.HALF_FLOAT_OES;\r\n\r\n\t\t}\r\n\r\n\t\tif ( p === THREE.AlphaFormat ) return _gl.ALPHA;\r\n\t\tif ( p === THREE.RGBFormat ) return _gl.RGB;\r\n\t\tif ( p === THREE.RGBAFormat ) return _gl.RGBA;\r\n\t\tif ( p === THREE.LuminanceFormat ) return _gl.LUMINANCE;\r\n\t\tif ( p === THREE.LuminanceAlphaFormat ) return _gl.LUMINANCE_ALPHA;\r\n\r\n\t\tif ( p === THREE.AddEquation ) return _gl.FUNC_ADD;\r\n\t\tif ( p === THREE.SubtractEquation ) return _gl.FUNC_SUBTRACT;\r\n\t\tif ( p === THREE.ReverseSubtractEquation ) return _gl.FUNC_REVERSE_SUBTRACT;\r\n\r\n\t\tif ( p === THREE.ZeroFactor ) return _gl.ZERO;\r\n\t\tif ( p === THREE.OneFactor ) return _gl.ONE;\r\n\t\tif ( p === THREE.SrcColorFactor ) return _gl.SRC_COLOR;\r\n\t\tif ( p === THREE.OneMinusSrcColorFactor ) return _gl.ONE_MINUS_SRC_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaFactor ) return _gl.SRC_ALPHA;\r\n\t\tif ( p === THREE.OneMinusSrcAlphaFactor ) return _gl.ONE_MINUS_SRC_ALPHA;\r\n\t\tif ( p === THREE.DstAlphaFactor ) return _gl.DST_ALPHA;\r\n\t\tif ( p === THREE.OneMinusDstAlphaFactor ) return _gl.ONE_MINUS_DST_ALPHA;\r\n\r\n\t\tif ( p === THREE.DstColorFactor ) return _gl.DST_COLOR;\r\n\t\tif ( p === THREE.OneMinusDstColorFactor ) return _gl.ONE_MINUS_DST_COLOR;\r\n\t\tif ( p === THREE.SrcAlphaSaturateFactor ) return _gl.SRC_ALPHA_SATURATE;\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_S3TC_DXT1_Format ) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT1_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT3_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\r\n\t\t\tif ( p === THREE.RGBA_S3TC_DXT5_Format ) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.RGB_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGB_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_4BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\r\n\t\t\tif ( p === THREE.RGBA_PVRTC_2BPPV1_Format ) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\r\n\r\n\t\t}\r\n\r\n\t\textension = extensions.get( 'EXT_blend_minmax' );\r\n\r\n\t\tif ( extension !== null ) {\r\n\r\n\t\t\tif ( p === THREE.MinEquation ) return extension.MIN_EXT;\r\n\t\t\tif ( p === THREE.MaxEquation ) return extension.MAX_EXT;\r\n\r\n\t\t}\r\n\r\n\t\treturn 0;\r\n\r\n\t}\r\n\r\n\t// Allocations\r\n\r\n\tfunction allocateBones ( object ) {\r\n\r\n\t\tif ( _supportsBoneTextures && object && object.skeleton && object.skeleton.useVertexTexture ) {\r\n\r\n\t\t\treturn 1024;\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// default for when object is not specified\r\n\t\t\t// ( for example when prebuilding shader\r\n\t\t\t//   to be used with multiple objects )\r\n\t\t\t//\r\n\t\t\t//  - leave some extra space for other uniforms\r\n\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\r\n\t\t\t//    (up to 54 should be safe)\r\n\r\n\t\t\tvar nVertexUniforms = _gl.getParameter( _gl.MAX_VERTEX_UNIFORM_VECTORS );\r\n\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\r\n\r\n\t\t\tvar maxBones = nVertexMatrices;\r\n\r\n\t\t\tif ( object !== undefined && object instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\t\tmaxBones = Math.min( object.skeleton.bones.length, maxBones );\r\n\r\n\t\t\t\tif ( maxBones < object.skeleton.bones.length ) {\r\n\r\n\t\t\t\t\tTHREE.warn( 'WebGLRenderer: too many bones - ' + object.skeleton.bones.length + ', this GPU supports just ' + maxBones + ' (try OpenGL instead of ANGLE)' );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn maxBones;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction allocateLights( lights ) {\r\n\r\n\t\tvar dirLights = 0;\r\n\t\tvar pointLights = 0;\r\n\t\tvar spotLights = 0;\r\n\t\tvar hemiLights = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( light.onlyShadow || light.visible === false ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.DirectionalLight ) dirLights ++;\r\n\t\t\tif ( light instanceof THREE.PointLight ) pointLights ++;\r\n\t\t\tif ( light instanceof THREE.SpotLight ) spotLights ++;\r\n\t\t\tif ( light instanceof THREE.HemisphereLight ) hemiLights ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn { 'directional': dirLights, 'point': pointLights, 'spot': spotLights, 'hemi': hemiLights };\r\n\r\n\t}\r\n\r\n\tfunction allocateShadows( lights ) {\r\n\r\n\t\tvar maxShadows = 0;\r\n\r\n\t\tfor ( var l = 0, ll = lights.length; l < ll; l ++ ) {\r\n\r\n\t\t\tvar light = lights[ l ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( light instanceof THREE.SpotLight ) maxShadows ++;\r\n\t\t\tif ( light instanceof THREE.DirectionalLight && ! light.shadowCascade ) maxShadows ++;\r\n\r\n\t\t}\r\n\r\n\t\treturn maxShadows;\r\n\r\n\t}\r\n\r\n\t// DEPRECATED\r\n\r\n\tthis.initMaterial = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPrePlugin = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.addPostPlugin = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\r\n\r\n\t};\r\n\r\n\tthis.updateShadowMap = function () {\r\n\r\n\t\tTHREE.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/WebGLRenderTarget.js\r\n\r\n/**\r\n * @author szimek / https://github.com/szimek/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.WebGLRenderTarget = function ( width, height, options ) {\r\n\r\n\tthis.width = width;\r\n\tthis.height = height;\r\n\r\n\toptions = options || {};\r\n\r\n\tthis.wrapS = options.wrapS !== undefined ? options.wrapS : THREE.ClampToEdgeWrapping;\r\n\tthis.wrapT = options.wrapT !== undefined ? options.wrapT : THREE.ClampToEdgeWrapping;\r\n\r\n\tthis.magFilter = options.magFilter !== undefined ? options.magFilter : THREE.LinearFilter;\r\n\tthis.minFilter = options.minFilter !== undefined ? options.minFilter : THREE.LinearMipMapLinearFilter;\r\n\r\n\tthis.anisotropy = options.anisotropy !== undefined ? options.anisotropy : 1;\r\n\r\n\tthis.offset = new THREE.Vector2( 0, 0 );\r\n\tthis.repeat = new THREE.Vector2( 1, 1 );\r\n\r\n\tthis.format = options.format !== undefined ? options.format : THREE.RGBAFormat;\r\n\tthis.type = options.type !== undefined ? options.type : THREE.UnsignedByteType;\r\n\r\n\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\r\n\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\r\n\r\n\tthis.generateMipmaps = true;\r\n\r\n\tthis.shareDepthFrom = options.shareDepthFrom !== undefined ? options.shareDepthFrom : null;\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTarget.prototype = {\r\n\r\n\tconstructor: THREE.WebGLRenderTarget,\r\n\r\n\tsetSize: function ( width, height ) {\r\n\r\n\t\tthis.width = width;\r\n\t\tthis.height = height;\r\n\r\n\t},\r\n\r\n\tclone: function () {\r\n\r\n\t\tvar tmp = new THREE.WebGLRenderTarget( this.width, this.height );\r\n\r\n\t\ttmp.wrapS = this.wrapS;\r\n\t\ttmp.wrapT = this.wrapT;\r\n\r\n\t\ttmp.magFilter = this.magFilter;\r\n\t\ttmp.minFilter = this.minFilter;\r\n\r\n\t\ttmp.anisotropy = this.anisotropy;\r\n\r\n\t\ttmp.offset.copy( this.offset );\r\n\t\ttmp.repeat.copy( this.repeat );\r\n\r\n\t\ttmp.format = this.format;\r\n\t\ttmp.type = this.type;\r\n\r\n\t\ttmp.depthBuffer = this.depthBuffer;\r\n\t\ttmp.stencilBuffer = this.stencilBuffer;\r\n\r\n\t\ttmp.generateMipmaps = this.generateMipmaps;\r\n\r\n\t\ttmp.shareDepthFrom = this.shareDepthFrom;\r\n\r\n\t\treturn tmp;\r\n\r\n\t},\r\n\r\n\tdispose: function () {\r\n\r\n\t\tthis.dispatchEvent( { type: 'dispose' } );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.EventDispatcher.prototype.apply( THREE.WebGLRenderTarget.prototype );\r\n\r\n// File:src/renderers/WebGLRenderTargetCube.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com\r\n */\r\n\r\nTHREE.WebGLRenderTargetCube = function ( width, height, options ) {\r\n\r\n\tTHREE.WebGLRenderTarget.call( this, width, height, options );\r\n\r\n\tthis.activeCubeFace = 0; // PX 0, NX 1, PY 2, NY 3, PZ 4, NZ 5\r\n\r\n};\r\n\r\nTHREE.WebGLRenderTargetCube.prototype = Object.create( THREE.WebGLRenderTarget.prototype );\r\nTHREE.WebGLRenderTargetCube.prototype.constructor = THREE.WebGLRenderTargetCube;\r\n\r\n// File:src/renderers/webgl/WebGLExtensions.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLExtensions = function ( gl ) {\r\n\r\n\tvar extensions = {};\r\n\r\n\tthis.get = function ( name ) {\r\n\r\n\t\tif ( extensions[ name ] !== undefined ) {\r\n\r\n\t\t\treturn extensions[ name ];\r\n\r\n\t\t}\r\n\r\n\t\tvar extension;\r\n\r\n\t\tswitch ( name ) {\r\n\r\n\t\t\tcase 'EXT_texture_filter_anisotropic':\r\n\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_s3tc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\r\n\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\r\n\t\t\t\tbreak;\r\n\r\n\t\t\tdefault:\r\n\t\t\t\textension = gl.getExtension( name );\r\n\r\n\t\t}\r\n\r\n\t\tif ( extension === null ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\r\n\r\n\t\t}\r\n\r\n\t\textensions[ name ] = extension;\r\n\r\n\t\treturn extension;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/WebGLProgram.js\r\n\r\nTHREE.WebGLProgram = ( function () {\r\n\r\n\tvar programIdCount = 0;\r\n\r\n\tvar generateDefines = function ( defines ) {\r\n\r\n\t\tvar value, chunk, chunks = [];\r\n\r\n\t\tfor ( var d in defines ) {\r\n\r\n\t\t\tvalue = defines[ d ];\r\n\t\t\tif ( value === false ) continue;\r\n\r\n\t\t\tchunk = '#define ' + d + ' ' + value;\r\n\t\t\tchunks.push( chunk );\r\n\r\n\t\t}\r\n\r\n\t\treturn chunks.join( '\\n' );\r\n\r\n\t};\r\n\r\n\tvar cacheUniformLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar uniforms = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tuniforms[ id ] = gl.getUniformLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn uniforms;\r\n\r\n\t};\r\n\r\n\tvar cacheAttributeLocations = function ( gl, program, identifiers ) {\r\n\r\n\t\tvar attributes = {};\r\n\r\n\t\tfor ( var i = 0, l = identifiers.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar id = identifiers[ i ];\r\n\t\t\tattributes[ id ] = gl.getAttribLocation( program, id );\r\n\r\n\t\t}\r\n\r\n\t\treturn attributes;\r\n\r\n\t};\r\n\r\n\treturn function ( renderer, code, material, parameters ) {\r\n\r\n\t\tvar _this = renderer;\r\n\t\tvar _gl = _this.context;\r\n\r\n\t\tvar defines = material.defines;\r\n\t\tvar uniforms = material.__webglShader.uniforms;\r\n\t\tvar attributes = material.attributes;\r\n\r\n\t\tvar vertexShader = material.__webglShader.vertexShader;\r\n\t\tvar fragmentShader = material.__webglShader.fragmentShader;\r\n\r\n\t\tvar index0AttributeName = material.index0AttributeName;\r\n\r\n\t\tif ( index0AttributeName === undefined && parameters.morphTargets === true ) {\r\n\r\n\t\t\t// programs with morphTargets displace position out of attribute 0\r\n\r\n\t\t\tindex0AttributeName = 'position';\r\n\r\n\t\t}\r\n\r\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\r\n\r\n\t\tif ( parameters.shadowMapType === THREE.PCFShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\r\n\r\n\t\t} else if ( parameters.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\r\n\r\n\t\t}\r\n\r\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\r\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\r\n\t\tif ( parameters.envMap ) {\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeReflectionMapping:\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.EquirectangularReflectionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.SphericalReflectionMapping:\r\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.envMap.mapping ) {\r\n\r\n\t\t\t\tcase THREE.CubeRefractionMapping:\r\n\t\t\t\tcase THREE.EquirectangularRefractionMapping:\r\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tswitch ( material.combine ) {\r\n\r\n\t\t\t\tcase THREE.MultiplyOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.MixOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase THREE.AddOperation:\r\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\r\n\r\n\t\t// console.log( 'building new program ' );\r\n\r\n\t\t//\r\n\r\n\t\tvar customDefines = generateDefines( defines );\r\n\r\n\t\t//\r\n\r\n\t\tvar program = _gl.createProgram();\r\n\r\n\t\tvar prefix_vertex, prefix_fragment;\r\n\r\n\t\tif ( material instanceof THREE.RawShaderMaterial ) {\r\n\r\n\t\t\tprefix_vertex = '';\r\n\t\t\tprefix_fragment = '';\r\n\r\n\t\t} else {\r\n\r\n\t\t\tprefix_vertex = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED': '',\r\n\r\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\r\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\r\n\r\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\r\n\t\t\t\tparameters.morphNormals ? '#define USE_MORPHNORMALS' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\r\n\t\t\t\t'uniform mat4 modelMatrix;',\r\n\t\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform mat3 normalMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\r\n\t\t\t\t'attribute vec3 position;',\r\n\t\t\t\t'attribute vec3 normal;',\r\n\t\t\t\t'attribute vec2 uv;',\r\n\t\t\t\t'attribute vec2 uv2;',\r\n\r\n\t\t\t\t'#ifdef USE_COLOR',\r\n\r\n\t\t\t\t'\tattribute vec3 color;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\r\n\r\n\t\t\t\t'\tattribute vec3 morphTarget0;',\r\n\t\t\t\t'\tattribute vec3 morphTarget1;',\r\n\t\t\t\t'\tattribute vec3 morphTarget2;',\r\n\t\t\t\t'\tattribute vec3 morphTarget3;',\r\n\r\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\r\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\r\n\r\n\t\t\t\t'\t#else',\r\n\r\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\r\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\r\n\r\n\t\t\t\t'\t#endif',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t'#ifdef USE_SKINNING',\r\n\r\n\t\t\t\t'\tattribute vec4 skinIndex;',\r\n\t\t\t\t'\tattribute vec4 skinWeight;',\r\n\r\n\t\t\t\t'#endif',\r\n\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t\tprefix_fragment = [\r\n\r\n\t\t\t\t'precision ' + parameters.precision + ' float;',\r\n\t\t\t\t'precision ' + parameters.precision + ' int;',\r\n\r\n\t\t\t\t( parameters.bumpMap || parameters.normalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\r\n\r\n\t\t\t\tcustomDefines,\r\n\r\n\t\t\t\t'#define MAX_DIR_LIGHTS ' + parameters.maxDirLights,\r\n\t\t\t\t'#define MAX_POINT_LIGHTS ' + parameters.maxPointLights,\r\n\t\t\t\t'#define MAX_SPOT_LIGHTS ' + parameters.maxSpotLights,\r\n\t\t\t\t'#define MAX_HEMI_LIGHTS ' + parameters.maxHemiLights,\r\n\r\n\t\t\t\t'#define MAX_SHADOWS ' + parameters.maxShadows,\r\n\r\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest : '',\r\n\r\n\t\t\t\t_this.gammaInput ? '#define GAMMA_INPUT' : '',\r\n\t\t\t\t_this.gammaOutput ? '#define GAMMA_OUTPUT' : '',\r\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\r\n\r\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\r\n\t\t\t\t( parameters.useFog && parameters.fogExp ) ? '#define FOG_EXP2' : '',\r\n\r\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\r\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\r\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\r\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\r\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\r\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\r\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\r\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\r\n\r\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED': '',\r\n\r\n\t\t\t\tparameters.metal ? '#define METAL' : '',\r\n\t\t\t\tparameters.wrapAround ? '#define WRAP_AROUND' : '',\r\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\r\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\r\n\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\r\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\r\n\t\t\t\tparameters.shadowMapDebug ? '#define SHADOWMAP_DEBUG' : '',\r\n\t\t\t\tparameters.shadowMapCascade ? '#define SHADOWMAP_CASCADE' : '',\r\n\r\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\r\n\t\t\t\t//_this._glExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '',\r\n\r\n\t\t\t\t'uniform mat4 viewMatrix;',\r\n\t\t\t\t'uniform vec3 cameraPosition;',\r\n\t\t\t\t''\r\n\r\n\t\t\t].join( '\\n' );\r\n\r\n\t\t}\r\n\r\n\t\tvar glVertexShader = new THREE.WebGLShader( _gl, _gl.VERTEX_SHADER, prefix_vertex + vertexShader );\r\n\t\tvar glFragmentShader = new THREE.WebGLShader( _gl, _gl.FRAGMENT_SHADER, prefix_fragment + fragmentShader );\r\n\r\n\t\t_gl.attachShader( program, glVertexShader );\r\n\t\t_gl.attachShader( program, glFragmentShader );\r\n\r\n\t\tif ( index0AttributeName !== undefined ) {\r\n\r\n\t\t\t// Force a particular attribute to index 0.\r\n\t\t\t// because potentially expensive emulation is done by browser if attribute 0 is disabled.\r\n\t\t\t// And, color, for example is often automatically bound to index 0 so disabling it\r\n\r\n\t\t\t_gl.bindAttribLocation( program, 0, index0AttributeName );\r\n\r\n\t\t}\r\n\r\n\t\t_gl.linkProgram( program );\r\n\r\n\t\tvar programLogInfo = _gl.getProgramInfoLog( program );\r\n\r\n\t\tif ( _gl.getProgramParameter( program, _gl.LINK_STATUS ) === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLProgram: shader error: ' + _gl.getError(), 'gl.VALIDATE_STATUS', _gl.getProgramParameter( program, _gl.VALIDATE_STATUS ), 'gl.getPRogramInfoLog', programLogInfo );\r\n\r\n\t\t}\r\n\r\n\t\tif ( programLogInfo !== '' ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()' + programLogInfo );\r\n\t\t\t// THREE.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glVertexShader ) );\r\n\t\t\t// THREE.warn( _gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( glFragmentShader ) );\r\n\r\n\t\t}\r\n\r\n\t\t// clean up\r\n\r\n\t\t_gl.deleteShader( glVertexShader );\r\n\t\t_gl.deleteShader( glFragmentShader );\r\n\r\n\t\t// cache uniform locations\r\n\r\n\t\tvar identifiers = [\r\n\r\n\t\t\t'viewMatrix',\r\n\t\t\t'modelViewMatrix',\r\n\t\t\t'projectionMatrix',\r\n\t\t\t'normalMatrix',\r\n\t\t\t'modelMatrix',\r\n\t\t\t'cameraPosition',\r\n\t\t\t'morphTargetInfluences',\r\n\t\t\t'bindMatrix',\r\n\t\t\t'bindMatrixInverse'\r\n\r\n\t\t];\r\n\r\n\t\tif ( parameters.useVertexTexture ) {\r\n\r\n\t\t\tidentifiers.push( 'boneTexture' );\r\n\t\t\tidentifiers.push( 'boneTextureWidth' );\r\n\t\t\tidentifiers.push( 'boneTextureHeight' );\r\n\r\n\t\t} else {\r\n\r\n\t\t\tidentifiers.push( 'boneGlobalMatrices' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( parameters.logarithmicDepthBuffer ) {\r\n\r\n\t\t\tidentifiers.push('logDepthBufFC');\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( var u in uniforms ) {\r\n\r\n\t\t\tidentifiers.push( u );\r\n\r\n\t\t}\r\n\r\n\t\tthis.uniforms = cacheUniformLocations( _gl, program, identifiers );\r\n\r\n\t\t// cache attributes locations\r\n\r\n\t\tidentifiers = [\r\n\r\n\t\t\t'position',\r\n\t\t\t'normal',\r\n\t\t\t'uv',\r\n\t\t\t'uv2',\r\n\t\t\t'tangent',\r\n\t\t\t'color',\r\n\t\t\t'skinIndex',\r\n\t\t\t'skinWeight',\r\n\t\t\t'lineDistance'\r\n\r\n\t\t];\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphTargets; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphTarget' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < parameters.maxMorphNormals; i ++ ) {\r\n\r\n\t\t\tidentifiers.push( 'morphNormal' + i );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var a in attributes ) {\r\n\r\n\t\t\tidentifiers.push( a );\r\n\r\n\t\t}\r\n\r\n\t\tthis.attributes = cacheAttributeLocations( _gl, program, identifiers );\r\n\t\tthis.attributesKeys = Object.keys( this.attributes );\r\n\r\n\t\t//\r\n\r\n\t\tthis.id = programIdCount ++;\r\n\t\tthis.code = code;\r\n\t\tthis.usedTimes = 1;\r\n\t\tthis.program = program;\r\n\t\tthis.vertexShader = glVertexShader;\r\n\t\tthis.fragmentShader = glFragmentShader;\r\n\r\n\t\treturn this;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLShader.js\r\n\r\nTHREE.WebGLShader = ( function () {\r\n\r\n\tvar addLineNumbers = function ( string ) {\r\n\r\n\t\tvar lines = string.split( '\\n' );\r\n\r\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\r\n\r\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\r\n\r\n\t\t}\r\n\r\n\t\treturn lines.join( '\\n' );\r\n\r\n\t};\r\n\r\n\treturn function ( gl, type, string ) {\r\n\r\n\t\tvar shader = gl.createShader( type ); \r\n\r\n\t\tgl.shaderSource( shader, string );\r\n\t\tgl.compileShader( shader );\r\n\r\n\t\tif ( gl.getShaderParameter( shader, gl.COMPILE_STATUS ) === false ) {\r\n\r\n\t\t\tTHREE.error( 'THREE.WebGLShader: Shader couldn\\'t compile.' );\r\n\r\n\t\t}\r\n\r\n\t\tif ( gl.getShaderInfoLog( shader ) !== '' ) {\r\n\r\n\t\t\tTHREE.warn( 'THREE.WebGLShader: gl.getShaderInfoLog()', gl.getShaderInfoLog( shader ), addLineNumbers( string ) );\r\n\r\n\t\t}\r\n\r\n\t\t// --enable-privileged-webgl-extension\r\n\t\t// console.log( type, gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\r\n\r\n\t\treturn shader;\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/renderers/webgl/WebGLState.js\r\n\r\n/**\r\n* @author mrdoob / http://mrdoob.com/\r\n*/\r\n\r\nTHREE.WebGLState = function ( gl, paramThreeToGL ) {\r\n\r\n\tvar newAttributes = new Uint8Array( 16 );\r\n\tvar enabledAttributes = new Uint8Array( 16 );\r\n\r\n\tvar currentBlending = null;\r\n\tvar currentBlendEquation = null;\r\n\tvar currentBlendSrc = null;\r\n\tvar currentBlendDst = null;\r\n\tvar currentBlendEquationAlpha = null;\r\n\tvar currentBlendSrcAlpha = null;\r\n\tvar currentBlendDstAlpha = null;\r\n\r\n\tvar currentDepthTest = null;\r\n\tvar currentDepthWrite = null;\r\n\r\n\tvar currentColorWrite = null;\r\n\r\n\tvar currentDoubleSided = null;\r\n\tvar currentFlipSided = null;\r\n\r\n\tvar currentLineWidth = null;\r\n\r\n\tvar currentPolygonOffset = null;\r\n\tvar currentPolygonOffsetFactor = null;\r\n\tvar currentPolygonOffsetUnits = null;\r\n\r\n\tthis.initAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tnewAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.enableAttribute = function ( attribute ) {\r\n\r\n\t\tnewAttributes[ attribute ] = 1;\r\n\r\n\t\tif ( enabledAttributes[ attribute ] === 0 ) {\r\n\r\n\t\t\tgl.enableVertexAttribArray( attribute );\r\n\t\t\tenabledAttributes[ attribute ] = 1;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.disableUnusedAttributes = function () {\r\n\r\n\t\tfor ( var i = 0, l = enabledAttributes.length; i < l; i ++ ) {\r\n\r\n\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\r\n\r\n\t\t\t\tgl.disableVertexAttribArray( i );\r\n\t\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setBlending = function ( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha ) {\r\n\r\n\t\tif ( blending !== currentBlending ) {\r\n\r\n\t\t\tif ( blending === THREE.NoBlending ) {\r\n\r\n\t\t\t\tgl.disable( gl.BLEND );\r\n\r\n\t\t\t} else if ( blending === THREE.AdditiveBlending ) {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.SRC_ALPHA, gl.ONE );\r\n\r\n\t\t\t} else if ( blending === THREE.SubtractiveBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.ONE_MINUS_SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.MultiplyBlending ) {\r\n\r\n\t\t\t\t// TODO: Find blendFuncSeparate() combination\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquation( gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFunc( gl.ZERO, gl.SRC_COLOR );\r\n\r\n\t\t\t} else if ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\t\t\t\tgl.blendEquationSeparate( gl.FUNC_ADD, gl.FUNC_ADD );\r\n\t\t\t\tgl.blendFuncSeparate( gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentBlending = blending;\r\n\r\n\t\t}\r\n\r\n\t\tif ( blending === THREE.CustomBlending ) {\r\n\r\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\r\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\r\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\r\n\r\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\r\n\r\n\t\t\t\tgl.blendEquationSeparate( paramThreeToGL( blendEquation ), paramThreeToGL( blendEquationAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendEquation = blendEquation;\r\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\r\n\r\n\t\t\t\tgl.blendFuncSeparate( paramThreeToGL( blendSrc ), paramThreeToGL( blendDst ), paramThreeToGL( blendSrcAlpha ), paramThreeToGL( blendDstAlpha ) );\r\n\r\n\t\t\t\tcurrentBlendSrc = blendSrc;\r\n\t\t\t\tcurrentBlendDst = blendDst;\r\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\r\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tcurrentBlendEquation = null;\r\n\t\t\tcurrentBlendSrc = null;\r\n\t\t\tcurrentBlendDst = null;\r\n\t\t\tcurrentBlendEquationAlpha = null;\r\n\t\t\tcurrentBlendSrcAlpha = null;\r\n\t\t\tcurrentBlendDstAlpha = null;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthTest = function ( depthTest ) {\r\n\r\n\t\tif ( currentDepthTest !== depthTest ) {\r\n\r\n\t\t\tif ( depthTest ) {\r\n\r\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDepthTest = depthTest;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDepthWrite = function ( depthWrite ) {\r\n\r\n\t\tif ( currentDepthWrite !== depthWrite ) {\r\n\r\n\t\t\tgl.depthMask( depthWrite );\r\n\t\t\tcurrentDepthWrite = depthWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setColorWrite = function ( colorWrite ) {\r\n\r\n\t\tif ( currentColorWrite !== colorWrite ) {\r\n\r\n\t\t\tgl.colorMask( colorWrite, colorWrite, colorWrite, colorWrite );\r\n\t\t\tcurrentColorWrite = colorWrite;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setDoubleSided = function ( doubleSided ) {\r\n\r\n\t\tif ( currentDoubleSided !== doubleSided ) {\r\n\r\n\t\t\tif ( doubleSided ) {\r\n\r\n\t\t\t\tgl.disable( gl.CULL_FACE );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.enable( gl.CULL_FACE );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentDoubleSided = doubleSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setFlipSided = function ( flipSided ) {\r\n\r\n\t\tif ( currentFlipSided !== flipSided ) {\r\n\r\n\t\t\tif ( flipSided ) {\r\n\r\n\t\t\t\tgl.frontFace( gl.CW );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.frontFace( gl.CCW );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentFlipSided = flipSided;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setLineWidth = function ( width ) {\r\n\r\n\t\tif ( width !== currentLineWidth ) {\r\n\r\n\t\t\tgl.lineWidth( width );\r\n\r\n\t\t\tcurrentLineWidth = width;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.setPolygonOffset = function ( polygonoffset, factor, units ) {\r\n\r\n\t\tif ( currentPolygonOffset !== polygonoffset ) {\r\n\r\n\t\t\tif ( polygonoffset ) {\r\n\r\n\t\t\t\tgl.enable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.disable( gl.POLYGON_OFFSET_FILL );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tcurrentPolygonOffset = polygonoffset;\r\n\r\n\t\t}\r\n\r\n\t\tif ( polygonoffset && ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) ) {\r\n\r\n\t\t\tgl.polygonOffset( factor, units );\r\n\r\n\t\t\tcurrentPolygonOffsetFactor = factor;\r\n\t\t\tcurrentPolygonOffsetUnits = units;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\tthis.reset = function () {\r\n\r\n\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\r\n\r\n\t\t\tenabledAttributes[ i ] = 0;\r\n\r\n\t\t}\r\n\r\n\t\tcurrentBlending = null;\r\n\t\tcurrentDepthTest = null;\r\n\t\tcurrentDepthWrite = null;\r\n\t\tcurrentColorWrite = null;\r\n\t\tcurrentDoubleSided = null;\r\n\t\tcurrentFlipSided = null;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/LensFlarePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.LensFlarePlugin = function ( renderer, flares ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\tvar hasVertexTexture;\r\n\r\n\tvar tempTexture, occlusionTexture;\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t-1, -1,  0, 0,\r\n\t\t\t 1, -1,  1, 0,\r\n\t\t\t 1,  1,  1, 1,\r\n\t\t\t-1,  1,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\t// buffers\r\n\r\n\t\tvertexBuffer     = gl.createBuffer();\r\n\t\telementBuffer    = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\t// textures\r\n\r\n\t\ttempTexture      = gl.createTexture();\r\n\t\tocclusionTexture = gl.createTexture();\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGB, 16, 16, 0, gl.RGB, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\tgl.texImage2D( gl.TEXTURE_2D, 0, gl.RGBA, 16, 16, 0, gl.RGBA, gl.UNSIGNED_BYTE, null );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST );\r\n\t\tgl.texParameteri( gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST );\r\n\r\n\t\thasVertexTexture = gl.getParameter( gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS ) > 0;\r\n\r\n\t\tvar shader;\r\n\r\n\t\tif ( hasVertexTexture ) {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 visibility = texture2D( occlusionMap, vec2( 0.1, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.1 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.9 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) );\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.5 ) );\",\r\n\r\n\t\t\t\t\t\t\t\"vVisibility =        visibility.r / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.g / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *=       visibility.b / 9.0;\",\r\n\t\t\t\t\t\t\t\"vVisibility *= 1.0 - visibility.a / 9.0;\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\t\t\t\t\t\"varying float vVisibility;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( 1.0, 0.0, 1.0, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * vVisibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t} else {\r\n\r\n\t\t\tshader = {\r\n\r\n\t\t\t\tvertexShader: [\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform vec3 screenPosition;\",\r\n\t\t\t\t\t\"uniform vec2 scale;\",\r\n\t\t\t\t\t\"uniform float rotation;\",\r\n\r\n\t\t\t\t\t\"attribute vec2 position;\",\r\n\t\t\t\t\t\"attribute vec2 uv;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t\"vUV = uv;\",\r\n\r\n\t\t\t\t\t\t\"vec2 pos = position;\",\r\n\r\n\t\t\t\t\t\t\"if( renderType == 2 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"pos.x = cos( rotation ) * position.x - sin( rotation ) * position.y;\",\r\n\t\t\t\t\t\t\t\"pos.y = sin( rotation ) * position.x + cos( rotation ) * position.y;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\t\"gl_Position = vec4( ( pos * scale + screenPosition.xy ).xy, screenPosition.z, 1.0 );\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" ),\r\n\r\n\t\t\t\tfragmentShader: [\r\n\r\n\t\t\t\t\t\"precision mediump float;\",\r\n\r\n\t\t\t\t\t\"uniform lowp int renderType;\",\r\n\r\n\t\t\t\t\t\"uniform sampler2D map;\",\r\n\t\t\t\t\t\"uniform sampler2D occlusionMap;\",\r\n\t\t\t\t\t\"uniform float opacity;\",\r\n\t\t\t\t\t\"uniform vec3 color;\",\r\n\r\n\t\t\t\t\t\"varying vec2 vUV;\",\r\n\r\n\t\t\t\t\t\"void main() {\",\r\n\r\n\t\t\t\t\t\t// pink square\r\n\r\n\t\t\t\t\t\t\"if( renderType == 0 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = vec4( texture2D( map, vUV ).rgb, 0.0 );\",\r\n\r\n\t\t\t\t\t\t// restore\r\n\r\n\t\t\t\t\t\t\"} else if( renderType == 1 ) {\",\r\n\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture2D( map, vUV );\",\r\n\r\n\t\t\t\t\t\t// flare\r\n\r\n\t\t\t\t\t\t\"} else {\",\r\n\r\n\t\t\t\t\t\t\t\"float visibility = texture2D( occlusionMap, vec2( 0.5, 0.1 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.9, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.5, 0.9 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility += texture2D( occlusionMap, vec2( 0.1, 0.5 ) ).a;\",\r\n\t\t\t\t\t\t\t\"visibility = ( 1.0 - visibility / 4.0 );\",\r\n\r\n\t\t\t\t\t\t\t\"vec4 texture = texture2D( map, vUV );\",\r\n\t\t\t\t\t\t\t\"texture.a *= opacity * visibility;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor = texture;\",\r\n\t\t\t\t\t\t\t\"gl_FragColor.rgb *= color;\",\r\n\r\n\t\t\t\t\t\t\"}\",\r\n\r\n\t\t\t\t\t\"}\"\r\n\r\n\t\t\t\t].join( \"\\n\" )\r\n\r\n\t\t\t};\r\n\r\n\t\t}\r\n\r\n\t\tprogram = createProgram( shader );\r\n\r\n\t\tattributes = {\r\n\t\t\tvertex: gl.getAttribLocation ( program, \"position\" ),\r\n\t\t\tuv:     gl.getAttribLocation ( program, \"uv\" )\r\n\t\t}\r\n\r\n\t\tuniforms = {\r\n\t\t\trenderType:     gl.getUniformLocation( program, \"renderType\" ),\r\n\t\t\tmap:            gl.getUniformLocation( program, \"map\" ),\r\n\t\t\tocclusionMap:   gl.getUniformLocation( program, \"occlusionMap\" ),\r\n\t\t\topacity:        gl.getUniformLocation( program, \"opacity\" ),\r\n\t\t\tcolor:          gl.getUniformLocation( program, \"color\" ),\r\n\t\t\tscale:          gl.getUniformLocation( program, \"scale\" ),\r\n\t\t\trotation:       gl.getUniformLocation( program, \"rotation\" ),\r\n\t\t\tscreenPosition: gl.getUniformLocation( program, \"screenPosition\" )\r\n\t\t};\r\n\r\n\t};\r\n\r\n\t/*\r\n\t * Render lens flares\r\n\t * Method: renders 16x16 0xff00ff-colored points scattered over the light source area,\r\n\t *         reads these back and calculates occlusion.\r\n\t */\r\n\r\n\tthis.render = function ( scene, camera, viewportWidth, viewportHeight ) {\r\n\r\n\t\tif ( flares.length === 0 ) return;\r\n\r\n\t\tvar tempPosition = new THREE.Vector3();\r\n\r\n\t\tvar invAspect = viewportHeight / viewportWidth,\r\n\t\t\thalfViewportWidth = viewportWidth * 0.5,\r\n\t\t\thalfViewportHeight = viewportHeight * 0.5;\r\n\r\n\t\tvar size = 16 / viewportHeight,\r\n\t\t\tscale = new THREE.Vector2( size * invAspect, size );\r\n\r\n\t\tvar screenPosition = new THREE.Vector3( 1, 1, 0 ),\r\n\t\t\tscreenPositionPixels = new THREE.Vector2( 1, 1 );\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.vertex );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\t// loop through all lens flares to update their occlusion and positions\r\n\t\t// setup gl and common used attribs/unforms\r\n\r\n\t\tgl.uniform1i( uniforms.occlusionMap, 0 );\r\n\t\tgl.uniform1i( uniforms.map, 1 );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.vertex, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.depthMask( false );\r\n\r\n\t\tfor ( var i = 0, l = flares.length; i < l; i ++ ) {\r\n\r\n\t\t\tsize = 16 / viewportHeight;\r\n\t\t\tscale.set( size * invAspect, size );\r\n\r\n\t\t\t// calc object screen position\r\n\r\n\t\t\tvar flare = flares[ i ];\r\n\r\n\t\t\ttempPosition.set( flare.matrixWorld.elements[12], flare.matrixWorld.elements[13], flare.matrixWorld.elements[14] );\r\n\r\n\t\t\ttempPosition.applyMatrix4( camera.matrixWorldInverse );\r\n\t\t\ttempPosition.applyProjection( camera.projectionMatrix );\r\n\r\n\t\t\t// setup arrays for gl programs\r\n\r\n\t\t\tscreenPosition.copy( tempPosition )\r\n\r\n\t\t\tscreenPositionPixels.x = screenPosition.x * halfViewportWidth + halfViewportWidth;\r\n\t\t\tscreenPositionPixels.y = screenPosition.y * halfViewportHeight + halfViewportHeight;\r\n\r\n\t\t\t// screen cull\r\n\r\n\t\t\tif ( hasVertexTexture || (\r\n\t\t\t\tscreenPositionPixels.x > 0 &&\r\n\t\t\t\tscreenPositionPixels.x < viewportWidth &&\r\n\t\t\t\tscreenPositionPixels.y > 0 &&\r\n\t\t\t\tscreenPositionPixels.y < viewportHeight ) ) {\r\n\r\n\t\t\t\t// save current RGB to temp texture\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGB, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// render pink quad\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\r\n\t\t\t\tgl.disable( gl.BLEND );\r\n\t\t\t\tgl.enable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// copy result to occlusionMap\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, occlusionTexture );\r\n\t\t\t\tgl.copyTexImage2D( gl.TEXTURE_2D, 0, gl.RGBA, screenPositionPixels.x - 8, screenPositionPixels.y - 8, 16, 16, 0 );\r\n\r\n\r\n\t\t\t\t// restore graphics\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 1 );\r\n\t\t\t\tgl.disable( gl.DEPTH_TEST );\r\n\r\n\t\t\t\tgl.activeTexture( gl.TEXTURE1 );\r\n\t\t\t\tgl.bindTexture( gl.TEXTURE_2D, tempTexture );\r\n\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\r\n\t\t\t\t// update object positions\r\n\r\n\t\t\t\tflare.positionScreen.copy( screenPosition )\r\n\r\n\t\t\t\tif ( flare.customUpdateCallback ) {\r\n\r\n\t\t\t\t\tflare.customUpdateCallback( flare );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tflare.updateLensFlares();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// render flares\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.renderType, 2 );\r\n\t\t\t\tgl.enable( gl.BLEND );\r\n\r\n\t\t\t\tfor ( var j = 0, jl = flare.lensFlares.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\t\tvar sprite = flare.lensFlares[ j ];\r\n\r\n\t\t\t\t\tif ( sprite.opacity > 0.001 && sprite.scale > 0.001 ) {\r\n\r\n\t\t\t\t\t\tscreenPosition.x = sprite.x;\r\n\t\t\t\t\t\tscreenPosition.y = sprite.y;\r\n\t\t\t\t\t\tscreenPosition.z = sprite.z;\r\n\r\n\t\t\t\t\t\tsize = sprite.size * sprite.scale / viewportHeight;\r\n\r\n\t\t\t\t\t\tscale.x = size * invAspect;\r\n\t\t\t\t\t\tscale.y = size;\r\n\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.screenPosition, screenPosition.x, screenPosition.y, screenPosition.z );\r\n\t\t\t\t\t\tgl.uniform2f( uniforms.scale, scale.x, scale.y );\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.rotation, sprite.rotation );\r\n\r\n\t\t\t\t\t\tgl.uniform1f( uniforms.opacity, sprite.opacity );\r\n\t\t\t\t\t\tgl.uniform3f( uniforms.color, sprite.color.r, sprite.color.g, sprite.color.b );\r\n\r\n\t\t\t\t\t\trenderer.state.setBlending( sprite.blending, sprite.blendEquation, sprite.blendSrc, sprite.blendDst );\r\n\t\t\t\t\t\trenderer.setTexture( sprite.texture, 1 );\r\n\r\n\t\t\t\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.DEPTH_TEST );\r\n\t\tgl.depthMask( true );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram ( shader ) {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\r\n\t\tvar prefix = \"precision \" + renderer.getPrecision() + \" float;\\n\";\r\n\r\n\t\tgl.shaderSource( fragmentShader, prefix + shader.fragmentShader );\r\n\t\tgl.shaderSource( vertexShader, prefix + shader.vertexShader );\r\n\r\n\t\tgl.compileShader( fragmentShader );\r\n\t\tgl.compileShader( vertexShader );\r\n\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\t\tgl.attachShader( program, vertexShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/ShadowMapPlugin.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ShadowMapPlugin = function ( _renderer, _lights, _webglObjects, _webglObjectsImmediate ) {\r\n\r\n\tvar _gl = _renderer.context;\r\n\r\n\tvar _depthMaterial, _depthMaterialMorph, _depthMaterialSkin, _depthMaterialMorphSkin,\r\n\r\n\t_frustum = new THREE.Frustum(),\r\n\t_projScreenMatrix = new THREE.Matrix4(),\r\n\r\n\t_min = new THREE.Vector3(),\r\n\t_max = new THREE.Vector3(),\r\n\r\n\t_matrixPosition = new THREE.Vector3(),\r\n\r\n\t_renderList = [];\r\n\r\n\t// init\r\n\r\n\tvar depthShader = THREE.ShaderLib[ \"depthRGBA\" ];\r\n\tvar depthUniforms = THREE.UniformsUtils.clone( depthShader.uniforms );\r\n\r\n\t_depthMaterial = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader\r\n\t } );\r\n\r\n\t_depthMaterialMorph = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true\r\n\t} );\r\n\r\n\t_depthMaterialSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterialMorphSkin = new THREE.ShaderMaterial( {\r\n\t\tuniforms: depthUniforms,\r\n\t\tvertexShader: depthShader.vertexShader,\r\n\t\tfragmentShader: depthShader.fragmentShader,\r\n\t\tmorphTargets: true,\r\n\t\tskinning: true\r\n\t} );\r\n\r\n\t_depthMaterial._shadowPass = true;\r\n\t_depthMaterialMorph._shadowPass = true;\r\n\t_depthMaterialSkin._shadowPass = true;\r\n\t_depthMaterialMorphSkin._shadowPass = true;\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( _renderer.shadowMapEnabled === false ) return;\r\n\r\n\t\tvar i, il, j, jl, n,\r\n\r\n\t\tshadowMap, shadowMatrix, shadowCamera,\r\n\t\tbuffer, material,\r\n\t\twebglObject, object, light,\r\n\r\n\t\tlights = [],\r\n\t\tk = 0,\r\n\r\n\t\tfog = null;\r\n\r\n\t\t// set GL state for depth map\r\n\r\n\t\t_gl.clearColor( 1, 1, 1, 1 );\r\n\t\t_gl.disable( _gl.BLEND );\r\n\r\n\t\t_gl.enable( _gl.CULL_FACE );\r\n\t\t_gl.frontFace( _gl.CCW );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.FRONT );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.state.setDepthTest( true );\r\n\r\n\t\t// preprocess lights\r\n\t\t// \t- skip lights that are not casting shadows\r\n\t\t//\t- create virtual lights for cascaded shadow maps\r\n\r\n\t\tfor ( i = 0, il = _lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = _lights[ i ];\r\n\r\n\t\t\tif ( ! light.castShadow ) continue;\r\n\r\n\t\t\tif ( ( light instanceof THREE.DirectionalLight ) && light.shadowCascade ) {\r\n\r\n\t\t\t\tfor ( n = 0; n < light.shadowCascadeCount; n ++ ) {\r\n\r\n\t\t\t\t\tvar virtualLight;\r\n\r\n\t\t\t\t\tif ( ! light.shadowCascadeArray[ n ] ) {\r\n\r\n\t\t\t\t\t\tvirtualLight = createVirtualLight( light, n );\r\n\t\t\t\t\t\tvirtualLight.originalCamera = camera;\r\n\r\n\t\t\t\t\t\tvar gyro = new THREE.Gyroscope();\r\n\t\t\t\t\t\tgyro.position.copy( light.shadowCascadeOffset );\r\n\r\n\t\t\t\t\t\tgyro.add( virtualLight );\r\n\t\t\t\t\t\tgyro.add( virtualLight.target );\r\n\r\n\t\t\t\t\t\tcamera.add( gyro );\r\n\r\n\t\t\t\t\t\tlight.shadowCascadeArray[ n ] = virtualLight;\r\n\r\n\t\t\t\t\t\t//console.log( \"Created virtualLight\", virtualLight );\r\n\r\n\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\tvirtualLight = light.shadowCascadeArray[ n ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tupdateVirtualLight( light, n );\r\n\r\n\t\t\t\t\tlights[ k ] = virtualLight;\r\n\t\t\t\t\tk ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlights[ k ] = light;\r\n\t\t\t\tk ++;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// render depth map\r\n\r\n\t\tfor ( i = 0, il = lights.length; i < il; i ++ ) {\r\n\r\n\t\t\tlight = lights[ i ];\r\n\r\n\t\t\tif ( ! light.shadowMap ) {\r\n\r\n\t\t\t\tvar shadowFilter = THREE.LinearFilter;\r\n\r\n\t\t\t\tif ( _renderer.shadowMapType === THREE.PCFSoftShadowMap ) {\r\n\r\n\t\t\t\t\tshadowFilter = THREE.NearestFilter;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar pars = { minFilter: shadowFilter, magFilter: shadowFilter, format: THREE.RGBAFormat };\r\n\r\n\t\t\t\tlight.shadowMap = new THREE.WebGLRenderTarget( light.shadowMapWidth, light.shadowMapHeight, pars );\r\n\t\t\t\tlight.shadowMapSize = new THREE.Vector2( light.shadowMapWidth, light.shadowMapHeight );\r\n\r\n\t\t\t\tlight.shadowMatrix = new THREE.Matrix4();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( ! light.shadowCamera ) {\r\n\r\n\t\t\t\tif ( light instanceof THREE.SpotLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.PerspectiveCamera( light.shadowCameraFov, light.shadowMapWidth / light.shadowMapHeight, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else if ( light instanceof THREE.DirectionalLight ) {\r\n\r\n\t\t\t\t\tlight.shadowCamera = new THREE.OrthographicCamera( light.shadowCameraLeft, light.shadowCameraRight, light.shadowCameraTop, light.shadowCameraBottom, light.shadowCameraNear, light.shadowCameraFar );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tTHREE.error( \"THREE.ShadowMapPlugin: Unsupported light type for shadow\", light );\r\n\t\t\t\t\tcontinue;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tscene.add( light.shadowCamera );\r\n\r\n\t\t\t\tif ( scene.autoUpdate === true ) scene.updateMatrixWorld();\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.shadowCameraVisible && ! light.cameraHelper ) {\r\n\r\n\t\t\t\tlight.cameraHelper = new THREE.CameraHelper( light.shadowCamera );\r\n\t\t\t\tscene.add( light.cameraHelper );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( light.isVirtual && virtualLight.originalCamera == camera ) {\r\n\r\n\t\t\t\tupdateShadowCamera( camera, light );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tshadowMap = light.shadowMap;\r\n\t\t\tshadowMatrix = light.shadowMatrix;\r\n\t\t\tshadowCamera = light.shadowCamera;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tshadowCamera.position.setFromMatrixPosition( light.matrixWorld );\r\n\t\t\t_matrixPosition.setFromMatrixPosition( light.target.matrixWorld );\r\n\t\t\tshadowCamera.lookAt( _matrixPosition );\r\n\t\t\tshadowCamera.updateMatrixWorld();\r\n\r\n\t\t\tshadowCamera.matrixWorldInverse.getInverse( shadowCamera.matrixWorld );\r\n\r\n\t\t\t//\r\n\r\n\t\t\tif ( light.cameraHelper ) light.cameraHelper.visible = light.shadowCameraVisible;\r\n\t\t\tif ( light.shadowCameraVisible ) light.cameraHelper.update();\r\n\r\n\t\t\t// compute shadow matrix\r\n\r\n\t\t\tshadowMatrix.set(\r\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\r\n\t\t\t\t0.0, 0.0, 0.0, 1.0\r\n\t\t\t);\r\n\r\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\r\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\t// update camera matrices and frustum\r\n\r\n\t\t\t_projScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\r\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\r\n\r\n\t\t\t// render shadow map\r\n\r\n\t\t\t_renderer.setRenderTarget( shadowMap );\r\n\t\t\t_renderer.clear();\r\n\r\n\t\t\t// set object matrices & frustum culling\r\n\r\n\t\t\t_renderList.length = 0;\r\n\r\n\t\t\tprojectObject( scene, scene, shadowCamera );\r\n\r\n\r\n\t\t\t// render regular objects\r\n\r\n\t\t\tvar objectMaterial, useMorphing, useSkinning;\r\n\r\n\t\t\tfor ( j = 0, jl = _renderList.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _renderList[ j ];\r\n\r\n\t\t\t\tobject = webglObject.object;\r\n\t\t\t\tbuffer = webglObject.buffer;\r\n\r\n\t\t\t\t// culling is overriden globally for all objects\r\n\t\t\t\t// while rendering depth map\r\n\r\n\t\t\t\t// need to deal with MeshFaceMaterial somehow\r\n\t\t\t\t// in that case just use the first of material.materials for now\r\n\t\t\t\t// (proper solution would require to break objects by materials\r\n\t\t\t\t//  similarly to regular rendering and then set corresponding\r\n\t\t\t\t//  depth materials per each chunk instead of just once per object)\r\n\r\n\t\t\t\tobjectMaterial = getObjectMaterial( object );\r\n\r\n\t\t\t\tuseMorphing = object.geometry.morphTargets !== undefined && object.geometry.morphTargets.length > 0 && objectMaterial.morphTargets;\r\n\t\t\t\tuseSkinning = object instanceof THREE.SkinnedMesh && objectMaterial.skinning;\r\n\r\n\t\t\t\tif ( object.customDepthMaterial ) {\r\n\r\n\t\t\t\t\tmaterial = object.customDepthMaterial;\r\n\r\n\t\t\t\t} else if ( useSkinning ) {\r\n\r\n\t\t\t\t\tmaterial = useMorphing ? _depthMaterialMorphSkin : _depthMaterialSkin;\r\n\r\n\t\t\t\t} else if ( useMorphing ) {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterialMorph;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmaterial = _depthMaterial;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t_renderer.setMaterialFaces( objectMaterial );\r\n\r\n\t\t\t\tif ( buffer instanceof THREE.BufferGeometry ) {\r\n\r\n\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\t_renderer.renderBuffer( shadowCamera, _lights, fog, material, buffer, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// set matrices and render immediate objects\r\n\r\n\t\t\tfor ( j = 0, jl = _webglObjectsImmediate.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\twebglObject = _webglObjectsImmediate[ j ];\r\n\t\t\t\tobject = webglObject.object;\r\n\r\n\t\t\t\tif ( object.visible && object.castShadow ) {\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\r\n\t\t\t\t\t_renderer.renderImmediateObject( shadowCamera, _lights, fog, _depthMaterial, object );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// restore GL state\r\n\r\n\t\tvar clearColor = _renderer.getClearColor(),\r\n\t\tclearAlpha = _renderer.getClearAlpha();\r\n\r\n\t\t_gl.clearColor( clearColor.r, clearColor.g, clearColor.b, clearAlpha );\r\n\t\t_gl.enable( _gl.BLEND );\r\n\r\n\t\tif ( _renderer.shadowMapCullFace === THREE.CullFaceFront ) {\r\n\r\n\t\t\t_gl.cullFace( _gl.BACK );\r\n\r\n\t\t}\r\n\r\n\t\t_renderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction projectObject( scene, object, shadowCamera ) {\r\n\r\n\t\tif ( object.visible ) {\r\n\r\n\t\t\tvar webglObjects = _webglObjects[ object.id ];\r\n\r\n\t\t\tif ( webglObjects && object.castShadow && (object.frustumCulled === false || _frustum.intersectsObject( object ) === true) ) {\r\n\r\n\t\t\t\tfor ( var i = 0, l = webglObjects.length; i < l; i ++ ) {\r\n\r\n\t\t\t\t\tvar webglObject = webglObjects[ i ];\r\n\r\n\t\t\t\t\tobject._modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\r\n\t\t\t\t\t_renderList.push( webglObject );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var i = 0, l = object.children.length; i < l; i ++ ) {\r\n\r\n\t\t\t\tprojectObject( scene, object.children[ i ], shadowCamera );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction createVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = new THREE.DirectionalLight();\r\n\r\n\t\tvirtualLight.isVirtual = true;\r\n\r\n\t\tvirtualLight.onlyShadow = true;\r\n\t\tvirtualLight.castShadow = true;\r\n\r\n\t\tvirtualLight.shadowCameraNear = light.shadowCameraNear;\r\n\t\tvirtualLight.shadowCameraFar = light.shadowCameraFar;\r\n\r\n\t\tvirtualLight.shadowCameraLeft = light.shadowCameraLeft;\r\n\t\tvirtualLight.shadowCameraRight = light.shadowCameraRight;\r\n\t\tvirtualLight.shadowCameraBottom = light.shadowCameraBottom;\r\n\t\tvirtualLight.shadowCameraTop = light.shadowCameraTop;\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\t\tvirtualLight.shadowMapWidth = light.shadowCascadeWidth[ cascade ];\r\n\t\tvirtualLight.shadowMapHeight = light.shadowCascadeHeight[ cascade ];\r\n\r\n\t\tvirtualLight.pointsWorld = [];\r\n\t\tvirtualLight.pointsFrustum = [];\r\n\r\n\t\tvar pointsWorld = virtualLight.pointsWorld,\r\n\t\t\tpointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tpointsWorld[ i ] = new THREE.Vector3();\r\n\t\t\tpointsFrustum[ i ] = new THREE.Vector3();\r\n\r\n\t\t}\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tpointsFrustum[ 0 ].set( - 1, - 1, nearZ );\r\n\t\tpointsFrustum[ 1 ].set(  1, - 1, nearZ );\r\n\t\tpointsFrustum[ 2 ].set( - 1,  1, nearZ );\r\n\t\tpointsFrustum[ 3 ].set(  1,  1, nearZ );\r\n\r\n\t\tpointsFrustum[ 4 ].set( - 1, - 1, farZ );\r\n\t\tpointsFrustum[ 5 ].set(  1, - 1, farZ );\r\n\t\tpointsFrustum[ 6 ].set( - 1,  1, farZ );\r\n\t\tpointsFrustum[ 7 ].set(  1,  1, farZ );\r\n\r\n\t\treturn virtualLight;\r\n\r\n\t}\r\n\r\n\t// Synchronize virtual light with the original light\r\n\r\n\tfunction updateVirtualLight( light, cascade ) {\r\n\r\n\t\tvar virtualLight = light.shadowCascadeArray[ cascade ];\r\n\r\n\t\tvirtualLight.position.copy( light.position );\r\n\t\tvirtualLight.target.position.copy( light.target.position );\r\n\t\tvirtualLight.lookAt( virtualLight.target );\r\n\r\n\t\tvirtualLight.shadowCameraVisible = light.shadowCameraVisible;\r\n\t\tvirtualLight.shadowDarkness = light.shadowDarkness;\r\n\r\n\t\tvirtualLight.shadowBias = light.shadowCascadeBias[ cascade ];\r\n\r\n\t\tvar nearZ = light.shadowCascadeNearZ[ cascade ];\r\n\t\tvar farZ = light.shadowCascadeFarZ[ cascade ];\r\n\r\n\t\tvar pointsFrustum = virtualLight.pointsFrustum;\r\n\r\n\t\tpointsFrustum[ 0 ].z = nearZ;\r\n\t\tpointsFrustum[ 1 ].z = nearZ;\r\n\t\tpointsFrustum[ 2 ].z = nearZ;\r\n\t\tpointsFrustum[ 3 ].z = nearZ;\r\n\r\n\t\tpointsFrustum[ 4 ].z = farZ;\r\n\t\tpointsFrustum[ 5 ].z = farZ;\r\n\t\tpointsFrustum[ 6 ].z = farZ;\r\n\t\tpointsFrustum[ 7 ].z = farZ;\r\n\r\n\t}\r\n\r\n\t// Fit shadow camera's ortho frustum to camera frustum\r\n\r\n\tfunction updateShadowCamera( camera, light ) {\r\n\r\n\t\tvar shadowCamera = light.shadowCamera,\r\n\t\t\tpointsFrustum = light.pointsFrustum,\r\n\t\t\tpointsWorld = light.pointsWorld;\r\n\r\n\t\t_min.set( Infinity, Infinity, Infinity );\r\n\t\t_max.set( - Infinity, - Infinity, - Infinity );\r\n\r\n\t\tfor ( var i = 0; i < 8; i ++ ) {\r\n\r\n\t\t\tvar p = pointsWorld[ i ];\r\n\r\n\t\t\tp.copy( pointsFrustum[ i ] );\r\n\t\t\tp.unproject( camera );\r\n\r\n\t\t\tp.applyMatrix4( shadowCamera.matrixWorldInverse );\r\n\r\n\t\t\tif ( p.x < _min.x ) _min.x = p.x;\r\n\t\t\tif ( p.x > _max.x ) _max.x = p.x;\r\n\r\n\t\t\tif ( p.y < _min.y ) _min.y = p.y;\r\n\t\t\tif ( p.y > _max.y ) _max.y = p.y;\r\n\r\n\t\t\tif ( p.z < _min.z ) _min.z = p.z;\r\n\t\t\tif ( p.z > _max.z ) _max.z = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tshadowCamera.left = _min.x;\r\n\t\tshadowCamera.right = _max.x;\r\n\t\tshadowCamera.top = _max.y;\r\n\t\tshadowCamera.bottom = _min.y;\r\n\r\n\t\t// can't really fit near/far\r\n\t\t//shadowCamera.near = _min.z;\r\n\t\t//shadowCamera.far = _max.z;\r\n\r\n\t\tshadowCamera.updateProjectionMatrix();\r\n\r\n\t}\r\n\r\n\t// For the moment just ignore objects that have multiple materials with different animation methods\r\n\t// Only the first material will be taken into account for deciding which depth material to use for shadow maps\r\n\r\n\tfunction getObjectMaterial( object ) {\r\n\r\n\t\treturn object.material instanceof THREE.MeshFaceMaterial\r\n\t\t\t? object.material.materials[ 0 ]\r\n\t\t\t: object.material;\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/renderers/webgl/plugins/SpritePlugin.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SpritePlugin = function ( renderer, sprites ) {\r\n\r\n\tvar gl = renderer.context;\r\n\r\n\tvar vertexBuffer, elementBuffer;\r\n\tvar program, attributes, uniforms;\r\n\r\n\tvar texture;\r\n\r\n\t// decompose matrixWorld\r\n\r\n\tvar spritePosition = new THREE.Vector3();\r\n\tvar spriteRotation = new THREE.Quaternion();\r\n\tvar spriteScale = new THREE.Vector3();\r\n\r\n\tvar init = function () {\r\n\r\n\t\tvar vertices = new Float32Array( [\r\n\t\t\t- 0.5, - 0.5,  0, 0,\r\n\t\t\t  0.5, - 0.5,  1, 0,\r\n\t\t\t  0.5,   0.5,  1, 1,\r\n\t\t\t- 0.5,   0.5,  0, 1\r\n\t\t] );\r\n\r\n\t\tvar faces = new Uint16Array( [\r\n\t\t\t0, 1, 2,\r\n\t\t\t0, 2, 3\r\n\t\t] );\r\n\r\n\t\tvertexBuffer  = gl.createBuffer();\r\n\t\telementBuffer = gl.createBuffer();\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.bufferData( gl.ARRAY_BUFFER, vertices, gl.STATIC_DRAW );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\t\tgl.bufferData( gl.ELEMENT_ARRAY_BUFFER, faces, gl.STATIC_DRAW );\r\n\r\n\t\tprogram = createProgram();\r\n\r\n\t\tattributes = {\r\n\t\t\tposition:\t\t\tgl.getAttribLocation ( program, 'position' ),\r\n\t\t\tuv:\t\t\t\t\tgl.getAttribLocation ( program, 'uv' )\r\n\t\t};\r\n\r\n\t\tuniforms = {\r\n\t\t\tuvOffset:\t\t\tgl.getUniformLocation( program, 'uvOffset' ),\r\n\t\t\tuvScale:\t\t\tgl.getUniformLocation( program, 'uvScale' ),\r\n\r\n\t\t\trotation:\t\t\tgl.getUniformLocation( program, 'rotation' ),\r\n\t\t\tscale:\t\t\t\tgl.getUniformLocation( program, 'scale' ),\r\n\r\n\t\t\tcolor:\t\t\t\tgl.getUniformLocation( program, 'color' ),\r\n\t\t\tmap:\t\t\t\tgl.getUniformLocation( program, 'map' ),\r\n\t\t\topacity:\t\t\tgl.getUniformLocation( program, 'opacity' ),\r\n\r\n\t\t\tmodelViewMatrix: \tgl.getUniformLocation( program, 'modelViewMatrix' ),\r\n\t\t\tprojectionMatrix:\tgl.getUniformLocation( program, 'projectionMatrix' ),\r\n\r\n\t\t\tfogType:\t\t\tgl.getUniformLocation( program, 'fogType' ),\r\n\t\t\tfogDensity:\t\t\tgl.getUniformLocation( program, 'fogDensity' ),\r\n\t\t\tfogNear:\t\t\tgl.getUniformLocation( program, 'fogNear' ),\r\n\t\t\tfogFar:\t\t\t\tgl.getUniformLocation( program, 'fogFar' ),\r\n\t\t\tfogColor:\t\t\tgl.getUniformLocation( program, 'fogColor' ),\r\n\r\n\t\t\talphaTest:\t\t\tgl.getUniformLocation( program, 'alphaTest' )\r\n\t\t};\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = 8;\r\n\t\tcanvas.height = 8;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.fillStyle = 'white';\r\n\t\tcontext.fillRect( 0, 0, 8, 8 );\r\n\r\n\t\ttexture = new THREE.Texture( canvas );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t};\r\n\r\n\tthis.render = function ( scene, camera ) {\r\n\r\n\t\tif ( sprites.length === 0 ) return;\r\n\r\n\t\t// setup gl\r\n\r\n\t\tif ( program === undefined ) {\r\n\r\n\t\t\tinit();\r\n\r\n\t\t}\r\n\r\n\t\tgl.useProgram( program );\r\n\r\n\t\tgl.enableVertexAttribArray( attributes.position );\r\n\t\tgl.enableVertexAttribArray( attributes.uv );\r\n\r\n\t\tgl.disable( gl.CULL_FACE );\r\n\t\tgl.enable( gl.BLEND );\r\n\r\n\t\tgl.bindBuffer( gl.ARRAY_BUFFER, vertexBuffer );\r\n\t\tgl.vertexAttribPointer( attributes.position, 2, gl.FLOAT, false, 2 * 8, 0 );\r\n\t\tgl.vertexAttribPointer( attributes.uv, 2, gl.FLOAT, false, 2 * 8, 8 );\r\n\r\n\t\tgl.bindBuffer( gl.ELEMENT_ARRAY_BUFFER, elementBuffer );\r\n\r\n\t\tgl.uniformMatrix4fv( uniforms.projectionMatrix, false, camera.projectionMatrix.elements );\r\n\r\n\t\tgl.activeTexture( gl.TEXTURE0 );\r\n\t\tgl.uniform1i( uniforms.map, 0 );\r\n\r\n\t\tvar oldFogType = 0;\r\n\t\tvar sceneFogType = 0;\r\n\t\tvar fog = scene.fog;\r\n\r\n\t\tif ( fog ) {\r\n\r\n\t\t\tgl.uniform3f( uniforms.fogColor, fog.color.r, fog.color.g, fog.color.b );\r\n\r\n\t\t\tif ( fog instanceof THREE.Fog ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogNear, fog.near );\r\n\t\t\t\tgl.uniform1f( uniforms.fogFar, fog.far );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 1 );\r\n\t\t\t\toldFogType = 1;\r\n\t\t\t\tsceneFogType = 1;\r\n\r\n\t\t\t} else if ( fog instanceof THREE.FogExp2 ) {\r\n\r\n\t\t\t\tgl.uniform1f( uniforms.fogDensity, fog.density );\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, 2 );\r\n\t\t\t\toldFogType = 2;\r\n\t\t\t\tsceneFogType = 2;\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tgl.uniform1i( uniforms.fogType, 0 );\r\n\t\t\toldFogType = 0;\r\n\t\t\tsceneFogType = 0;\r\n\r\n\t\t}\r\n\r\n\r\n\t\t// update positions and sort\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\r\n\t\t\tsprite._modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, sprite.matrixWorld );\r\n\t\t\tsprite.z = - sprite._modelViewMatrix.elements[ 14 ];\r\n\r\n\t\t}\r\n\r\n\t\tsprites.sort( painterSortStable );\r\n\r\n\t\t// render all sprites\r\n\r\n\t\tvar scale = [];\r\n\r\n\t\tfor ( var i = 0, l = sprites.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar sprite = sprites[ i ];\r\n\t\t\tvar material = sprite.material;\r\n\r\n\t\t\tgl.uniform1f( uniforms.alphaTest, material.alphaTest );\r\n\t\t\tgl.uniformMatrix4fv( uniforms.modelViewMatrix, false, sprite._modelViewMatrix.elements );\r\n\r\n\t\t\tsprite.matrixWorld.decompose( spritePosition, spriteRotation, spriteScale );\r\n\r\n\t\t\tscale[ 0 ] = spriteScale.x;\r\n\t\t\tscale[ 1 ] = spriteScale.y;\r\n\r\n\t\t\tvar fogType = 0;\r\n\r\n\t\t\tif ( scene.fog && material.fog ) {\r\n\r\n\t\t\t\tfogType = sceneFogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( oldFogType !== fogType ) {\r\n\r\n\t\t\t\tgl.uniform1i( uniforms.fogType, fogType );\r\n\t\t\t\toldFogType = fogType;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tif ( material.map !== null ) {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, material.map.offset.x, material.map.offset.y );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, material.map.repeat.x, material.map.repeat.y );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tgl.uniform2f( uniforms.uvOffset, 0, 0 );\r\n\t\t\t\tgl.uniform2f( uniforms.uvScale, 1, 1 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.uniform1f( uniforms.opacity, material.opacity );\r\n\t\t\tgl.uniform3f( uniforms.color, material.color.r, material.color.g, material.color.b );\r\n\r\n\t\t\tgl.uniform1f( uniforms.rotation, material.rotation );\r\n\t\t\tgl.uniform2fv( uniforms.scale, scale );\r\n\r\n\t\t\trenderer.state.setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst );\r\n\t\t\trenderer.state.setDepthTest( material.depthTest );\r\n\t\t\trenderer.state.setDepthWrite( material.depthWrite );\r\n\r\n\t\t\tif ( material.map && material.map.image && material.map.image.width ) {\r\n\r\n\t\t\t\trenderer.setTexture( material.map, 0 );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\trenderer.setTexture( texture, 0 );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgl.drawElements( gl.TRIANGLES, 6, gl.UNSIGNED_SHORT, 0 );\r\n\r\n\t\t}\r\n\r\n\t\t// restore gl\r\n\r\n\t\tgl.enable( gl.CULL_FACE );\r\n\r\n\t\trenderer.resetGLState();\r\n\r\n\t};\r\n\r\n\tfunction createProgram () {\r\n\r\n\t\tvar program = gl.createProgram();\r\n\r\n\t\tvar vertexShader = gl.createShader( gl.VERTEX_SHADER );\r\n\t\tvar fragmentShader = gl.createShader( gl.FRAGMENT_SHADER );\r\n\r\n\t\tgl.shaderSource( vertexShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform mat4 modelViewMatrix;',\r\n\t\t\t'uniform mat4 projectionMatrix;',\r\n\t\t\t'uniform float rotation;',\r\n\t\t\t'uniform vec2 scale;',\r\n\t\t\t'uniform vec2 uvOffset;',\r\n\t\t\t'uniform vec2 uvScale;',\r\n\r\n\t\t\t'attribute vec2 position;',\r\n\t\t\t'attribute vec2 uv;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vUV = uvOffset + uv * uvScale;',\r\n\r\n\t\t\t\t'vec2 alignedPosition = position * scale;',\r\n\r\n\t\t\t\t'vec2 rotatedPosition;',\r\n\t\t\t\t'rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;',\r\n\t\t\t\t'rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;',\r\n\r\n\t\t\t\t'vec4 finalPosition;',\r\n\r\n\t\t\t\t'finalPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );',\r\n\t\t\t\t'finalPosition.xy += rotatedPosition;',\r\n\t\t\t\t'finalPosition = projectionMatrix * finalPosition;',\r\n\r\n\t\t\t\t'gl_Position = finalPosition;',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.shaderSource( fragmentShader, [\r\n\r\n\t\t\t'precision ' + renderer.getPrecision() + ' float;',\r\n\r\n\t\t\t'uniform vec3 color;',\r\n\t\t\t'uniform sampler2D map;',\r\n\t\t\t'uniform float opacity;',\r\n\r\n\t\t\t'uniform int fogType;',\r\n\t\t\t'uniform vec3 fogColor;',\r\n\t\t\t'uniform float fogDensity;',\r\n\t\t\t'uniform float fogNear;',\r\n\t\t\t'uniform float fogFar;',\r\n\t\t\t'uniform float alphaTest;',\r\n\r\n\t\t\t'varying vec2 vUV;',\r\n\r\n\t\t\t'void main() {',\r\n\r\n\t\t\t\t'vec4 texture = texture2D( map, vUV );',\r\n\r\n\t\t\t\t'if ( texture.a < alphaTest ) discard;',\r\n\r\n\t\t\t\t'gl_FragColor = vec4( color * texture.xyz, texture.a * opacity );',\r\n\r\n\t\t\t\t'if ( fogType > 0 ) {',\r\n\r\n\t\t\t\t\t'float depth = gl_FragCoord.z / gl_FragCoord.w;',\r\n\t\t\t\t\t'float fogFactor = 0.0;',\r\n\r\n\t\t\t\t\t'if ( fogType == 1 ) {',\r\n\r\n\t\t\t\t\t\t'fogFactor = smoothstep( fogNear, fogFar, depth );',\r\n\r\n\t\t\t\t\t'} else {',\r\n\r\n\t\t\t\t\t\t'const float LOG2 = 1.442695;',\r\n\t\t\t\t\t\t'float fogFactor = exp2( - fogDensity * fogDensity * depth * depth * LOG2 );',\r\n\t\t\t\t\t\t'fogFactor = 1.0 - clamp( fogFactor, 0.0, 1.0 );',\r\n\r\n\t\t\t\t\t'}',\r\n\r\n\t\t\t\t\t'gl_FragColor = mix( gl_FragColor, vec4( fogColor, gl_FragColor.w ), fogFactor );',\r\n\r\n\t\t\t\t'}',\r\n\r\n\t\t\t'}'\r\n\r\n\t\t].join( '\\n' ) );\r\n\r\n\t\tgl.compileShader( vertexShader );\r\n\t\tgl.compileShader( fragmentShader );\r\n\r\n\t\tgl.attachShader( program, vertexShader );\r\n\t\tgl.attachShader( program, fragmentShader );\r\n\r\n\t\tgl.linkProgram( program );\r\n\r\n\t\treturn program;\r\n\r\n\t};\r\n\r\n\tfunction painterSortStable ( a, b ) {\r\n\r\n\t\tif ( a.z !== b.z ) {\r\n\r\n\t\t\treturn b.z - a.z;\r\n\r\n\t\t} else {\r\n\r\n\t\t\treturn b.id - a.id;\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n};\r\n\r\n// File:src/extras/GeometryUtils.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GeometryUtils = {\r\n\r\n\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\r\n\r\n\t\tTHREE.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\r\n\r\n\t\tvar matrix;\r\n\r\n\t\tif ( geometry2 instanceof THREE.Mesh ) {\r\n\r\n\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\r\n\r\n\t\t\tmatrix = geometry2.matrix;\r\n\t\t\tgeometry2 = geometry2.geometry;\r\n\r\n\t\t}\r\n\r\n\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\r\n\r\n\t},\r\n\r\n\tcenter: function ( geometry ) {\r\n\r\n\t\tTHREE.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\r\n\t\treturn geometry.center();\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/ImageUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author Daosheng Mu / https://github.com/DaoshengMu/\r\n */\r\n\r\nTHREE.ImageUtils = {\r\n\r\n\tcrossOrigin: undefined,\r\n\r\n\tloadTexture: function ( url, mapping, onLoad, onError ) {\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.Texture( undefined, mapping );\r\n\r\n\t\tloader.load( url, function ( image ) {\r\n\r\n\t\t\ttexture.image = image;\r\n\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t}, undefined, function ( event ) {\r\n\r\n\t\t\tif ( onError ) onError( event );\r\n\r\n\t\t} );\r\n\r\n\t\ttexture.sourceFile = url;\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadTextureCube: function ( array, mapping, onLoad, onError ) {\r\n\r\n\t\tvar images = [];\r\n\r\n\t\tvar loader = new THREE.ImageLoader();\r\n\t\tloader.crossOrigin = this.crossOrigin;\r\n\r\n\t\tvar texture = new THREE.CubeTexture( images, mapping );\r\n\r\n\t\t// no flipping needed for cube textures\r\n\r\n\t\ttexture.flipY = false;\r\n\r\n\t\tvar loaded = 0;\r\n\r\n\t\tvar loadTexture = function ( i ) {\r\n\r\n\t\t\tloader.load( array[ i ], function ( image ) {\r\n\r\n\t\t\t\ttexture.images[ i ] = image;\r\n\r\n\t\t\t\tloaded += 1;\r\n\r\n\t\t\t\tif ( loaded === 6 ) {\r\n\r\n\t\t\t\t\ttexture.needsUpdate = true;\r\n\r\n\t\t\t\t\tif ( onLoad ) onLoad( texture );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}, undefined, onError );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0, il = array.length; i < il; ++ i ) {\r\n\r\n\t\t\tloadTexture( i );\r\n\r\n\t\t}\r\n\r\n\t\treturn texture;\r\n\r\n\t},\r\n\r\n\tloadCompressedTexture: function () {\r\n\r\n\t\tTHREE.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tloadCompressedTextureCube: function () {\r\n\r\n\t\tTHREE.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' )\r\n\r\n\t},\r\n\r\n\tgetNormalMap: function ( image, depth ) {\r\n\r\n\t\t// Adapted from http://www.paulbrunt.co.uk/lab/heightnormal/\r\n\r\n\t\tvar cross = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 1 ] * b[ 2 ] - a[ 2 ] * b[ 1 ], a[ 2 ] * b[ 0 ] - a[ 0 ] * b[ 2 ], a[ 0 ] * b[ 1 ] - a[ 1 ] * b[ 0 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar subtract = function ( a, b ) {\r\n\r\n\t\t\treturn [ a[ 0 ] - b[ 0 ], a[ 1 ] - b[ 1 ], a[ 2 ] - b[ 2 ] ];\r\n\r\n\t\t}\r\n\r\n\t\tvar normalize = function ( a ) {\r\n\r\n\t\t\tvar l = Math.sqrt( a[ 0 ] * a[ 0 ] + a[ 1 ] * a[ 1 ] + a[ 2 ] * a[ 2 ] );\r\n\t\t\treturn [ a[ 0 ] / l, a[ 1 ] / l, a[ 2 ] / l ];\r\n\r\n\t\t}\r\n\r\n\t\tdepth = depth | 1;\r\n\r\n\t\tvar width = image.width;\r\n\t\tvar height = image.height;\r\n\r\n\t\tvar canvas = document.createElement( 'canvas' );\r\n\t\tcanvas.width = width;\r\n\t\tcanvas.height = height;\r\n\r\n\t\tvar context = canvas.getContext( '2d' );\r\n\t\tcontext.drawImage( image, 0, 0 );\r\n\r\n\t\tvar data = context.getImageData( 0, 0, width, height ).data;\r\n\t\tvar imageData = context.createImageData( width, height );\r\n\t\tvar output = imageData.data;\r\n\r\n\t\tfor ( var x = 0; x < width; x ++ ) {\r\n\r\n\t\t\tfor ( var y = 0; y < height; y ++ ) {\r\n\r\n\t\t\t\tvar ly = y - 1 < 0 ? 0 : y - 1;\r\n\t\t\t\tvar uy = y + 1 > height - 1 ? height - 1 : y + 1;\r\n\t\t\t\tvar lx = x - 1 < 0 ? 0 : x - 1;\r\n\t\t\t\tvar ux = x + 1 > width - 1 ? width - 1 : x + 1;\r\n\r\n\t\t\t\tvar points = [];\r\n\t\t\t\tvar origin = [ 0, 0, data[ ( y * width + x ) * 4 ] / 255 * depth ];\r\n\t\t\t\tpoints.push( [ - 1, 0, data[ ( y * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, - 1, data[ ( ly * width + lx ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, - 1, data[ ( ly * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, - 1, data[ ( ly * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 0, data[ ( y * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 1, 1, data[ ( uy * width + ux ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ 0, 1, data[ ( uy * width + x ) * 4 ] / 255 * depth ] );\r\n\t\t\t\tpoints.push( [ - 1, 1, data[ ( uy * width + lx ) * 4 ] / 255 * depth ] );\r\n\r\n\t\t\t\tvar normals = [];\r\n\t\t\t\tvar num_points = points.length;\r\n\r\n\t\t\t\tfor ( var i = 0; i < num_points; i ++ ) {\r\n\r\n\t\t\t\t\tvar v1 = points[ i ];\r\n\t\t\t\t\tvar v2 = points[ ( i + 1 ) % num_points ];\r\n\t\t\t\t\tv1 = subtract( v1, origin );\r\n\t\t\t\t\tv2 = subtract( v2, origin );\r\n\t\t\t\t\tnormals.push( normalize( cross( v1, v2 ) ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar normal = [ 0, 0, 0 ];\r\n\r\n\t\t\t\tfor ( var i = 0; i < normals.length; i ++ ) {\r\n\r\n\t\t\t\t\tnormal[ 0 ] += normals[ i ][ 0 ];\r\n\t\t\t\t\tnormal[ 1 ] += normals[ i ][ 1 ];\r\n\t\t\t\t\tnormal[ 2 ] += normals[ i ][ 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnormal[ 0 ] /= normals.length;\r\n\t\t\t\tnormal[ 1 ] /= normals.length;\r\n\t\t\t\tnormal[ 2 ] /= normals.length;\r\n\r\n\t\t\t\tvar idx = ( y * width + x ) * 4;\r\n\r\n\t\t\t\toutput[ idx ] = ( ( normal[ 0 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 1 ] = ( ( normal[ 1 ] + 1.0 ) / 2.0 * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 2 ] = ( normal[ 2 ] * 255 ) | 0;\r\n\t\t\t\toutput[ idx + 3 ] = 255;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tcontext.putImageData( imageData, 0, 0 );\r\n\r\n\t\treturn canvas;\r\n\r\n\t},\r\n\r\n\tgenerateDataTexture: function ( width, height, color ) {\r\n\r\n\t\tvar size = width * height;\r\n\t\tvar data = new Uint8Array( 3 * size );\r\n\r\n\t\tvar r = Math.floor( color.r * 255 );\r\n\t\tvar g = Math.floor( color.g * 255 );\r\n\t\tvar b = Math.floor( color.b * 255 );\r\n\r\n\t\tfor ( var i = 0; i < size; i ++ ) {\r\n\r\n\t\t\tdata[ i * 3 ] \t   = r;\r\n\t\t\tdata[ i * 3 + 1 ] = g;\r\n\t\t\tdata[ i * 3 + 2 ] = b;\r\n\r\n\t\t}\r\n\r\n\t\tvar texture = new THREE.DataTexture( data, width, height, THREE.RGBFormat );\r\n\t\ttexture.needsUpdate = true;\r\n\r\n\t\treturn texture;\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/SceneUtils.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.SceneUtils = {\r\n\r\n\tcreateMultiMaterialObject: function ( geometry, materials ) {\r\n\r\n\t\tvar group = new THREE.Object3D();\r\n\r\n\t\tfor ( var i = 0, l = materials.length; i < l; i ++ ) {\r\n\r\n\t\t\tgroup.add( new THREE.Mesh( geometry, materials[ i ] ) );\r\n\r\n\t\t}\r\n\r\n\t\treturn group;\r\n\r\n\t},\r\n\r\n\tdetach: function ( child, parent, scene ) {\r\n\r\n\t\tchild.applyMatrix( parent.matrixWorld );\r\n\t\tparent.remove( child );\r\n\t\tscene.add( child );\r\n\r\n\t},\r\n\r\n\tattach: function ( child, scene, parent ) {\r\n\r\n\t\tvar matrixWorldInverse = new THREE.Matrix4();\r\n\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\r\n\t\tchild.applyMatrix( matrixWorldInverse );\r\n\r\n\t\tscene.remove( child );\r\n\t\tparent.add( child );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/FontUtils.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For Text operations in three.js (See TextGeometry)\r\n *\r\n * It uses techniques used in:\r\n *\r\n * \ttypeface.js and canvastext\r\n * \t\tFor converting fonts and rendering with javascript\r\n *\t\thttp://typeface.neocracy.org\r\n *\r\n *\tTriangulation ported from AS3\r\n *\t\tSimple Polygon Triangulation\r\n *\t\thttp://actionsnippet.com/?p=1462\r\n *\r\n * \tA Method to triangulate shapes with holes\r\n *\t\thttp://www.sakri.net/blog/2009/06/12/an-approach-to-triangulating-polygons-with-holes/\r\n *\r\n */\r\n\r\nTHREE.FontUtils = {\r\n\r\n\tfaces: {},\r\n\r\n\t// Just for now. face[weight][style]\r\n\r\n\tface: 'helvetiker',\r\n\tweight: 'normal',\r\n\tstyle: 'normal',\r\n\tsize: 150,\r\n\tdivisions: 10,\r\n\r\n\tgetFace: function () {\r\n\r\n\t\ttry {\r\n\r\n\t\t\treturn this.faces[ this.face ][ this.weight ][ this.style ];\r\n\r\n\t\t} catch (e) {\r\n\r\n\t\t\tthrow \"The font \" + this.face + \" with \" + this.weight + \" weight and \" + this.style + \" style is missing.\"\r\n\r\n\t\t};\r\n\r\n\t},\r\n\r\n\tloadFace: function ( data ) {\r\n\r\n\t\tvar family = data.familyName.toLowerCase();\r\n\r\n\t\tvar ThreeFont = this;\r\n\r\n\t\tThreeFont.faces[ family ] = ThreeFont.faces[ family ] || {};\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ] = ThreeFont.faces[ family ][ data.cssFontWeight ] || {};\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\tThreeFont.faces[ family ][ data.cssFontWeight ][ data.cssFontStyle ] = data;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tdrawText: function ( text ) {\r\n\r\n\t\t// RenderText\r\n\r\n\t\tvar i,\r\n\t\t\tface = this.getFace(),\r\n\t\t\tscale = this.size / face.resolution,\r\n\t\t\toffset = 0,\r\n\t\t\tchars = String( text ).split( '' ),\r\n\t\t\tlength = chars.length;\r\n\r\n\t\tvar fontPaths = [];\r\n\r\n\t\tfor ( i = 0; i < length; i ++ ) {\r\n\r\n\t\t\tvar path = new THREE.Path();\r\n\r\n\t\t\tvar ret = this.extractGlyphPoints( chars[ i ], face, scale, offset, path );\r\n\t\t\toffset += ret.offset;\r\n\r\n\t\t\tfontPaths.push( ret.path );\r\n\r\n\t\t}\r\n\r\n\t\t// get the width\r\n\r\n\t\tvar width = offset / 2;\r\n\t\t//\r\n\t\t// for ( p = 0; p < allPts.length; p++ ) {\r\n\t\t//\r\n\t\t// \tallPts[ p ].x -= width;\r\n\t\t//\r\n\t\t// }\r\n\r\n\t\t//var extract = this.extractPoints( allPts, characterPts );\r\n\t\t//extract.contour = allPts;\r\n\r\n\t\t//extract.paths = fontPaths;\r\n\t\t//extract.offset = width;\r\n\r\n\t\treturn { paths: fontPaths, offset: width };\r\n\r\n\t},\r\n\r\n\r\n\r\n\r\n\textractGlyphPoints: function ( c, face, scale, offset, path ) {\r\n\r\n\t\tvar pts = [];\r\n\r\n\t\tvar i, i2, divisions,\r\n\t\t\toutline, action, length,\r\n\t\t\tscaleX, scaleY,\r\n\t\t\tx, y, cpx, cpy, cpx0, cpy0, cpx1, cpy1, cpx2, cpy2,\r\n\t\t\tlaste,\r\n\t\t\tglyph = face.glyphs[ c ] || face.glyphs[ '?' ];\r\n\r\n\t\tif ( ! glyph ) return;\r\n\r\n\t\tif ( glyph.o ) {\r\n\r\n\t\t\toutline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\r\n\t\t\tlength = outline.length;\r\n\r\n\t\t\tscaleX = scale;\r\n\t\t\tscaleY = scale;\r\n\r\n\t\t\tfor ( i = 0; i < length; ) {\r\n\r\n\t\t\t\taction = outline[ i ++ ];\r\n\r\n\t\t\t\t//console.log( action );\r\n\r\n\t\t\t\tswitch ( action ) {\r\n\r\n\t\t\t\tcase 'm':\r\n\r\n\t\t\t\t\t// Move To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.moveTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'l':\r\n\r\n\t\t\t\t\t// Line To\r\n\r\n\t\t\t\t\tx = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\ty = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tpath.lineTo( x, y );\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'q':\r\n\r\n\t\t\t\t\t// QuadraticCurveTo\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] * scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] * scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] * scaleY;\r\n\r\n\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\tcase 'b':\r\n\r\n\t\t\t\t\t// Cubic Bezier Curve\r\n\r\n\t\t\t\t\tcpx  = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy  = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx1 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy1 = outline[ i ++ ] *  scaleY;\r\n\t\t\t\t\tcpx2 = outline[ i ++ ] *  scaleX + offset;\r\n\t\t\t\t\tcpy2 = outline[ i ++ ] *  scaleY;\r\n\r\n\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\r\n\r\n\t\t\t\t\tlaste = pts[ pts.length - 1 ];\r\n\r\n\t\t\t\t\tif ( laste ) {\r\n\r\n\t\t\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t\t\t\tfor ( i2 = 1, divisions = this.divisions; i2 <= divisions; i2 ++ ) {\r\n\r\n\t\t\t\t\t\t\tvar t = i2 / divisions;\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\t\t\t\tTHREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\treturn { offset: glyph.ha * scale, path:path };\r\n\t}\r\n\r\n};\r\n\r\n\r\nTHREE.FontUtils.generateShapes = function ( text, parameters ) {\r\n\r\n\t// Parameters \r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar size = parameters.size !== undefined ? parameters.size : 100;\r\n\tvar curveSegments = parameters.curveSegments !== undefined ? parameters.curveSegments : 4;\r\n\r\n\tvar font = parameters.font !== undefined ? parameters.font : 'helvetiker';\r\n\tvar weight = parameters.weight !== undefined ? parameters.weight : 'normal';\r\n\tvar style = parameters.style !== undefined ? parameters.style : 'normal';\r\n\r\n\tTHREE.FontUtils.size = size;\r\n\tTHREE.FontUtils.divisions = curveSegments;\r\n\r\n\tTHREE.FontUtils.face = font;\r\n\tTHREE.FontUtils.weight = weight;\r\n\tTHREE.FontUtils.style = style;\r\n\r\n\t// Get a Font data json object\r\n\r\n\tvar data = THREE.FontUtils.drawText( text );\r\n\r\n\tvar paths = data.paths;\r\n\tvar shapes = [];\r\n\r\n\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\r\n\r\n\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\r\n\r\n\t}\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n\r\n/**\r\n * This code is a quick port of code written in C++ which was submitted to\r\n * flipcode.com by John W. Ratcliff  // July 22, 2000\r\n * See original code and more information here:\r\n * http://www.flipcode.com/archives/Efficient_Polygon_Triangulation.shtml\r\n *\r\n * ported to actionscript by Zevan Rosser\r\n * www.actionsnippet.com\r\n *\r\n * ported to javascript by Joshua Koo\r\n * http://www.lab4games.net/zz85/blog\r\n *\r\n */\r\n\r\n\r\n( function ( namespace ) {\r\n\r\n\tvar EPSILON = 0.0000000001;\r\n\r\n\t// takes in an contour array and returns\r\n\r\n\tvar process = function ( contour, indices ) {\r\n\r\n\t\tvar n = contour.length;\r\n\r\n\t\tif ( n < 3 ) return null;\r\n\r\n\t\tvar result = [],\r\n\t\t\tverts = [],\r\n\t\t\tvertIndices = [];\r\n\r\n\t\t/* we want a counter-clockwise polygon in verts */\r\n\r\n\t\tvar u, v, w;\r\n\r\n\t\tif ( area( contour ) > 0.0 ) {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = v;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tfor ( v = 0; v < n; v ++ ) verts[ v ] = ( n - 1 ) - v;\r\n\r\n\t\t}\r\n\r\n\t\tvar nv = n;\r\n\r\n\t\t/*  remove nv - 2 vertices, creating 1 triangle every time */\r\n\r\n\t\tvar count = 2 * nv;   /* error detection */\r\n\r\n\t\tfor ( v = nv - 1; nv > 2; ) {\r\n\r\n\t\t\t/* if we loop, it is probably a non-simple polygon */\r\n\r\n\t\t\tif ( ( count -- ) <= 0 ) {\r\n\r\n\t\t\t\t//** Triangulate: ERROR - probable bad polygon!\r\n\r\n\t\t\t\t//throw ( \"Warning, unable to triangulate polygon!\" );\r\n\t\t\t\t//return null;\r\n\t\t\t\t// Sometimes warning is fine, especially polygons are triangulated in reverse.\r\n\t\t\t\tTHREE.warn( 'THREE.FontUtils: Warning, unable to triangulate polygon! in Triangulate.process()' );\r\n\r\n\t\t\t\tif ( indices ) return vertIndices;\r\n\t\t\t\treturn result;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t/* three consecutive vertices in current polygon, <u,v,w> */\r\n\r\n\t\t\tu = v; \t \tif ( nv <= u ) u = 0;     /* previous */\r\n\t\t\tv = u + 1;  if ( nv <= v ) v = 0;     /* new v    */\r\n\t\t\tw = v + 1;  if ( nv <= w ) w = 0;     /* next     */\r\n\r\n\t\t\tif ( snip( contour, u, v, w, nv, verts ) ) {\r\n\r\n\t\t\t\tvar a, b, c, s, t;\r\n\r\n\t\t\t\t/* true names of the vertices */\r\n\r\n\t\t\t\ta = verts[ u ];\r\n\t\t\t\tb = verts[ v ];\r\n\t\t\t\tc = verts[ w ];\r\n\r\n\t\t\t\t/* output Triangle */\r\n\r\n\t\t\t\tresult.push( [ contour[ a ],\r\n\t\t\t\t\tcontour[ b ],\r\n\t\t\t\t\tcontour[ c ] ] );\r\n\r\n\r\n\t\t\t\tvertIndices.push( [ verts[ u ], verts[ v ], verts[ w ] ] );\r\n\r\n\t\t\t\t/* remove v from the remaining polygon */\r\n\r\n\t\t\t\tfor ( s = v, t = v + 1; t < nv; s ++, t ++ ) {\r\n\r\n\t\t\t\t\tverts[ s ] = verts[ t ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tnv --;\r\n\r\n\t\t\t\t/* reset error detection counter */\r\n\r\n\t\t\t\tcount = 2 * nv;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tif ( indices ) return vertIndices;\r\n\t\treturn result;\r\n\r\n\t};\r\n\r\n\t// calculate area of the contour polygon\r\n\r\n\tvar area = function ( contour ) {\r\n\r\n\t\tvar n = contour.length;\r\n\t\tvar a = 0.0;\r\n\r\n\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\r\n\r\n\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\r\n\r\n\t\t}\r\n\r\n\t\treturn a * 0.5;\r\n\r\n\t};\r\n\r\n\tvar snip = function ( contour, u, v, w, n, verts ) {\r\n\r\n\t\tvar p;\r\n\t\tvar ax, ay, bx, by;\r\n\t\tvar cx, cy, px, py;\r\n\r\n\t\tax = contour[ verts[ u ] ].x;\r\n\t\tay = contour[ verts[ u ] ].y;\r\n\r\n\t\tbx = contour[ verts[ v ] ].x;\r\n\t\tby = contour[ verts[ v ] ].y;\r\n\r\n\t\tcx = contour[ verts[ w ] ].x;\r\n\t\tcy = contour[ verts[ w ] ].y;\r\n\r\n\t\tif ( EPSILON > ( ( ( bx - ax ) * ( cy - ay ) ) - ( ( by - ay ) * ( cx - ax ) ) ) ) return false;\r\n\r\n\t\tvar aX, aY, bX, bY, cX, cY;\r\n\t\tvar apx, apy, bpx, bpy, cpx, cpy;\r\n\t\tvar cCROSSap, bCROSScp, aCROSSbp;\r\n\r\n\t\taX = cx - bx;  aY = cy - by;\r\n\t\tbX = ax - cx;  bY = ay - cy;\r\n\t\tcX = bx - ax;  cY = by - ay;\r\n\r\n\t\tfor ( p = 0; p < n; p ++ ) {\r\n\r\n\t\t\tpx = contour[ verts[ p ] ].x\r\n\t\t\tpy = contour[ verts[ p ] ].y\r\n\r\n\t\t\tif ( ( ( px === ax ) && ( py === ay ) ) ||\r\n\t\t\t\t ( ( px === bx ) && ( py === by ) ) ||\r\n\t\t\t\t ( ( px === cx ) && ( py === cy ) ) )\tcontinue;\r\n\r\n\t\t\tapx = px - ax;  apy = py - ay;\r\n\t\t\tbpx = px - bx;  bpy = py - by;\r\n\t\t\tcpx = px - cx;  cpy = py - cy;\r\n\r\n\t\t\t// see if p is inside triangle abc\r\n\r\n\t\t\taCROSSbp = aX * bpy - aY * bpx;\r\n\t\t\tcCROSSap = cX * apy - cY * apx;\r\n\t\t\tbCROSScp = bX * cpy - bY * cpx;\r\n\r\n\t\t\tif ( ( aCROSSbp >= - EPSILON ) && ( bCROSScp >= - EPSILON ) && ( cCROSSap >= - EPSILON ) ) return false;\r\n\r\n\t\t}\r\n\r\n\t\treturn true;\r\n\r\n\t};\r\n\r\n\r\n\tnamespace.Triangulate = process;\r\n\tnamespace.Triangulate.area = area;\r\n\r\n\treturn namespace;\r\n\r\n} )( THREE.FontUtils );\r\n\r\n// To use the typeface.js face files, hook up the API\r\nself._typeface_js = { faces: THREE.FontUtils.faces, loadFace: THREE.FontUtils.loadFace };\r\nTHREE.typeface_js = self._typeface_js;\r\n\r\n// File:src/extras/audio/Audio.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.Audio = function ( listener ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'Audio';\r\n\r\n\tthis.context = listener.context;\r\n\tthis.source = this.context.createBufferSource();\r\n\tthis.source.onended = this.onEnded.bind(this);\r\n\r\n\tthis.gain = this.context.createGain();\r\n\tthis.gain.connect( this.context.destination );\r\n\r\n\tthis.panner = this.context.createPanner();\r\n\tthis.panner.connect( this.gain );\r\n\r\n\tthis.autoplay = false;\r\n\r\n\tthis.startTime = 0;\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Audio.prototype.constructor = THREE.Audio;\r\n\r\nTHREE.Audio.prototype.load = function ( file ) {\r\n\r\n\tvar scope = this;\r\n\r\n\tvar request = new XMLHttpRequest();\r\n\trequest.open( 'GET', file, true );\r\n\trequest.responseType = 'arraybuffer';\r\n\trequest.onload = function ( e ) {\r\n\r\n\t\tscope.context.decodeAudioData( this.response, function ( buffer ) {\r\n\r\n\t\t\tscope.source.buffer = buffer;\r\n\r\n\t\t\tif( scope.autoplay ) scope.play();\r\n\r\n\t\t} );\r\n\r\n\t};\r\n\trequest.send();\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.play = function () {\r\n\r\n\tif ( this.isPlaying === true ) {\r\n\r\n\t\tTHREE.warn( 'THREE.Audio: Audio is already playing.' );\r\n\t\treturn;\r\n\r\n\t}\r\n\r\n\tvar source = this.context.createBufferSource();\r\n\r\n\tsource.buffer = this.source.buffer;\r\n\tsource.loop = this.source.loop;\r\n\tsource.onended = this.source.onended;\r\n\tsource.connect( this.panner );\r\n\tsource.start( 0, this.startTime );\r\n\r\n\tthis.isPlaying = true;\r\n\r\n\tthis.source = source;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.pause = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = this.context.currentTime;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.stop = function () {\r\n\r\n\tthis.source.stop();\r\n\tthis.startTime = 0;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.onEnded = function() {\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setLoop = function ( value ) {\r\n\r\n\tthis.source.loop = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRefDistance = function ( value ) {\r\n\r\n\tthis.panner.refDistance = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setRolloffFactor = function ( value ) {\r\n\r\n\tthis.panner.rolloffFactor = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.setVolume = function ( value ) {\r\n\r\n\tthis.gain.gain.value = value;\r\n\r\n};\r\n\r\nTHREE.Audio.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tposition.setFromMatrixPosition( this.matrixWorld );\r\n\r\n\t\tthis.panner.setPosition( position.x, position.y, position.z );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/audio/AudioListener.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AudioListener = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.type = 'AudioListener';\r\n\r\n\tthis.context = new ( window.AudioContext || window.webkitAudioContext )();\r\n\r\n};\r\n\r\nTHREE.AudioListener.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.AudioListener.prototype.constructor = THREE.AudioListener;\r\n\r\nTHREE.AudioListener.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar position = new THREE.Vector3();\r\n\tvar quaternion = new THREE.Quaternion();\r\n\tvar scale = new THREE.Vector3();\r\n\r\n\tvar orientation = new THREE.Vector3();\r\n\tvar velocity = new THREE.Vector3();\r\n\r\n\tvar positionPrev = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tTHREE.Object3D.prototype.updateMatrixWorld.call( this, force );\r\n\r\n\t\tvar listener = this.context.listener;\r\n\t\tvar up = this.up;\r\n\r\n\t\tthis.matrixWorld.decompose( position, quaternion, scale );\r\n\r\n\t\torientation.set( 0, 0, -1 ).applyQuaternion( quaternion );\r\n\t\tvelocity.subVectors( position, positionPrev );\r\n\r\n\t\tlistener.setPosition( position.x, position.y, position.z );\r\n\t\tlistener.setOrientation( orientation.x, orientation.y, orientation.z, up.x, up.y, up.z );\r\n\t\tlistener.setVelocity( velocity.x, velocity.y, velocity.z );\r\n\r\n\t\tpositionPrev.copy( position );\r\n\r\n\t};\r\n\r\n} )();\r\n\r\n// File:src/extras/core/Curve.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Extensible curve object\r\n *\r\n * Some common of Curve methods\r\n * .getPoint(t), getTangent(t)\r\n * .getPointAt(u), getTagentAt(u)\r\n * .getPoints(), .getSpacedPoints()\r\n * .getLength()\r\n * .updateArcLengths()\r\n *\r\n * This following classes subclasses THREE.Curve:\r\n *\r\n * -- 2d classes --\r\n * THREE.LineCurve\r\n * THREE.QuadraticBezierCurve\r\n * THREE.CubicBezierCurve\r\n * THREE.SplineCurve\r\n * THREE.ArcCurve\r\n * THREE.EllipseCurve\r\n *\r\n * -- 3d classes --\r\n * THREE.LineCurve3\r\n * THREE.QuadraticBezierCurve3\r\n * THREE.CubicBezierCurve3\r\n * THREE.SplineCurve3\r\n * THREE.ClosedSplineCurve3\r\n *\r\n * A series of curves can be represented as a THREE.CurvePath\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tAbstract Curve base class\r\n **************************************************************/\r\n\r\nTHREE.Curve = function () {\r\n\r\n};\r\n\r\n// Virtual base class method to overwrite and implement in subclasses\r\n//\t- t [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPoint = function ( t ) {\r\n\r\n\tTHREE.warn( \"THREE.Curve: Warning, getPoint() not implemented!\" );\r\n\treturn null;\r\n\r\n};\r\n\r\n// Get point at relative position in curve according to arc length\r\n// - u [0 .. 1]\r\n\r\nTHREE.Curve.prototype.getPointAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getPoint( t );\r\n\r\n};\r\n\r\n// Get sequence of points using getPoint( t )\r\n\r\nTHREE.Curve.prototype.getPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPoint( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get sequence of points using getPointAt( u )\r\n\r\nTHREE.Curve.prototype.getSpacedPoints = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = 5;\r\n\r\n\tvar d, pts = [];\r\n\r\n\tfor ( d = 0; d <= divisions; d ++ ) {\r\n\r\n\t\tpts.push( this.getPointAt( d / divisions ) );\r\n\r\n\t}\r\n\r\n\treturn pts;\r\n\r\n};\r\n\r\n// Get total curve arc length\r\n\r\nTHREE.Curve.prototype.getLength = function () {\r\n\r\n\tvar lengths = this.getLengths();\r\n\treturn lengths[ lengths.length - 1 ];\r\n\r\n};\r\n\r\n// Get list of cumulative segment lengths\r\n\r\nTHREE.Curve.prototype.getLengths = function ( divisions ) {\r\n\r\n\tif ( ! divisions ) divisions = (this.__arcLengthDivisions) ? (this.__arcLengthDivisions) : 200;\r\n\r\n\tif ( this.cacheArcLengths\r\n\t\t&& ( this.cacheArcLengths.length == divisions + 1 )\r\n\t\t&& ! this.needsUpdate) {\r\n\r\n\t\t//console.log( \"cached\", this.cacheArcLengths );\r\n\t\treturn this.cacheArcLengths;\r\n\r\n\t}\r\n\r\n\tthis.needsUpdate = false;\r\n\r\n\tvar cache = [];\r\n\tvar current, last = this.getPoint( 0 );\r\n\tvar p, sum = 0;\r\n\r\n\tcache.push( 0 );\r\n\r\n\tfor ( p = 1; p <= divisions; p ++ ) {\r\n\r\n\t\tcurrent = this.getPoint ( p / divisions );\r\n\t\tsum += current.distanceTo( last );\r\n\t\tcache.push( sum );\r\n\t\tlast = current;\r\n\r\n\t}\r\n\r\n\tthis.cacheArcLengths = cache;\r\n\r\n\treturn cache; // { sums: cache, sum:sum }; Sum is in the last element.\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.updateArcLengths = function() {\r\n\tthis.needsUpdate = true;\r\n\tthis.getLengths();\r\n};\r\n\r\n// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equi distance\r\n\r\nTHREE.Curve.prototype.getUtoTmapping = function ( u, distance ) {\r\n\r\n\tvar arcLengths = this.getLengths();\r\n\r\n\tvar i = 0, il = arcLengths.length;\r\n\r\n\tvar targetArcLength; // The targeted u distance value to get\r\n\r\n\tif ( distance ) {\r\n\r\n\t\ttargetArcLength = distance;\r\n\r\n\t} else {\r\n\r\n\t\ttargetArcLength = u * arcLengths[ il - 1 ];\r\n\r\n\t}\r\n\r\n\t//var time = Date.now();\r\n\r\n\t// binary search for the index with largest value smaller than target u distance\r\n\r\n\tvar low = 0, high = il - 1, comparison;\r\n\r\n\twhile ( low <= high ) {\r\n\r\n\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\r\n\r\n\t\tcomparison = arcLengths[ i ] - targetArcLength;\r\n\r\n\t\tif ( comparison < 0 ) {\r\n\r\n\t\t\tlow = i + 1;\r\n\r\n\t\t} else if ( comparison > 0 ) {\r\n\r\n\t\t\thigh = i - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\thigh = i;\r\n\t\t\tbreak;\r\n\r\n\t\t\t// DONE\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\ti = high;\r\n\r\n\t//console.log('b' , i, low, high, Date.now()- time);\r\n\r\n\tif ( arcLengths[ i ] == targetArcLength ) {\r\n\r\n\t\tvar t = i / ( il - 1 );\r\n\t\treturn t;\r\n\r\n\t}\r\n\r\n\t// we could get finer grain at lengths, or use simple interpolatation between two points\r\n\r\n\tvar lengthBefore = arcLengths[ i ];\r\n\tvar lengthAfter = arcLengths[ i + 1 ];\r\n\r\n\tvar segmentLength = lengthAfter - lengthBefore;\r\n\r\n    // determine where we are between the 'before' and 'after' points\r\n\r\n\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\r\n\r\n    // add that fractional amount to t\r\n\r\n\tvar t = ( i + segmentFraction ) / ( il - 1 );\r\n\r\n\treturn t;\r\n\r\n};\r\n\r\n// Returns a unit vector tangent at t\r\n// In case any sub curve does not implement its tangent derivation,\r\n// 2 points a small delta apart will be used to find its gradient\r\n// which seems to give a reasonable approximation\r\n\r\nTHREE.Curve.prototype.getTangent = function( t ) {\r\n\r\n\tvar delta = 0.0001;\r\n\tvar t1 = t - delta;\r\n\tvar t2 = t + delta;\r\n\r\n\t// Capping in case of danger\r\n\r\n\tif ( t1 < 0 ) t1 = 0;\r\n\tif ( t2 > 1 ) t2 = 1;\r\n\r\n\tvar pt1 = this.getPoint( t1 );\r\n\tvar pt2 = this.getPoint( t2 );\r\n\r\n\tvar vec = pt2.clone().sub(pt1);\r\n\treturn vec.normalize();\r\n\r\n};\r\n\r\n\r\nTHREE.Curve.prototype.getTangentAt = function ( u ) {\r\n\r\n\tvar t = this.getUtoTmapping( u );\r\n\treturn this.getTangent( t );\r\n\r\n};\r\n\r\n\r\n\r\n\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Curve.Utils = {\r\n\r\n\ttangentQuadraticBezier: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * ( p1 - p0 ) + 2 * t * ( p2 - p1 );\r\n\r\n\t},\r\n\r\n\t// Puay Bing, thanks for helping with this derivative!\r\n\r\n\ttangentCubicBezier: function (t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn - 3 * p0 * (1 - t) * (1 - t)  +\r\n\t\t\t3 * p1 * (1 - t) * (1 - t) - 6 * t * p1 * (1 - t) +\r\n\t\t\t6 * t *  p2 * (1 - t) - 3 * t * t * p2 +\r\n\t\t\t3 * t * t * p3;\r\n\r\n\t},\r\n\r\n\ttangentSpline: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\t// To check if my formulas are correct\r\n\r\n\t\tvar h00 = 6 * t * t - 6 * t; \t// derived from 2t^3 − 3t^2 + 1\r\n\t\tvar h10 = 3 * t * t - 4 * t + 1; // t^3 − 2t^2 + t\r\n\t\tvar h01 = - 6 * t * t + 6 * t; \t// − 2t3 + 3t2\r\n\t\tvar h11 = 3 * t * t - 2 * t;\t// t3 − t2\r\n\r\n\t\treturn h00 + h10 + h01 + h11;\r\n\r\n\t},\r\n\r\n\t// Catmull-Rom\r\n\r\n\tinterpolate: function( p0, p1, p2, p3, t ) {\r\n\r\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\r\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\r\n\t\tvar t2 = t * t;\r\n\t\tvar t3 = t * t2;\r\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// TODO: Transformation for Curves?\r\n\r\n/**************************************************************\r\n *\t3D Curves\r\n **************************************************************/\r\n\r\n// A Factory method for creating new curve subclasses\r\n\r\nTHREE.Curve.create = function ( constructor, getPointFunc ) {\r\n\r\n\tconstructor.prototype = Object.create( THREE.Curve.prototype );\r\n\tconstructor.prototype.constructor = constructor;\r\n\tconstructor.prototype.getPoint = getPointFunc;\r\n\r\n\treturn constructor;\r\n\r\n};\r\n\r\n// File:src/extras/core/CurvePath.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n **/\r\n\r\n/**************************************************************\r\n *\tCurved Path - a curve path is simply a array of connected\r\n *  curves, but retains the api of a curve\r\n **************************************************************/\r\n\r\nTHREE.CurvePath = function () {\r\n\r\n\tthis.curves = [];\r\n\tthis.bends = [];\r\n\t\r\n\tthis.autoClose = false; // Automatically closes the path\r\n};\r\n\r\nTHREE.CurvePath.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CurvePath.prototype.constructor = THREE.CurvePath;\r\n\r\nTHREE.CurvePath.prototype.add = function ( curve ) {\r\n\r\n\tthis.curves.push( curve );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.checkConnection = function() {\r\n\t// TODO\r\n\t// If the ending of curve is not connected to the starting\r\n\t// or the next curve, then, this is not a real path\r\n};\r\n\r\nTHREE.CurvePath.prototype.closePath = function() {\r\n\t// TODO Test\r\n\t// and verify for vector3 (needs to implement equals)\r\n\t// Add a line curve if start and end of lines are not connected\r\n\tvar startPoint = this.curves[0].getPoint(0);\r\n\tvar endPoint = this.curves[this.curves.length - 1].getPoint(1);\r\n\t\r\n\tif (! startPoint.equals(endPoint)) {\r\n\t\tthis.curves.push( new THREE.LineCurve(endPoint, startPoint) );\r\n\t}\r\n\t\r\n};\r\n\r\n// To get accurate point with reference to\r\n// entire path distance at time t,\r\n// following has to be done:\r\n\r\n// 1. Length of each sub path have to be known\r\n// 2. Locate and identify type of curve\r\n// 3. Get t for the curve\r\n// 4. Return curve.getPointAt(t')\r\n\r\nTHREE.CurvePath.prototype.getPoint = function( t ) {\r\n\r\n\tvar d = t * this.getLength();\r\n\tvar curveLengths = this.getCurveLengths();\r\n\tvar i = 0, diff, curve;\r\n\r\n\t// To think about boundaries points.\r\n\r\n\twhile ( i < curveLengths.length ) {\r\n\r\n\t\tif ( curveLengths[ i ] >= d ) {\r\n\r\n\t\t\tdiff = curveLengths[ i ] - d;\r\n\t\t\tcurve = this.curves[ i ];\r\n\r\n\t\t\tvar u = 1 - diff / curve.getLength();\r\n\r\n\t\t\treturn curve.getPointAt( u );\r\n\r\n\t\t}\r\n\r\n\t\ti ++;\r\n\r\n\t}\r\n\r\n\treturn null;\r\n\r\n\t// loop where sum != 0, sum > d , sum+1 <d\r\n\r\n};\r\n\r\n/*\r\nTHREE.CurvePath.prototype.getTangent = function( t ) {\r\n};*/\r\n\r\n\r\n// We cannot use the default THREE.Curve getPoint() with getLength() because in\r\n// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\r\n// getPoint() depends on getLength\r\n\r\nTHREE.CurvePath.prototype.getLength = function() {\r\n\r\n\tvar lens = this.getCurveLengths();\r\n\treturn lens[ lens.length - 1 ];\r\n\r\n};\r\n\r\n// Compute lengths and cache them\r\n// We cannot overwrite getLengths() because UtoT mapping uses it.\r\n\r\nTHREE.CurvePath.prototype.getCurveLengths = function() {\r\n\r\n\t// We use cache values if curves and cache array are same length\r\n\r\n\tif ( this.cacheLengths && this.cacheLengths.length == this.curves.length ) {\r\n\r\n\t\treturn this.cacheLengths;\r\n\r\n\t};\r\n\r\n\t// Get length of subsurve\r\n\t// Push sums into cached array\r\n\r\n\tvar lengths = [], sums = 0;\r\n\tvar i, il = this.curves.length;\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tsums += this.curves[ i ].getLength();\r\n\t\tlengths.push( sums );\r\n\r\n\t}\r\n\r\n\tthis.cacheLengths = lengths;\r\n\r\n\treturn lengths;\r\n\r\n};\r\n\r\n\r\n\r\n// Returns min and max coordinates\r\n\r\nTHREE.CurvePath.prototype.getBoundingBox = function () {\r\n\r\n\tvar points = this.getPoints();\r\n\r\n\tvar maxX, maxY, maxZ;\r\n\tvar minX, minY, minZ;\r\n\r\n\tmaxX = maxY = Number.NEGATIVE_INFINITY;\r\n\tminX = minY = Number.POSITIVE_INFINITY;\r\n\r\n\tvar p, i, il, sum;\r\n\r\n\tvar v3 = points[0] instanceof THREE.Vector3;\r\n\r\n\tsum = v3 ? new THREE.Vector3() : new THREE.Vector2();\r\n\r\n\tfor ( i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\tp = points[ i ];\r\n\r\n\t\tif ( p.x > maxX ) maxX = p.x;\r\n\t\telse if ( p.x < minX ) minX = p.x;\r\n\r\n\t\tif ( p.y > maxY ) maxY = p.y;\r\n\t\telse if ( p.y < minY ) minY = p.y;\r\n\r\n\t\tif ( v3 ) {\r\n\r\n\t\t\tif ( p.z > maxZ ) maxZ = p.z;\r\n\t\t\telse if ( p.z < minZ ) minZ = p.z;\r\n\r\n\t\t}\r\n\r\n\t\tsum.add( p );\r\n\r\n\t}\r\n\r\n\tvar ret = {\r\n\r\n\t\tminX: minX,\r\n\t\tminY: minY,\r\n\t\tmaxX: maxX,\r\n\t\tmaxY: maxY\r\n\r\n\t};\r\n\r\n\tif ( v3 ) {\r\n\r\n\t\tret.maxZ = maxZ;\r\n\t\tret.minZ = minZ;\r\n\r\n\t}\r\n\r\n\treturn ret;\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tCreate Geometries Helpers\r\n **************************************************************/\r\n\r\n/// Generate geometry from path points (for Line or Points objects)\r\n\r\nTHREE.CurvePath.prototype.createPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\n// Generate geometry from equidistance sampling along the path\r\n\r\nTHREE.CurvePath.prototype.createSpacedPointsGeometry = function( divisions ) {\r\n\r\n\tvar pts = this.getSpacedPoints( divisions, true );\r\n\treturn this.createGeometry( pts );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.createGeometry = function( points ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < points.length; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3( points[ i ].x, points[ i ].y, points[ i ].z || 0) );\r\n\r\n\t}\r\n\r\n\treturn geometry;\r\n\r\n};\r\n\r\n\r\n/**************************************************************\r\n *\tBend / Wrap Helper Methods\r\n **************************************************************/\r\n\r\n// Wrap path / Bend modifiers?\r\n\r\nTHREE.CurvePath.prototype.addWrapPath = function ( bendpath ) {\r\n\r\n\tthis.bends.push( bendpath );\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getPoints( segments ); // getPoints getSpacedPoints\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\nTHREE.CurvePath.prototype.getTransformedSpacedPoints = function( segments, bends ) {\r\n\r\n\tvar oldPts = this.getSpacedPoints( segments );\r\n\r\n\tvar i, il;\r\n\r\n\tif ( ! bends ) {\r\n\r\n\t\tbends = this.bends;\r\n\r\n\t}\r\n\r\n\tfor ( i = 0, il = bends.length; i < il; i ++ ) {\r\n\r\n\t\toldPts = this.getWrapPoints( oldPts, bends[ i ] );\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n// This returns getPoints() bend/wrapped around the contour of a path.\r\n// Read http://www.planetclegg.com/projects/WarpingTextToSplines.html\r\n\r\nTHREE.CurvePath.prototype.getWrapPoints = function ( oldPts, path ) {\r\n\r\n\tvar bounds = this.getBoundingBox();\r\n\r\n\tvar i, il, p, oldX, oldY, xNorm;\r\n\r\n\tfor ( i = 0, il = oldPts.length; i < il; i ++ ) {\r\n\r\n\t\tp = oldPts[ i ];\r\n\r\n\t\toldX = p.x;\r\n\t\toldY = p.y;\r\n\r\n\t\txNorm = oldX / bounds.maxX;\r\n\r\n\t\t// If using actual distance, for length > path, requires line extrusions\r\n\t\t//xNorm = path.getUtoTmapping(xNorm, oldX); // 3 styles. 1) wrap stretched. 2) wrap stretch by arc length 3) warp by actual distance\r\n\r\n\t\txNorm = path.getUtoTmapping( xNorm, oldX );\r\n\r\n\t\t// check for out of bounds?\r\n\r\n\t\tvar pathPt = path.getPoint( xNorm );\r\n\t\tvar normal = path.getTangent( xNorm );\r\n\t\tnormal.set( - normal.y, normal.x ).multiplyScalar( oldY );\r\n\r\n\t\tp.x = pathPt.x + normal.x;\r\n\t\tp.y = pathPt.y + normal.y;\r\n\r\n\t}\r\n\r\n\treturn oldPts;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/core/Gyroscope.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Gyroscope = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n};\r\n\r\nTHREE.Gyroscope.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.Gyroscope.prototype.constructor = THREE.Gyroscope;\r\n\r\nTHREE.Gyroscope.prototype.updateMatrixWorld = ( function () {\r\n\r\n\tvar translationObject = new THREE.Vector3();\r\n\tvar quaternionObject = new THREE.Quaternion();\r\n\tvar scaleObject = new THREE.Vector3();\r\n\r\n\tvar translationWorld = new THREE.Vector3();\r\n\tvar quaternionWorld = new THREE.Quaternion();\r\n\tvar scaleWorld = new THREE.Vector3();\r\n\r\n\treturn function ( force ) {\r\n\r\n\t\tthis.matrixAutoUpdate && this.updateMatrix();\r\n\r\n\t\t// update matrixWorld\r\n\r\n\t\tif ( this.matrixWorldNeedsUpdate || force ) {\r\n\r\n\t\t\tif ( this.parent ) {\r\n\r\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\r\n\r\n\t\t\t\tthis.matrixWorld.decompose( translationWorld, quaternionWorld, scaleWorld );\r\n\t\t\t\tthis.matrix.decompose( translationObject, quaternionObject, scaleObject );\r\n\r\n\t\t\t\tthis.matrixWorld.compose( translationWorld, quaternionObject, scaleWorld );\r\n\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tthis.matrixWorldNeedsUpdate = false;\r\n\r\n\t\t\tforce = true;\r\n\r\n\t\t}\r\n\r\n\t\t// update children\r\n\r\n\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\r\n\r\n\t\t\tthis.children[ i ].updateMatrixWorld( force );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\t\r\n}() );\r\n\r\n// File:src/extras/core/Path.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Creates free form 2d path using series of points, lines or curves.\r\n *\r\n **/\r\n\r\nTHREE.Path = function ( points ) {\r\n\r\n\tTHREE.CurvePath.call(this);\r\n\r\n\tthis.actions = [];\r\n\r\n\tif ( points ) {\r\n\r\n\t\tthis.fromPoints( points );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.Path.prototype = Object.create( THREE.CurvePath.prototype );\r\nTHREE.Path.prototype.constructor = THREE.Path;\r\n\r\nTHREE.PathActions = {\r\n\r\n\tMOVE_TO: 'moveTo',\r\n\tLINE_TO: 'lineTo',\r\n\tQUADRATIC_CURVE_TO: 'quadraticCurveTo', // Bezier quadratic curve\r\n\tBEZIER_CURVE_TO: 'bezierCurveTo', \t\t// Bezier cubic curve\r\n\tCSPLINE_THRU: 'splineThru',\t\t\t\t// Catmull-rom spline\r\n\tARC: 'arc',\t\t\t\t\t\t\t\t// Circle\r\n\tELLIPSE: 'ellipse'\r\n};\r\n\r\n// TODO Clean up PATH API\r\n\r\n// Create path using straight lines to connect all points\r\n// - vectors: array of Vector2\r\n\r\nTHREE.Path.prototype.fromPoints = function ( vectors ) {\r\n\r\n\tthis.moveTo( vectors[ 0 ].x, vectors[ 0 ].y );\r\n\r\n\tfor ( var v = 1, vlen = vectors.length; v < vlen; v ++ ) {\r\n\r\n\t\tthis.lineTo( vectors[ v ].x, vectors[ v ].y );\r\n\r\n\t};\r\n\r\n};\r\n\r\n// startPath() endPath()?\r\n\r\nTHREE.Path.prototype.moveTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tthis.actions.push( { action: THREE.PathActions.MOVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.lineTo = function ( x, y ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.LineCurve( new THREE.Vector2( x0, y0 ), new THREE.Vector2( x, y ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.LINE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.quadraticCurveTo = function( aCPx, aCPy, aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.QuadraticBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCPx, aCPy ),\r\n\t\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.QUADRATIC_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.bezierCurveTo = function( aCP1x, aCP1y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aCP2x, aCP2y,\r\n\t\t\t\t\t\t\t\t\t\t\t   aX, aY ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tvar curve = new THREE.CubicBezierCurve( new THREE.Vector2( x0, y0 ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP1x, aCP1y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aCP2x, aCP2y ),\r\n\t\t\t\t\t\t\t\t\t\t\tnew THREE.Vector2( aX, aY ) );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.BEZIER_CURVE_TO, args: args } );\r\n\r\n};\r\n\r\nTHREE.Path.prototype.splineThru = function( pts /*Array of Vector*/ ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar lastargs = this.actions[ this.actions.length - 1 ].args;\r\n\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n//---\r\n\tvar npts = [ new THREE.Vector2( x0, y0 ) ];\r\n\tArray.prototype.push.apply( npts, pts );\r\n\r\n\tvar curve = new THREE.SplineCurve( npts );\r\n\tthis.curves.push( curve );\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.CSPLINE_THRU, args: args } );\r\n\r\n};\r\n\r\n// FUTURE: Change the API or follow canvas API?\r\n\r\nTHREE.Path.prototype.arc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absarc(aX + x0, aY + y0, aRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n THREE.Path.prototype.absarc = function ( aX, aY, aRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\r\n };\r\n\r\nTHREE.Path.prototype.ellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar lastargs = this.actions[ this.actions.length - 1].args;\r\n\tvar x0 = lastargs[ lastargs.length - 2 ];\r\n\tvar y0 = lastargs[ lastargs.length - 1 ];\r\n\r\n\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius,\r\n\t\taStartAngle, aEndAngle, aClockwise );\r\n\r\n };\r\n\r\n\r\nTHREE.Path.prototype.absellipse = function ( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\t  aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tvar args = Array.prototype.slice.call( arguments );\r\n\tvar curve = new THREE.EllipseCurve( aX, aY, xRadius, yRadius,\r\n\t\t\t\t\t\t\t\t\taStartAngle, aEndAngle, aClockwise );\r\n\tthis.curves.push( curve );\r\n\r\n\tvar lastPoint = curve.getPoint(1);\r\n\targs.push(lastPoint.x);\r\n\targs.push(lastPoint.y);\r\n\r\n\tthis.actions.push( { action: THREE.PathActions.ELLIPSE, args: args } );\r\n\r\n };\r\n\r\nTHREE.Path.prototype.getSpacedPoints = function ( divisions, closedPath ) {\r\n\r\n\tif ( ! divisions ) divisions = 40;\r\n\r\n\tvar points = [];\r\n\r\n\tfor ( var i = 0; i < divisions; i ++ ) {\r\n\r\n\t\tpoints.push( this.getPoint( i / divisions ) );\r\n\r\n\t\t//if( !this.getPoint( i / divisions ) ) throw \"DIE\";\r\n\r\n\t}\r\n\r\n\t// if ( closedPath ) {\r\n\t//\r\n\t// \tpoints.push( points[ 0 ] );\r\n\t//\r\n\t// }\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n/* Return an array of vectors based on contour of the path */\r\n\r\nTHREE.Path.prototype.getPoints = function( divisions, closedPath ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\tconsole.log('tata');\r\n\t\treturn this.getSpacedPoints( divisions, closedPath );\r\n\t}\r\n\r\n\tdivisions = divisions || 12;\r\n\r\n\tvar points = [];\r\n\r\n\tvar i, il, item, action, args;\r\n\tvar cpx, cpy, cpx2, cpy2, cpx1, cpy1, cpx0, cpy0,\r\n\t\tlaste, j,\r\n\t\tt, tx, ty;\r\n\r\n\tfor ( i = 0, il = this.actions.length; i < il; i ++ ) {\r\n\r\n\t\titem = this.actions[ i ];\r\n\r\n\t\taction = item.action;\r\n\t\targs = item.args;\r\n\r\n\t\tswitch ( action ) {\r\n\r\n\t\tcase THREE.PathActions.MOVE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.LINE_TO:\r\n\r\n\t\t\tpoints.push( new THREE.Vector2( args[ 0 ], args[ 1 ] ) );\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.QUADRATIC_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 2 ];\r\n\t\t\tcpy  = args[ 3 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b2( t, cpx0, cpx1, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b2( t, cpy0, cpy1, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.BEZIER_CURVE_TO:\r\n\r\n\t\t\tcpx  = args[ 4 ];\r\n\t\t\tcpy  = args[ 5 ];\r\n\r\n\t\t\tcpx1 = args[ 0 ];\r\n\t\t\tcpy1 = args[ 1 ];\r\n\r\n\t\t\tcpx2 = args[ 2 ];\r\n\t\t\tcpy2 = args[ 3 ];\r\n\r\n\t\t\tif ( points.length > 0 ) {\r\n\r\n\t\t\t\tlaste = points[ points.length - 1 ];\r\n\r\n\t\t\t\tcpx0 = laste.x;\r\n\t\t\t\tcpy0 = laste.y;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\t\tcpx0 = laste[ laste.length - 2 ];\r\n\t\t\t\tcpy0 = laste[ laste.length - 1 ];\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\tfor ( j = 1; j <= divisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / divisions;\r\n\r\n\t\t\t\ttx = THREE.Shape.Utils.b3( t, cpx0, cpx1, cpx2, cpx );\r\n\t\t\t\tty = THREE.Shape.Utils.b3( t, cpy0, cpy1, cpy2, cpy );\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.CSPLINE_THRU:\r\n\r\n\t\t\tlaste = this.actions[ i - 1 ].args;\r\n\r\n\t\t\tvar last = new THREE.Vector2( laste[ laste.length - 2 ], laste[ laste.length - 1 ] );\r\n\t\t\tvar spts = [ last ];\r\n\r\n\t\t\tvar n = divisions * args[ 0 ].length;\r\n\r\n\t\t\tspts = spts.concat( args[ 0 ] );\r\n\r\n\t\t\tvar spline = new THREE.SplineCurve( spts );\r\n\r\n\t\t\tfor ( j = 1; j <= n; j ++ ) {\r\n\r\n\t\t\t\tpoints.push( spline.getPointAt( j / n ) ) ;\r\n\r\n\t\t\t}\r\n\r\n\t\t\tbreak;\r\n\r\n\t\tcase THREE.PathActions.ARC:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\taRadius = args[ 2 ],\r\n\t\t\t\taStartAngle = args[ 3 ], aEndAngle = args[ 4 ],\r\n\t\t\t\taClockwise = !! args[ 5 ];\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + aRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + aRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\t\t  \r\n\t\tcase THREE.PathActions.ELLIPSE:\r\n\r\n\t\t\tvar aX = args[ 0 ], aY = args[ 1 ],\r\n\t\t\t\txRadius = args[ 2 ],\r\n\t\t\t\tyRadius = args[ 3 ],\r\n\t\t\t\taStartAngle = args[ 4 ], aEndAngle = args[ 5 ],\r\n\t\t\t\taClockwise = !! args[ 6 ];\r\n\r\n\r\n\t\t\tvar deltaAngle = aEndAngle - aStartAngle;\r\n\t\t\tvar angle;\r\n\t\t\tvar tdivisions = divisions * 2;\r\n\r\n\t\t\tfor ( j = 1; j <= tdivisions; j ++ ) {\r\n\r\n\t\t\t\tt = j / tdivisions;\r\n\r\n\t\t\t\tif ( ! aClockwise ) {\r\n\r\n\t\t\t\t\tt = 1 - t;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tangle = aStartAngle + t * deltaAngle;\r\n\r\n\t\t\t\ttx = aX + xRadius * Math.cos( angle );\r\n\t\t\t\tty = aY + yRadius * Math.sin( angle );\r\n\r\n\t\t\t\t//console.log('t', t, 'angle', angle, 'tx', tx, 'ty', ty);\r\n\r\n\t\t\t\tpoints.push( new THREE.Vector2( tx, ty ) );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t//console.log(points);\r\n\r\n\t\t\tbreak;\r\n\r\n\t\t} // end switch\r\n\r\n\t}\r\n\r\n\r\n\r\n\t// Normalize to remove the closing point by default.\r\n\tvar lastPoint = points[ points.length - 1];\r\n\tvar EPSILON = 0.0000000001;\r\n\tif ( Math.abs(lastPoint.x - points[ 0 ].x) < EPSILON &&\r\n\t\t\t Math.abs(lastPoint.y - points[ 0 ].y) < EPSILON)\r\n\t\tpoints.splice( points.length - 1, 1);\r\n\tif ( closedPath ) {\r\n\r\n\t\tpoints.push( points[ 0 ] );\r\n\r\n\t}\r\n\r\n\treturn points;\r\n\r\n};\r\n\r\n//\r\n// Breaks path into shapes\r\n//\r\n//\tAssumptions (if parameter isCCW==true the opposite holds):\r\n//\t- solid shapes are defined clockwise (CW)\r\n//\t- holes are defined counterclockwise (CCW)\r\n//\r\n//\tIf parameter noHoles==true:\r\n//  - all subPaths are regarded as solid shapes\r\n//  - definition order CW/CCW has no relevance\r\n//\r\n\r\nTHREE.Path.prototype.toShapes = function( isCCW, noHoles ) {\r\n\r\n\tfunction extractSubpaths( inActions ) {\r\n\r\n\t\tvar i, il, item, action, args;\r\n\r\n\t\tvar subPaths = [], lastPath = new THREE.Path();\r\n\r\n\t\tfor ( i = 0, il = inActions.length; i < il; i ++ ) {\r\n\r\n\t\t\titem = inActions[ i ];\r\n\r\n\t\t\targs = item.args;\r\n\t\t\taction = item.action;\r\n\r\n\t\t\tif ( action == THREE.PathActions.MOVE_TO ) {\r\n\r\n\t\t\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\t\t\tsubPaths.push( lastPath );\r\n\t\t\t\t\tlastPath = new THREE.Path();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlastPath[ action ].apply( lastPath, args );\r\n\r\n\t\t}\r\n\r\n\t\tif ( lastPath.actions.length != 0 ) {\r\n\r\n\t\t\tsubPaths.push( lastPath );\r\n\r\n\t\t}\r\n\r\n\t\t// console.log(subPaths);\r\n\r\n\t\treturn\tsubPaths;\r\n\t}\r\n\r\n\tfunction toShapesNoHoles( inSubpaths ) {\r\n\r\n\t\tvar shapes = [];\r\n\r\n\t\tfor ( var i = 0, il = inSubpaths.length; i < il; i ++ ) {\r\n\r\n\t\t\tvar tmpPath = inSubpaths[ i ];\r\n\r\n\t\t\tvar tmpShape = new THREE.Shape();\r\n\t\t\ttmpShape.actions = tmpPath.actions;\r\n\t\t\ttmpShape.curves = tmpPath.curves;\r\n\r\n\t\t\tshapes.push( tmpShape );\r\n\t\t}\r\n\r\n\t\t//console.log(\"shape\", shapes);\r\n\r\n\t\treturn shapes;\r\n\t};\r\n\r\n\tfunction isPointInsidePolygon( inPt, inPolygon ) {\r\n\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\tvar polyLen = inPolygon.length;\r\n\r\n\t\t// inPt on polygon contour => immediate success    or\r\n\t\t// toggling of inside/outside at every single! intersection point of an edge\r\n\t\t//  with the horizontal line through inPt, left of inPt\r\n\t\t//  not counting lowerY endpoints of edges and whole edges on that line\r\n\t\tvar inside = false;\r\n\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\r\n\t\t\tvar edgeLowPt  = inPolygon[ p ];\r\n\t\t\tvar edgeHighPt = inPolygon[ q ];\r\n\r\n\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\r\n\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\r\n\r\n\t\t\tif ( Math.abs(edgeDy) > EPSILON ) {\t\t\t// not parallel\r\n\t\t\t\tif ( edgeDy < 0 ) {\r\n\t\t\t\t\tedgeLowPt  = inPolygon[ q ]; edgeDx = - edgeDx;\r\n\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\r\n\t\t\t\t}\r\n\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\tcontinue;\r\n\r\n\t\t\t\tif ( inPt.y == edgeLowPt.y ) {\r\n\t\t\t\t\tif ( inPt.x == edgeLowPt.x )\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvar perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\r\n\t\t\t\t\tif ( perpEdge == 0 )\t\t\t\treturn\ttrue;\t\t// inPt is on contour ?\r\n\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\tcontinue;\r\n\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( inPt.y != edgeLowPt.y ) \t\tcontinue;\t\t\t// parallel\r\n\t\t\t\t// egde lies on the same horizontal line as inPt\r\n\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\r\n\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\treturn\ttrue;\t// inPt: Point on contour !\r\n\t\t\t\t// continue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn\tinside;\r\n\t}\r\n\r\n\r\n\tvar subPaths = extractSubpaths( this.actions );\r\n\tif ( subPaths.length == 0 ) return [];\r\n\r\n\tif ( noHoles === true )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tvar solid, tmpPath, tmpShape, shapes = [];\r\n\r\n\tif ( subPaths.length == 1) {\r\n\r\n\t\ttmpPath = subPaths[0];\r\n\t\ttmpShape = new THREE.Shape();\r\n\t\ttmpShape.actions = tmpPath.actions;\r\n\t\ttmpShape.curves = tmpPath.curves;\r\n\t\tshapes.push( tmpShape );\r\n\t\treturn shapes;\r\n\r\n\t}\r\n\r\n\tvar holesFirst = ! THREE.Shape.Utils.isClockWise( subPaths[ 0 ].getPoints() );\r\n\tholesFirst = isCCW ? ! holesFirst : holesFirst;\r\n\r\n\t// console.log(\"Holes first\", holesFirst);\r\n\t\r\n\tvar betterShapeHoles = [];\r\n\tvar newShapes = [];\r\n\tvar newShapeHoles = [];\r\n\tvar mainIdx = 0;\r\n\tvar tmpPoints;\r\n\r\n\tnewShapes[mainIdx] = undefined;\r\n\tnewShapeHoles[mainIdx] = [];\r\n\r\n\tvar i, il;\r\n\r\n\tfor ( i = 0, il = subPaths.length; i < il; i ++ ) {\r\n\r\n\t\ttmpPath = subPaths[ i ];\r\n\t\ttmpPoints = tmpPath.getPoints();\r\n\t\tsolid = THREE.Shape.Utils.isClockWise( tmpPoints );\r\n\t\tsolid = isCCW ? ! solid : solid;\r\n\r\n\t\tif ( solid ) {\r\n\r\n\t\t\tif ( (! holesFirst ) && ( newShapes[mainIdx] ) )\tmainIdx ++;\r\n\r\n\t\t\tnewShapes[mainIdx] = { s: new THREE.Shape(), p: tmpPoints };\r\n\t\t\tnewShapes[mainIdx].s.actions = tmpPath.actions;\r\n\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\r\n\t\t\t\r\n\t\t\tif ( holesFirst )\tmainIdx ++;\r\n\t\t\tnewShapeHoles[mainIdx] = [];\r\n\r\n\t\t\t//console.log('cw', i);\r\n\r\n\t\t} else {\r\n\r\n\t\t\tnewShapeHoles[mainIdx].push( { h: tmpPath, p: tmpPoints[0] } );\r\n\r\n\t\t\t//console.log('ccw', i);\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// only Holes? -> probably all Shapes with wrong orientation\r\n\tif ( ! newShapes[0] )\treturn\ttoShapesNoHoles( subPaths );\r\n\r\n\r\n\tif ( newShapes.length > 1 ) {\r\n\t\tvar ambigious = false;\r\n\t\tvar toChange = [];\r\n\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tbetterShapeHoles[sIdx] = [];\r\n\t\t}\r\n\t\tfor (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\r\n\t\t\tvar sho = newShapeHoles[sIdx];\r\n\t\t\tfor (var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\r\n\t\t\t\tvar ho = sho[hIdx];\r\n\t\t\t\tvar hole_unassigned = true;\r\n\t\t\t\tfor (var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\r\n\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[s2Idx].p ) ) {\r\n\t\t\t\t\t\tif ( sIdx != s2Idx )\t\ttoChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } );\r\n\t\t\t\t\t\tif ( hole_unassigned ) {\r\n\t\t\t\t\t\t\thole_unassigned = false;\r\n\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push( ho );\r\n\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\tambigious = true;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( hole_unassigned ) { betterShapeHoles[sIdx].push( ho ); }\r\n\t\t\t}\r\n\t\t}\r\n\t\t// console.log(\"ambigious: \", ambigious);\r\n\t\tif ( toChange.length > 0 ) {\r\n\t\t\t// console.log(\"to change: \", toChange);\r\n\t\t\tif (! ambigious)\tnewShapeHoles = betterShapeHoles;\r\n\t\t}\r\n\t}\r\n\r\n\tvar tmpHoles, j, jl;\r\n\tfor ( i = 0, il = newShapes.length; i < il; i ++ ) {\r\n\t\ttmpShape = newShapes[i].s;\r\n\t\tshapes.push( tmpShape );\r\n\t\ttmpHoles = newShapeHoles[i];\r\n\t\tfor ( j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\r\n\t\t\ttmpShape.holes.push( tmpHoles[j].h );\r\n\t\t}\r\n\t}\r\n\r\n\t//console.log(\"shape\", shapes);\r\n\r\n\treturn shapes;\r\n\r\n};\r\n\r\n// File:src/extras/core/Shape.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * Defines a 2d shape plane using paths.\r\n **/\r\n\r\n// STEP 1 Create a path.\r\n// STEP 2 Turn path into shape.\r\n// STEP 3 ExtrudeGeometry takes in Shape/Shapes\r\n// STEP 3a - Extract points from each shape, turn to vertices\r\n// STEP 3b - Triangulate each shape, add faces.\r\n\r\nTHREE.Shape = function () {\r\n\r\n\tTHREE.Path.apply( this, arguments );\r\n\tthis.holes = [];\r\n\r\n};\r\n\r\nTHREE.Shape.prototype = Object.create( THREE.Path.prototype );\r\nTHREE.Shape.prototype.constructor = THREE.Shape;\r\n\r\n// Convenience method to return ExtrudeGeometry\r\n\r\nTHREE.Shape.prototype.extrude = function ( options ) {\r\n\r\n\tvar extruded = new THREE.ExtrudeGeometry( this, options );\r\n\treturn extruded;\r\n\r\n};\r\n\r\n// Convenience method to return ShapeGeometry\r\n\r\nTHREE.Shape.prototype.makeGeometry = function ( options ) {\r\n\r\n\tvar geometry = new THREE.ShapeGeometry( this, options );\r\n\treturn geometry;\r\n\r\n};\r\n\r\n// Get points of holes\r\n\r\nTHREE.Shape.prototype.getPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n// Get points of holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.getSpacedPointsHoles = function ( divisions ) {\r\n\r\n\tvar i, il = this.holes.length, holesPts = [];\r\n\r\n\tfor ( i = 0; i < il; i ++ ) {\r\n\r\n\t\tholesPts[ i ] = this.holes[ i ].getTransformedSpacedPoints( divisions, this.bends );\r\n\r\n\t}\r\n\r\n\treturn holesPts;\r\n\r\n};\r\n\r\n\r\n// Get points of shape and holes (keypoints based on segments parameter)\r\n\r\nTHREE.Shape.prototype.extractAllPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedPoints( divisions ),\r\n\t\tholes: this.getPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\nTHREE.Shape.prototype.extractPoints = function ( divisions ) {\r\n\r\n\tif (this.useSpacedPoints) {\r\n\t\treturn this.extractAllSpacedPoints(divisions);\r\n\t}\r\n\r\n\treturn this.extractAllPoints(divisions);\r\n\r\n};\r\n\r\n//\r\n// THREE.Shape.prototype.extractAllPointsWithBend = function ( divisions, bend ) {\r\n//\r\n// \treturn {\r\n//\r\n// \t\tshape: this.transform( bend, divisions ),\r\n// \t\tholes: this.getPointsHoles( divisions, bend )\r\n//\r\n// \t};\r\n//\r\n// };\r\n\r\n// Get points of shape and holes (spaced by regular distance)\r\n\r\nTHREE.Shape.prototype.extractAllSpacedPoints = function ( divisions ) {\r\n\r\n\treturn {\r\n\r\n\t\tshape: this.getTransformedSpacedPoints( divisions ),\r\n\t\tholes: this.getSpacedPointsHoles( divisions )\r\n\r\n\t};\r\n\r\n};\r\n\r\n/**************************************************************\r\n *\tUtils\r\n **************************************************************/\r\n\r\nTHREE.Shape.Utils = {\r\n\r\n\ttriangulateShape: function ( contour, holes ) {\r\n\r\n\t\tfunction point_in_segment_2D_colin( inSegPt1, inSegPt2, inOtherPt ) {\r\n\t\t\t// inOtherPt needs to be colinear to the inSegment\r\n\t\t\tif ( inSegPt1.x != inSegPt2.x ) {\r\n\t\t\t\tif ( inSegPt1.x < inSegPt2.x ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt2.x ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.x <= inOtherPt.x ) && ( inOtherPt.x <= inSegPt1.x ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\tif ( inSegPt1.y < inSegPt2.y ) {\r\n\t\t\t\t\treturn\t( ( inSegPt1.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt2.y ) );\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn\t( ( inSegPt2.y <= inOtherPt.y ) && ( inOtherPt.y <= inSegPt1.y ) );\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction intersect_segments_2D( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1, inSeg2Pt2, inExcludeAdjacentSegs ) {\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\tvar seg1dx = inSeg1Pt2.x - inSeg1Pt1.x,   seg1dy = inSeg1Pt2.y - inSeg1Pt1.y;\r\n\t\t\tvar seg2dx = inSeg2Pt2.x - inSeg2Pt1.x,   seg2dy = inSeg2Pt2.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar seg1seg2dx = inSeg1Pt1.x - inSeg2Pt1.x;\r\n\t\t\tvar seg1seg2dy = inSeg1Pt1.y - inSeg2Pt1.y;\r\n\r\n\t\t\tvar limit\t\t= seg1dy * seg2dx - seg1dx * seg2dy;\r\n\t\t\tvar perpSeg1\t= seg1dy * seg1seg2dx - seg1dx * seg1seg2dy;\r\n\r\n\t\t\tif ( Math.abs(limit) > EPSILON ) {\t\t\t// not parallel\r\n\r\n\t\t\t\tvar perpSeg2;\r\n\t\t\t\tif ( limit > 0 ) {\r\n\t\t\t\t\tif ( ( perpSeg1 < 0 ) || ( perpSeg1 > limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 < 0 ) || ( perpSeg2 > limit ) ) \t\treturn [];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( ( perpSeg1 > 0 ) || ( perpSeg1 < limit ) ) \t\treturn [];\r\n\t\t\t\t\tperpSeg2 = seg2dy * seg1seg2dx - seg2dx * seg1seg2dy;\r\n\t\t\t\t\tif ( ( perpSeg2 > 0 ) || ( perpSeg2 < limit ) ) \t\treturn [];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// i.e. to reduce rounding errors\r\n\t\t\t\t// intersection at endpoint of segment#1?\r\n\t\t\t\tif ( perpSeg2 == 0 ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\tif ( perpSeg2 == limit ) {\r\n\t\t\t\t\tif ( ( inExcludeAdjacentSegs ) &&\r\n\t\t\t\t\t\t ( ( perpSeg1 == 0 ) || ( perpSeg1 == limit ) ) )\t\treturn [];\r\n\t\t\t\t\treturn [ inSeg1Pt2 ];\r\n\t\t\t\t}\r\n\t\t\t\t// intersection at endpoint of segment#2?\r\n\t\t\t\tif ( perpSeg1 == 0 )\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\tif ( perpSeg1 == limit )\treturn [ inSeg2Pt2 ];\r\n\r\n\t\t\t\t// return real intersection point\r\n\t\t\t\tvar factorSeg1 = perpSeg2 / limit;\r\n\t\t\t\treturn\t[ { x: inSeg1Pt1.x + factorSeg1 * seg1dx,\r\n\t\t\t\t\t\t\ty: inSeg1Pt1.y + factorSeg1 * seg1dy } ];\r\n\r\n\t\t\t} else {\t\t// parallel or colinear\r\n\t\t\t\tif ( ( perpSeg1 != 0 ) ||\r\n\t\t\t\t\t ( seg2dy * seg1seg2dx != seg2dx * seg1seg2dy ) ) \t\t\treturn [];\r\n\r\n\t\t\t\t// they are collinear or degenerate\r\n\t\t\t\tvar seg1Pt = ( (seg1dx == 0) && (seg1dy == 0) );\t// segment1 ist just a point?\r\n\t\t\t\tvar seg2Pt = ( (seg2dx == 0) && (seg2dy == 0) );\t// segment2 ist just a point?\r\n\t\t\t\t// both segments are points\r\n\t\t\t\tif ( seg1Pt && seg2Pt ) {\r\n\t\t\t\t\tif ( (inSeg1Pt1.x != inSeg2Pt1.x) ||\r\n\t\t\t\t\t\t (inSeg1Pt1.y != inSeg2Pt1.y) )\t\treturn [];   \t// they are distinct  points\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];                 \t\t\t\t\t// they are the same point\r\n\t\t\t\t}\r\n\t\t\t\t// segment#1  is a single point\r\n\t\t\t\tif ( seg1Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg2Pt1, inSeg2Pt2, inSeg1Pt1 ) )\t\treturn [];\t\t// but not in segment#2\r\n\t\t\t\t\treturn [ inSeg1Pt1 ];\r\n\t\t\t\t}\r\n\t\t\t\t// segment#2  is a single point\r\n\t\t\t\tif ( seg2Pt ) {\r\n\t\t\t\t\tif (! point_in_segment_2D_colin( inSeg1Pt1, inSeg1Pt2, inSeg2Pt1 ) )\t\treturn [];\t\t// but not in segment#1\r\n\t\t\t\t\treturn [ inSeg2Pt1 ];\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// they are collinear segments, which might overlap\r\n\t\t\t\tvar seg1min, seg1max, seg1minVal, seg1maxVal;\r\n\t\t\t\tvar seg2min, seg2max, seg2minVal, seg2maxVal;\r\n\t\t\t\tif (seg1dx != 0) {\t\t// the segments are NOT on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.x < inSeg1Pt2.x ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.x;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.x < inSeg2Pt2.x ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.x;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.x;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.x;\r\n\t\t\t\t\t}\r\n\t\t\t\t} else {\t\t\t\t// the segments are on a vertical line\r\n\t\t\t\t\tif ( inSeg1Pt1.y < inSeg1Pt2.y ) {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt1; seg1minVal = inSeg1Pt1.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt2; seg1maxVal = inSeg1Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg1min = inSeg1Pt2; seg1minVal = inSeg1Pt2.y;\r\n\t\t\t\t\t\tseg1max = inSeg1Pt1; seg1maxVal = inSeg1Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( inSeg2Pt1.y < inSeg2Pt2.y ) {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt1; seg2minVal = inSeg2Pt1.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt2; seg2maxVal = inSeg2Pt2.y;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tseg2min = inSeg2Pt2; seg2minVal = inSeg2Pt2.y;\r\n\t\t\t\t\t\tseg2max = inSeg2Pt1; seg2maxVal = inSeg2Pt1.y;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\tif ( seg1minVal <= seg2minVal ) {\r\n\t\t\t\t\tif ( seg1maxVal <  seg2minVal )\treturn [];\r\n\t\t\t\t\tif ( seg1maxVal == seg2minVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg2min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg2min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg2min, seg2max ];\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( seg1minVal >  seg2maxVal )\treturn [];\r\n\t\t\t\t\tif ( seg1minVal == seg2maxVal )\t{\r\n\t\t\t\t\t\tif ( inExcludeAdjacentSegs )\t\treturn [];\r\n\t\t\t\t\t\treturn [ seg1min ];\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( seg1maxVal <= seg2maxVal )\treturn [ seg1min, seg1max ];\r\n\t\t\t\t\treturn\t[ seg1min, seg2max ];\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction isPointInsideAngle( inVertex, inLegFromPt, inLegToPt, inOtherPt ) {\r\n\t\t\t// The order of legs is important\r\n\r\n\t\t\tvar EPSILON = 0.0000000001;\r\n\r\n\t\t\t// translation of all points, so that Vertex is at (0,0)\r\n\t\t\tvar legFromPtX\t= inLegFromPt.x - inVertex.x,  legFromPtY\t= inLegFromPt.y - inVertex.y;\r\n\t\t\tvar legToPtX\t= inLegToPt.x\t- inVertex.x,  legToPtY\t\t= inLegToPt.y\t- inVertex.y;\r\n\t\t\tvar otherPtX\t= inOtherPt.x\t- inVertex.x,  otherPtY\t\t= inOtherPt.y\t- inVertex.y;\r\n\r\n\t\t\t// main angle >0: < 180 deg.; 0: 180 deg.; <0: > 180 deg.\r\n\t\t\tvar from2toAngle\t= legFromPtX * legToPtY - legFromPtY * legToPtX;\r\n\t\t\tvar from2otherAngle\t= legFromPtX * otherPtY - legFromPtY * otherPtX;\r\n\r\n\t\t\tif ( Math.abs(from2toAngle) > EPSILON ) {\t\t\t// angle != 180 deg.\r\n\r\n\t\t\t\tvar other2toAngle\t\t= otherPtX * legToPtY - otherPtY * legToPtX;\r\n\t\t\t\t// console.log( \"from2to: \" + from2toAngle + \", from2other: \" + from2otherAngle + \", other2to: \" + other2toAngle );\r\n\r\n\t\t\t\tif ( from2toAngle > 0 ) {\t\t\t\t// main angle < 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) && ( other2toAngle >= 0 ) );\r\n\t\t\t\t} else {\t\t\t\t\t\t\t\t// main angle > 180 deg.\r\n\t\t\t\t\treturn\t( ( from2otherAngle >= 0 ) || ( other2toAngle >= 0 ) );\r\n\t\t\t\t}\r\n\t\t\t} else {\t\t\t\t\t\t\t\t\t\t// angle == 180 deg.\r\n\t\t\t\t// console.log( \"from2to: 180 deg., from2other: \" + from2otherAngle  );\r\n\t\t\t\treturn\t( from2otherAngle > 0 );\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t\tfunction removeHoles( contour, holes ) {\r\n\r\n\t\t\tvar shape = contour.concat(); // work on this shape\r\n\t\t\tvar hole;\r\n\r\n\t\t\tfunction isCutLineInsideAngles( inShapeIdx, inHoleIdx ) {\r\n\t\t\t\t// Check if hole point lies within angle around shape point\r\n\t\t\t\tvar lastShapeIdx = shape.length - 1;\r\n\r\n\t\t\t\tvar prevShapeIdx = inShapeIdx - 1;\r\n\t\t\t\tif ( prevShapeIdx < 0 )\t\t\tprevShapeIdx = lastShapeIdx;\r\n\r\n\t\t\t\tvar nextShapeIdx = inShapeIdx + 1;\r\n\t\t\t\tif ( nextShapeIdx > lastShapeIdx )\tnextShapeIdx = 0;\r\n\r\n\t\t\t\tvar insideAngle = isPointInsideAngle( shape[inShapeIdx], shape[ prevShapeIdx ], shape[ nextShapeIdx ], hole[inHoleIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Shape): \" + inShapeIdx + \", Point: \" + hole[inHoleIdx].x + \"/\" + hole[inHoleIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// Check if shape point lies within angle around hole point\r\n\t\t\t\tvar lastHoleIdx = hole.length - 1;\r\n\r\n\t\t\t\tvar prevHoleIdx = inHoleIdx - 1;\r\n\t\t\t\tif ( prevHoleIdx < 0 )\t\t\tprevHoleIdx = lastHoleIdx;\r\n\r\n\t\t\t\tvar nextHoleIdx = inHoleIdx + 1;\r\n\t\t\t\tif ( nextHoleIdx > lastHoleIdx )\tnextHoleIdx = 0;\r\n\r\n\t\t\t\tinsideAngle = isPointInsideAngle( hole[inHoleIdx], hole[ prevHoleIdx ], hole[ nextHoleIdx ], shape[inShapeIdx] );\r\n\t\t\t\tif (! insideAngle ) {\r\n\t\t\t\t\t// console.log( \"Vertex (Hole): \" + inHoleIdx + \", Point: \" + shape[inShapeIdx].x + \"/\" + shape[inShapeIdx].y );\r\n\t\t\t\t\treturn\tfalse;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\ttrue;\r\n\t\t\t}\r\n\r\n\t\t\tfunction intersectsShapeEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with shape edges\r\n\t\t\t\tvar sIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( sIdx = 0; sIdx < shape.length; sIdx ++ ) {\r\n\t\t\t\t\tnextIdx = sIdx + 1; nextIdx %= shape.length;\r\n\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, shape[sIdx], shape[nextIdx], true );\r\n\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t}\r\n\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar indepHoles = [];\r\n\r\n\t\t\tfunction intersectsHoleEdge( inShapePt, inHolePt ) {\r\n\t\t\t\t// checks for intersections with hole edges\r\n\t\t\t\tvar ihIdx, chkHole,\r\n\t\t\t\t\thIdx, nextIdx, intersection;\r\n\t\t\t\tfor ( ihIdx = 0; ihIdx < indepHoles.length; ihIdx ++ ) {\r\n\t\t\t\t\tchkHole = holes[indepHoles[ihIdx]];\r\n\t\t\t\t\tfor ( hIdx = 0; hIdx < chkHole.length; hIdx ++ ) {\r\n\t\t\t\t\t\tnextIdx = hIdx + 1; nextIdx %= chkHole.length;\r\n\t\t\t\t\t\tintersection = intersect_segments_2D( inShapePt, inHolePt, chkHole[hIdx], chkHole[nextIdx], true );\r\n\t\t\t\t\t\tif ( intersection.length > 0 )\t\treturn\ttrue;\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t\treturn\tfalse;\r\n\t\t\t}\r\n\r\n\t\t\tvar holeIndex, shapeIndex,\r\n\t\t\t\tshapePt, holePt,\r\n\t\t\t\tholeIdx, cutKey, failedCuts = [],\r\n\t\t\t\ttmpShape1, tmpShape2,\r\n\t\t\t\ttmpHole1, tmpHole2;\r\n\r\n\t\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tindepHoles.push( h );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar minShapeIndex = 0;\r\n\t\t\tvar counter = indepHoles.length * 2;\r\n\t\t\twhile ( indepHoles.length > 0 ) {\r\n\t\t\t\tcounter --;\r\n\t\t\t\tif ( counter < 0 ) {\r\n\t\t\t\t\tconsole.log( \"Infinite Loop! Holes left:\" + indepHoles.length + \", Probably Hole outside Shape!\" );\r\n\t\t\t\t\tbreak;\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// search for shape-vertex and hole-vertex,\r\n\t\t\t\t// which can be connected without intersections\r\n\t\t\t\tfor ( shapeIndex = minShapeIndex; shapeIndex < shape.length; shapeIndex ++ ) {\r\n\r\n\t\t\t\t\tshapePt = shape[ shapeIndex ];\r\n\t\t\t\t\tholeIndex\t= - 1;\r\n\r\n\t\t\t\t\t// search for hole which can be reached without intersections\r\n\t\t\t\t\tfor ( var h = 0; h < indepHoles.length; h ++ ) {\r\n\t\t\t\t\t\tholeIdx = indepHoles[h];\r\n\r\n\t\t\t\t\t\t// prevent multiple checks\r\n\t\t\t\t\t\tcutKey = shapePt.x + \":\" + shapePt.y + \":\" + holeIdx;\r\n\t\t\t\t\t\tif ( failedCuts[cutKey] !== undefined )\t\t\tcontinue;\r\n\r\n\t\t\t\t\t\thole = holes[holeIdx];\r\n\t\t\t\t\t\tfor ( var h2 = 0; h2 < hole.length; h2 ++ ) {\r\n\t\t\t\t\t\t\tholePt = hole[ h2 ];\r\n\t\t\t\t\t\t\tif (! isCutLineInsideAngles( shapeIndex, h2 ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsShapeEdge( shapePt, holePt ) )\t\tcontinue;\r\n\t\t\t\t\t\t\tif ( intersectsHoleEdge( shapePt, holePt ) )\t\tcontinue;\r\n\r\n\t\t\t\t\t\t\tholeIndex = h2;\r\n\t\t\t\t\t\t\tindepHoles.splice(h, 1);\r\n\r\n\t\t\t\t\t\t\ttmpShape1 = shape.slice( 0, shapeIndex + 1 );\r\n\t\t\t\t\t\t\ttmpShape2 = shape.slice( shapeIndex );\r\n\t\t\t\t\t\t\ttmpHole1 = hole.slice( holeIndex );\r\n\t\t\t\t\t\t\ttmpHole2 = hole.slice( 0, holeIndex + 1 );\r\n\r\n\t\t\t\t\t\t\tshape = tmpShape1.concat( tmpHole1 ).concat( tmpHole2 ).concat( tmpShape2 );\r\n\r\n\t\t\t\t\t\t\tminShapeIndex = shapeIndex;\r\n\r\n\t\t\t\t\t\t\t// Debug only, to show the selected cuts\r\n\t\t\t\t\t\t\t// glob_CutLines.push( [ shapePt, holePt ] );\r\n\r\n\t\t\t\t\t\t\tbreak;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\r\n\t\t\t\t\t\tfailedCuts[cutKey] = true;\t\t\t// remember failure\r\n\t\t\t\t\t}\r\n\t\t\t\t\tif ( holeIndex >= 0 )\tbreak;\t\t// hole-vertex found\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\treturn shape; \t\t\t/* shape with no holes */\r\n\t\t}\r\n\r\n\r\n\t\tvar i, il, f, face,\r\n\t\t\tkey, index,\r\n\t\t\tallPointsMap = {};\r\n\r\n\t\t// To maintain reference to old shape, one must match coordinates, or offset the indices from original arrays. It's probably easier to do the first.\r\n\r\n\t\tvar allpoints = contour.concat();\r\n\r\n\t\tfor ( var h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tArray.prototype.push.apply( allpoints, holes[h] );\r\n\r\n\t\t}\r\n\r\n\t\t//console.log( \"allpoints\",allpoints, allpoints.length );\r\n\r\n\t\t// prepare all points map\r\n\r\n\t\tfor ( i = 0, il = allpoints.length; i < il; i ++ ) {\r\n\r\n\t\t\tkey = allpoints[ i ].x + \":\" + allpoints[ i ].y;\r\n\r\n\t\t\tif ( allPointsMap[ key ] !== undefined ) {\r\n\r\n\t\t\t\tTHREE.warn( \"THREE.Shape: Duplicate point\", key );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tallPointsMap[ key ] = i;\r\n\r\n\t\t}\r\n\r\n\t\t// remove holes by cutting paths to holes and adding them to the shape\r\n\t\tvar shapeWithoutHoles = removeHoles( contour, holes );\r\n\r\n\t\tvar triangles = THREE.FontUtils.Triangulate( shapeWithoutHoles, false ); // True returns indices for points of spooled shape\r\n\t\t//console.log( \"triangles\",triangles, triangles.length );\r\n\r\n\t\t// check all face vertices against all points map\r\n\r\n\t\tfor ( i = 0, il = triangles.length; i < il; i ++ ) {\r\n\r\n\t\t\tface = triangles[ i ];\r\n\r\n\t\t\tfor ( f = 0; f < 3; f ++ ) {\r\n\r\n\t\t\t\tkey = face[ f ].x + \":\" + face[ f ].y;\r\n\r\n\t\t\t\tindex = allPointsMap[ key ];\r\n\r\n\t\t\t\tif ( index !== undefined ) {\r\n\r\n\t\t\t\t\tface[ f ] = index;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn triangles.concat();\r\n\r\n\t},\r\n\r\n\tisClockWise: function ( pts ) {\r\n\r\n\t\treturn THREE.FontUtils.Triangulate.area( pts ) < 0;\r\n\r\n\t},\r\n\r\n\t// Bezier Curves formulas obtained from\r\n\t// http://en.wikipedia.org/wiki/B%C3%A9zier_curve\r\n\r\n\t// Quad Bezier Functions\r\n\r\n\tb2p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * p;\r\n\r\n\t},\r\n\r\n\tb2p1: function ( t, p ) {\r\n\r\n\t\treturn 2 * ( 1 - t ) * t * p;\r\n\r\n\t},\r\n\r\n\tb2p2: function ( t, p ) {\r\n\r\n\t\treturn t * t * p;\r\n\r\n\t},\r\n\r\n\tb2: function ( t, p0, p1, p2 ) {\r\n\r\n\t\treturn this.b2p0( t, p0 ) + this.b2p1( t, p1 ) + this.b2p2( t, p2 );\r\n\r\n\t},\r\n\r\n\t// Cubic Bezier Functions\r\n\r\n\tb3p0: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn k * k * k * p;\r\n\r\n\t},\r\n\r\n\tb3p1: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * k * t * p;\r\n\r\n\t},\r\n\r\n\tb3p2: function ( t, p ) {\r\n\r\n\t\tvar k = 1 - t;\r\n\t\treturn 3 * k * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3p3: function ( t, p ) {\r\n\r\n\t\treturn t * t * t * p;\r\n\r\n\t},\r\n\r\n\tb3: function ( t, p0, p1, p2, p3 ) {\r\n\r\n\t\treturn this.b3p0( t, p0 ) + this.b3p1( t, p1 ) + this.b3p2( t, p2 ) +  this.b3p3( t, p3 );\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// File:src/extras/curves/LineCurve.js\r\n\r\n/**************************************************************\r\n *\tLine\r\n **************************************************************/\r\n\r\nTHREE.LineCurve = function ( v1, v2 ) {\r\n\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.LineCurve.prototype.constructor = THREE.LineCurve;\r\n\r\nTHREE.LineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar point = this.v2.clone().sub(this.v1);\r\n\tpoint.multiplyScalar( t ).add( this.v1 );\r\n\r\n\treturn point;\r\n\r\n};\r\n\r\n// Line curve is linear, so we can overwrite default getPointAt\r\n\r\nTHREE.LineCurve.prototype.getPointAt = function ( u ) {\r\n\r\n\treturn this.getPoint( u );\r\n\r\n};\r\n\r\nTHREE.LineCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tangent = this.v2.clone().sub(this.v1);\r\n\r\n\treturn tangent.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.QuadraticBezierCurve = function ( v0, v1, v2 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\r\n};\r\n\r\nTHREE.QuadraticBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.QuadraticBezierCurve.prototype.constructor = THREE.QuadraticBezierCurve;\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n\r\nTHREE.QuadraticBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.x, this.v1.x, this.v2.x );\r\n\tvector.y = THREE.Curve.Utils.tangentQuadraticBezier( t, this.v0.y, this.v1.y, this.v2.y );\r\n\r\n\t// returns unit vector\r\n\r\n\treturn vector.normalize();\r\n\r\n};\r\n\r\n// File:src/extras/curves/CubicBezierCurve.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve = function ( v0, v1, v2, v3 ) {\r\n\r\n\tthis.v0 = v0;\r\n\tthis.v1 = v1;\r\n\tthis.v2 = v2;\r\n\tthis.v3 = v3;\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.CubicBezierCurve.prototype.constructor = THREE.CubicBezierCurve;\r\n\r\nTHREE.CubicBezierCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\treturn new THREE.Vector2( tx, ty );\r\n\r\n};\r\n\r\nTHREE.CubicBezierCurve.prototype.getTangent = function( t ) {\r\n\r\n\tvar tx, ty;\r\n\r\n\ttx = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\tty = THREE.Curve.Utils.tangentCubicBezier( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\r\n\tvar tangent = new THREE.Vector2( tx, ty );\r\n\ttangent.normalize();\r\n\r\n\treturn tangent;\r\n\r\n};\r\n\r\n// File:src/extras/curves/SplineCurve.js\r\n\r\n/**************************************************************\r\n *\tSpline curve\r\n **************************************************************/\r\n\r\nTHREE.SplineCurve = function ( points /* array of Vector2 */ ) {\r\n\r\n\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n};\r\n\r\nTHREE.SplineCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.SplineCurve.prototype.constructor = THREE.SplineCurve;\r\n\r\nTHREE.SplineCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar points = this.points;\r\n\tvar point = ( points.length - 1 ) * t;\r\n\r\n\tvar intPoint = Math.floor( point );\r\n\tvar weight = point - intPoint;\r\n\r\n\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ]\r\n\tvar point1 = points[ intPoint ]\r\n\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ]\r\n\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ]\r\n\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/EllipseCurve.js\r\n\r\n/**************************************************************\r\n *\tEllipse curve\r\n **************************************************************/\r\n\r\nTHREE.EllipseCurve = function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tthis.aX = aX;\r\n\tthis.aY = aY;\r\n\r\n\tthis.xRadius = xRadius;\r\n\tthis.yRadius = yRadius;\r\n\r\n\tthis.aStartAngle = aStartAngle;\r\n\tthis.aEndAngle = aEndAngle;\r\n\r\n\tthis.aClockwise = aClockwise;\r\n\r\n};\r\n\r\nTHREE.EllipseCurve.prototype = Object.create( THREE.Curve.prototype );\r\nTHREE.EllipseCurve.prototype.constructor = THREE.EllipseCurve;\r\n\r\nTHREE.EllipseCurve.prototype.getPoint = function ( t ) {\r\n\r\n\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\r\n\r\n\tif ( deltaAngle < 0 ) deltaAngle += Math.PI * 2;\r\n\tif ( deltaAngle > Math.PI * 2 ) deltaAngle -= Math.PI * 2;\r\n\r\n\tvar angle;\r\n\r\n\tif ( this.aClockwise === true ) {\r\n\r\n\t\tangle = this.aEndAngle + ( 1 - t ) * ( Math.PI * 2 - deltaAngle );\r\n\r\n\t} else {\r\n\r\n\t\tangle = this.aStartAngle + t * deltaAngle;\r\n\r\n\t}\r\n\t\r\n\tvar vector = new THREE.Vector2();\r\n\r\n\tvector.x = this.aX + this.xRadius * Math.cos( angle );\r\n\tvector.y = this.aY + this.yRadius * Math.sin( angle );\r\n\r\n\treturn vector;\r\n\r\n};\r\n\r\n// File:src/extras/curves/ArcCurve.js\r\n\r\n/**************************************************************\r\n *\tArc curve\r\n **************************************************************/\r\n\r\nTHREE.ArcCurve = function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\r\n\r\n\tTHREE.EllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\r\n};\r\n\r\nTHREE.ArcCurve.prototype = Object.create( THREE.EllipseCurve.prototype );\r\nTHREE.ArcCurve.prototype.constructor = THREE.ArcCurve;\r\n\r\n// File:src/extras/curves/LineCurve3.js\r\n\r\n/**************************************************************\r\n *\tLine3D\r\n **************************************************************/\r\n\r\nTHREE.LineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v1, v2 ) {\r\n\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.subVectors( this.v2, this.v1 ); // diff\r\n\t\tvector.multiplyScalar( t );\r\n\t\tvector.add( this.v1 );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/QuadraticBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tQuadratic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.QuadraticBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b2( t, this.v0.x, this.v1.x, this.v2.x );\r\n\t\tvector.y = THREE.Shape.Utils.b2( t, this.v0.y, this.v1.y, this.v2.y );\r\n\t\tvector.z = THREE.Shape.Utils.b2( t, this.v0.z, this.v1.z, this.v2.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/CubicBezierCurve3.js\r\n\r\n/**************************************************************\r\n *\tCubic Bezier 3D curve\r\n **************************************************************/\r\n\r\nTHREE.CubicBezierCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( v0, v1, v2, v3 ) {\r\n\r\n\t\tthis.v0 = v0;\r\n\t\tthis.v1 = v1;\r\n\t\tthis.v2 = v2;\r\n\t\tthis.v3 = v3;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Shape.Utils.b3( t, this.v0.x, this.v1.x, this.v2.x, this.v3.x );\r\n\t\tvector.y = THREE.Shape.Utils.b3( t, this.v0.y, this.v1.y, this.v2.y, this.v3.y );\r\n\t\tvector.z = THREE.Shape.Utils.b3( t, this.v0.z, this.v1.z, this.v2.z, this.v3.z );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/SplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tSpline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.SplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 1 ) * t;\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tvar point0 = points[ intPoint == 0 ? intPoint : intPoint - 1 ];\r\n\t\tvar point1 = points[ intPoint ];\r\n\t\tvar point2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\r\n\t\tvar point3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/curves/ClosedSplineCurve3.js\r\n\r\n/**************************************************************\r\n *\tClosed Spline 3D curve\r\n **************************************************************/\r\n\r\n\r\nTHREE.ClosedSplineCurve3 = THREE.Curve.create(\r\n\r\n\tfunction ( points /* array of Vector3 */) {\r\n\r\n\t\tthis.points = ( points == undefined ) ? [] : points;\r\n\r\n\t},\r\n\r\n\tfunction ( t ) {\r\n\r\n\t\tvar points = this.points;\r\n\t\tvar point = ( points.length - 0 ) * t; // This needs to be from 0-length +1\r\n\r\n\t\tvar intPoint = Math.floor( point );\r\n\t\tvar weight = point - intPoint;\r\n\r\n\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / points.length ) + 1 ) * points.length;\r\n\r\n\t\tvar point0 = points[ ( intPoint - 1 ) % points.length ];\r\n\t\tvar point1 = points[ ( intPoint     ) % points.length ];\r\n\t\tvar point2 = points[ ( intPoint + 1 ) % points.length ];\r\n\t\tvar point3 = points[ ( intPoint + 2 ) % points.length ];\r\n\r\n\t\tvar vector = new THREE.Vector3();\r\n\r\n\t\tvector.x = THREE.Curve.Utils.interpolate( point0.x, point1.x, point2.x, point3.x, weight );\r\n\t\tvector.y = THREE.Curve.Utils.interpolate( point0.y, point1.y, point2.y, point3.y, weight );\r\n\t\tvector.z = THREE.Curve.Utils.interpolate( point0.z, point1.z, point2.z, point3.z, weight );\r\n\r\n\t\treturn vector;\r\n\r\n\t}\r\n\r\n);\r\n\r\n// File:src/extras/animation/AnimationHandler.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n */\r\n\r\nTHREE.AnimationHandler = {\r\n\r\n\tLINEAR: 0,\r\n\tCATMULLROM: 1,\r\n\tCATMULLROM_FORWARD: 2,\r\n\r\n\t//\r\n\r\n\tadd: function () { THREE.warn( 'THREE.AnimationHandler.add() has been deprecated.' ); },\r\n\tget: function () { THREE.warn( 'THREE.AnimationHandler.get() has been deprecated.' ); },\r\n\tremove: function () { THREE.warn( 'THREE.AnimationHandler.remove() has been deprecated.' ); },\r\n\r\n\t//\r\n\r\n\tanimations: [],\r\n\r\n\tinit: function ( data ) {\r\n\r\n\t\tif ( data.initialized === true ) return data;\r\n\r\n\t\t// loop through all keys\r\n\r\n\t\tfor ( var h = 0; h < data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t// remove minus times\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time < 0 ) {\r\n\r\n\t\t\t\t\t data.hierarchy[ h ].keys[ k ].time = 0;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\t// create quaternions\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].rot !== undefined &&\r\n\t\t\t\t  ! ( data.hierarchy[ h ].keys[ k ].rot instanceof THREE.Quaternion ) ) {\r\n\r\n\t\t\t\t\tvar quat = data.hierarchy[ h ].keys[ k ].rot;\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].rot = new THREE.Quaternion().fromArray( quat );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// prepare morph target keys\r\n\r\n\t\t\tif ( data.hierarchy[ h ].keys.length && data.hierarchy[ h ].keys[ 0 ].morphTargets !== undefined ) {\r\n\r\n\t\t\t\t// get all used\r\n\r\n\t\t\t\tvar usedMorphTargets = {};\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\tvar morphTargetName = data.hierarchy[ h ].keys[ k ].morphTargets[ m ];\r\n\t\t\t\t\t\tusedMorphTargets[ morphTargetName ] = - 1;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tdata.hierarchy[ h ].usedMorphTargets = usedMorphTargets;\r\n\r\n\r\n\t\t\t\t// set all used on all frames\r\n\r\n\t\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\t\tvar influences = {};\r\n\r\n\t\t\t\t\tfor ( var morphTargetName in usedMorphTargets ) {\r\n\r\n\t\t\t\t\t\tfor ( var m = 0; m < data.hierarchy[ h ].keys[ k ].morphTargets.length; m ++ ) {\r\n\r\n\t\t\t\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].morphTargets[ m ] === morphTargetName ) {\r\n\r\n\t\t\t\t\t\t\t\tinfluences[ morphTargetName ] = data.hierarchy[ h ].keys[ k ].morphTargetsInfluences[ m ];\r\n\t\t\t\t\t\t\t\tbreak;\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tif ( m === data.hierarchy[ h ].keys[ k ].morphTargets.length ) {\r\n\r\n\t\t\t\t\t\t\tinfluences[ morphTargetName ] = 0;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys[ k ].morphTargetsInfluences = influences;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// remove all keys that are on the same time\r\n\r\n\t\t\tfor ( var k = 1; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tif ( data.hierarchy[ h ].keys[ k ].time === data.hierarchy[ h ].keys[ k - 1 ].time ) {\r\n\r\n\t\t\t\t\tdata.hierarchy[ h ].keys.splice( k, 1 );\r\n\t\t\t\t\tk --;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\r\n\t\t\t// set index\r\n\r\n\t\t\tfor ( var k = 0; k < data.hierarchy[ h ].keys.length; k ++ ) {\r\n\r\n\t\t\t\tdata.hierarchy[ h ].keys[ k ].index = k;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tdata.initialized = true;\r\n\r\n\t\treturn data;\r\n\r\n\t},\r\n\r\n\tparse: function ( root ) {\r\n\r\n\t\tvar parseRecurseHierarchy = function ( root, hierarchy ) {\r\n\r\n\t\t\thierarchy.push( root );\r\n\r\n\t\t\tfor ( var c = 0; c < root.children.length; c ++ )\r\n\t\t\t\tparseRecurseHierarchy( root.children[ c ], hierarchy );\r\n\r\n\t\t};\r\n\r\n\t\t// setup hierarchy\r\n\r\n\t\tvar hierarchy = [];\r\n\r\n\t\tif ( root instanceof THREE.SkinnedMesh ) {\r\n\r\n\t\t\tfor ( var b = 0; b < root.skeleton.bones.length; b ++ ) {\r\n\r\n\t\t\t\thierarchy.push( root.skeleton.bones[ b ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tparseRecurseHierarchy( root, hierarchy );\r\n\r\n\t\t}\r\n\r\n\t\treturn hierarchy;\r\n\r\n\t},\r\n\r\n\tplay: function ( animation ) {\r\n\r\n\t\tif ( this.animations.indexOf( animation ) === - 1 ) {\r\n\r\n\t\t\tthis.animations.push( animation );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tstop: function ( animation ) {\r\n\r\n\t\tvar index = this.animations.indexOf( animation );\r\n\r\n\t\tif ( index !== - 1 ) {\r\n\r\n\t\t\tthis.animations.splice( index, 1 );\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( deltaTimeMS ) {\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].resetBlendWeights( );\r\n\r\n\t\t}\r\n\r\n\t\tfor ( var i = 0; i < this.animations.length; i ++ ) {\r\n\r\n\t\t\tthis.animations[ i ].update( deltaTimeMS );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/Animation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.Animation = function ( root, data ) {\r\n\r\n\tthis.root = root;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( root );\r\n\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 1;\r\n\r\n\tthis.isPlaying = false;\r\n\tthis.loop = true;\r\n\tthis.weight = 0;\r\n\r\n\tthis.interpolationType = THREE.AnimationHandler.LINEAR;\r\n\r\n};\r\n\r\nTHREE.Animation.prototype = {\r\n\r\n\tconstructor: THREE.Animation,\r\n\r\n\tkeyTypes:  [ \"pos\", \"rot\", \"scl\" ],\r\n\r\n\tplay: function ( startTime, weight ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\t\tthis.weight = weight !== undefined ? weight : 1;\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t\tthis.reset();\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function() {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t},\r\n\r\n\treset: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\r\n\t\t\tif ( object.animationCache === undefined ) {\r\n\r\n\t\t\t\tobject.animationCache = {\r\n\t\t\t\t\tanimations: {},\r\n\t\t\t\t\tblending: {\r\n\t\t\t\t\t\tpositionWeight: 0.0,\r\n\t\t\t\t\t\tquaternionWeight: 0.0,\r\n\t\t\t\t\t\tscaleWeight: 0.0\r\n\t\t\t\t\t}\r\n\t\t\t\t};\r\n\t\t\t}\r\n\r\n\t\t\tvar name = this.data.name;\r\n\t\t\tvar animations = object.animationCache.animations;\r\n\t\t\tvar animationCache = animations[ name ];\r\n\r\n\t\t\tif ( animationCache === undefined ) {\r\n\r\n\t\t\t\tanimationCache = {\r\n\t\t\t\t\tprevKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\tnextKey: { pos: 0, rot: 0, scl: 0 },\r\n\t\t\t\t\toriginalMatrix: object.matrix\r\n\t\t\t\t};\r\n\r\n\t\t\t\tanimations[ name ] = animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Get keys to match our current time\r\n\r\n\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\tvar type = this.keyTypes[ t ];\r\n\r\n\t\t\t\tvar prevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\tvar nextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tresetBlendWeights: function () {\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar animationCache = object.animationCache;\r\n\r\n\t\t\tif ( animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar blending = animationCache.blending;\r\n\r\n\t\t\t\tblending.positionWeight = 0.0;\r\n\t\t\t\tblending.quaternionWeight = 0.0;\r\n\t\t\t\tblending.scaleWeight = 0.0;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: ( function() {\r\n\r\n\t\tvar points = [];\r\n\t\tvar target = new THREE.Vector3();\r\n\t\tvar newVector = new THREE.Vector3();\r\n\t\tvar newQuat = new THREE.Quaternion();\r\n\r\n\t\t// Catmull-Rom spline\r\n\r\n\t\tvar interpolateCatmullRom = function ( points, scale ) {\r\n\r\n\t\t\tvar c = [], v3 = [],\r\n\t\t\tpoint, intPoint, weight, w2, w3,\r\n\t\t\tpa, pb, pc, pd;\r\n\r\n\t\t\tpoint = ( points.length - 1 ) * scale;\r\n\t\t\tintPoint = Math.floor( point );\r\n\t\t\tweight = point - intPoint;\r\n\r\n\t\t\tc[ 0 ] = intPoint === 0 ? intPoint : intPoint - 1;\r\n\t\t\tc[ 1 ] = intPoint;\r\n\t\t\tc[ 2 ] = intPoint > points.length - 2 ? intPoint : intPoint + 1;\r\n\t\t\tc[ 3 ] = intPoint > points.length - 3 ? intPoint : intPoint + 2;\r\n\r\n\t\t\tpa = points[ c[ 0 ] ];\r\n\t\t\tpb = points[ c[ 1 ] ];\r\n\t\t\tpc = points[ c[ 2 ] ];\r\n\t\t\tpd = points[ c[ 3 ] ];\r\n\r\n\t\t\tw2 = weight * weight;\r\n\t\t\tw3 = weight * w2;\r\n\r\n\t\t\tv3[ 0 ] = interpolate( pa[ 0 ], pb[ 0 ], pc[ 0 ], pd[ 0 ], weight, w2, w3 );\r\n\t\t\tv3[ 1 ] = interpolate( pa[ 1 ], pb[ 1 ], pc[ 1 ], pd[ 1 ], weight, w2, w3 );\r\n\t\t\tv3[ 2 ] = interpolate( pa[ 2 ], pb[ 2 ], pc[ 2 ], pd[ 2 ], weight, w2, w3 );\r\n\r\n\t\t\treturn v3;\r\n\r\n\t\t};\r\n\r\n\t\tvar interpolate = function ( p0, p1, p2, p3, t, t2, t3 ) {\r\n\r\n\t\t\tvar v0 = ( p2 - p0 ) * 0.5,\r\n\t\t\t\tv1 = ( p3 - p1 ) * 0.5;\r\n\r\n\t\t\treturn ( 2 * ( p1 - p2 ) + v0 + v1 ) * t3 + ( - 3 * ( p1 - p2 ) - 2 * v0 - v1 ) * t2 + v0 * t + p1;\r\n\r\n\t\t};\r\n\r\n\t\treturn function ( delta ) {\r\n\r\n\t\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t\tif ( this.weight === 0 )\r\n\t\t\t\treturn;\r\n\r\n\t\t\t//\r\n\r\n\t\t\tvar duration = this.data.length;\r\n\r\n\t\t\tif ( this.currentTime > duration || this.currentTime < 0 ) {\r\n\r\n\t\t\t\tif ( this.loop ) {\r\n\r\n\t\t\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t\t\t\tif ( this.currentTime < 0 )\r\n\t\t\t\t\t\tthis.currentTime += duration;\r\n\r\n\t\t\t\t\tthis.reset();\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tthis.stop();\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\t\tvar animationCache = object.animationCache.animations[this.data.name];\r\n\t\t\t\tvar blending = object.animationCache.blending;\r\n\r\n\t\t\t\t// loop through pos/rot/scl\r\n\r\n\t\t\t\tfor ( var t = 0; t < 3; t ++ ) {\r\n\r\n\t\t\t\t\t// get keys\r\n\r\n\t\t\t\t\tvar type    = this.keyTypes[ t ];\r\n\t\t\t\t\tvar prevKey = animationCache.prevKey[ type ];\r\n\t\t\t\t\tvar nextKey = animationCache.nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( ( this.timeScale > 0 && nextKey.time <= this.currentTime ) ||\r\n\t\t\t\t\t\t( this.timeScale < 0 && prevKey.time >= this.currentTime ) ) {\r\n\r\n\t\t\t\t\t\tprevKey = this.data.hierarchy[ h ].keys[ 0 ];\r\n\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, 1 );\r\n\r\n\t\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\t\tnextKey = this.getNextKeyWith( type, h, nextKey.index + 1 );\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tanimationCache.prevKey[ type ] = prevKey;\r\n\t\t\t\t\t\tanimationCache.nextKey[ type ] = nextKey;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tvar scale = ( this.currentTime - prevKey.time ) / ( nextKey.time - prevKey.time );\r\n\r\n\t\t\t\t\tvar prevXYZ = prevKey[ type ];\r\n\t\t\t\t\tvar nextXYZ = nextKey[ type ];\r\n\r\n\t\t\t\t\tif ( scale < 0 ) scale = 0;\r\n\t\t\t\t\tif ( scale > 1 ) scale = 1;\r\n\r\n\t\t\t\t\t// interpolate\r\n\r\n\t\t\t\t\tif ( type === \"pos\" ) {\r\n\r\n\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.LINEAR ) {\r\n\r\n\t\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tobject.position.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t} else if ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t\t\t\t\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\tpoints[ 0 ] = this.getPrevKeyWith( \"pos\", h, prevKey.index - 1 )[ \"pos\" ];\r\n\t\t\t\t\t\t\tpoints[ 1 ] = prevXYZ;\r\n\t\t\t\t\t\t\tpoints[ 2 ] = nextXYZ;\r\n\t\t\t\t\t\t\tpoints[ 3 ] = this.getNextKeyWith( \"pos\", h, nextKey.index + 1 )[ \"pos\" ];\r\n\r\n\t\t\t\t\t\t\tscale = scale * 0.33 + 0.33;\r\n\r\n\t\t\t\t\t\t\tvar currentPoint = interpolateCatmullRom( points, scale );\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.positionWeight );\r\n\t\t\t\t\t\t\tblending.positionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t\t// blend\r\n\r\n\t\t\t\t\t\t\tvar vector = object.position;\r\n\r\n\t\t\t\t\t\t\tvector.x = vector.x + ( currentPoint[ 0 ] - vector.x ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.y = vector.y + ( currentPoint[ 1 ] - vector.y ) * proportionalWeight;\r\n\t\t\t\t\t\t\tvector.z = vector.z + ( currentPoint[ 2 ] - vector.z ) * proportionalWeight;\r\n\r\n\t\t\t\t\t\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\t\t\t\t\t\tvar forwardPoint = interpolateCatmullRom( points, scale * 1.01 );\r\n\r\n\t\t\t\t\t\t\t\ttarget.set( forwardPoint[ 0 ], forwardPoint[ 1 ], forwardPoint[ 2 ] );\r\n\t\t\t\t\t\t\t\ttarget.sub( vector );\r\n\t\t\t\t\t\t\t\ttarget.y = 0;\r\n\t\t\t\t\t\t\t\ttarget.normalize();\r\n\r\n\t\t\t\t\t\t\t\tvar angle = Math.atan2( target.x, target.z );\r\n\t\t\t\t\t\t\t\tobject.rotation.set( 0, angle, 0 );\r\n\r\n\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"rot\" ) {\r\n\r\n\t\t\t\t\t\tTHREE.Quaternion.slerp( prevXYZ, nextXYZ, newQuat, scale );\r\n\r\n\t\t\t\t\t\t// Avoid paying the cost of an additional slerp if we don't have to\r\n\t\t\t\t\t\tif ( blending.quaternionWeight === 0 ) {\r\n\r\n\t\t\t\t\t\t\tobject.quaternion.copy(newQuat);\r\n\t\t\t\t\t\t\tblending.quaternionWeight = this.weight;\r\n\r\n\t\t\t\t\t\t} else {\r\n\r\n\t\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.quaternionWeight );\r\n\t\t\t\t\t\t\tTHREE.Quaternion.slerp( object.quaternion, newQuat, object.quaternion, proportionalWeight );\r\n\t\t\t\t\t\t\tblending.quaternionWeight += this.weight;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t} else if ( type === \"scl\" ) {\r\n\r\n\t\t\t\t\t\tnewVector.x = prevXYZ[ 0 ] + ( nextXYZ[ 0 ] - prevXYZ[ 0 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.y = prevXYZ[ 1 ] + ( nextXYZ[ 1 ] - prevXYZ[ 1 ] ) * scale;\r\n\t\t\t\t\t\tnewVector.z = prevXYZ[ 2 ] + ( nextXYZ[ 2 ] - prevXYZ[ 2 ] ) * scale;\r\n\r\n\t\t\t\t\t\tvar proportionalWeight = this.weight / ( this.weight + blending.scaleWeight );\r\n\t\t\t\t\t\tobject.scale.lerp( newVector, proportionalWeight );\r\n\t\t\t\t\t\tblending.scaleWeight += this.weight;\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\treturn true;\r\n\r\n\t\t};\r\n\r\n\t} )(),\r\n\r\n\tgetNextKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\t this.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key < keys.length - 1 ? key : keys.length - 1;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key % keys.length;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( type, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\r\n\t\tif ( this.interpolationType === THREE.AnimationHandler.CATMULLROM ||\r\n\t\t\tthis.interpolationType === THREE.AnimationHandler.CATMULLROM_FORWARD ) {\r\n\r\n\t\t\tkey = key > 0 ? key : 0;\r\n\r\n\t\t} else {\r\n\r\n\t\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\t}\r\n\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ][ type ] !== undefined ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn this.data.hierarchy[ h ].keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/KeyFrameAnimation.js\r\n\r\n/**\r\n * @author mikael emtinger / http://gomo.se/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author khang duong\r\n * @author erik kitson\r\n */\r\n\r\nTHREE.KeyFrameAnimation = function ( data ) {\r\n\r\n\tthis.root = data.node;\r\n\tthis.data = THREE.AnimationHandler.init( data );\r\n\tthis.hierarchy = THREE.AnimationHandler.parse( this.root );\r\n\tthis.currentTime = 0;\r\n\tthis.timeScale = 0.001;\r\n\tthis.isPlaying = false;\r\n\tthis.isPaused = true;\r\n\tthis.loop = true;\r\n\r\n\t// initialize to first keyframes\r\n\r\n\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[h].keys,\r\n\t\t\tsids = this.data.hierarchy[h].sids,\r\n\t\t\tobj = this.hierarchy[h];\r\n\r\n\t\tif ( keys.length && sids ) {\r\n\r\n\t\t\tfor ( var s = 0; s < sids.length; s ++ ) {\r\n\r\n\t\t\t\tvar sid = sids[ s ],\r\n\t\t\t\t\tnext = this.getNextKeyWith( sid, h, 0 );\r\n\r\n\t\t\t\tif ( next ) {\r\n\r\n\t\t\t\t\tnext.apply( sid );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tobj.matrixAutoUpdate = false;\r\n\t\t\tthis.data.hierarchy[h].node.updateMatrix();\r\n\t\t\tobj.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.KeyFrameAnimation.prototype = {\r\n\r\n\tconstructor: THREE.KeyFrameAnimation,\r\n\r\n\tplay: function ( startTime ) {\r\n\r\n\t\tthis.currentTime = startTime !== undefined ? startTime : 0;\r\n\r\n\t\tif ( this.isPlaying === false ) {\r\n\r\n\t\t\tthis.isPlaying = true;\r\n\r\n\t\t\t// reset key cache\r\n\r\n\t\t\tvar h, hl = this.hierarchy.length,\r\n\t\t\t\tobject,\r\n\t\t\t\tnode;\r\n\r\n\t\t\tfor ( h = 0; h < hl; h ++ ) {\r\n\r\n\t\t\t\tobject = this.hierarchy[ h ];\r\n\t\t\t\tnode = this.data.hierarchy[ h ];\r\n\r\n\t\t\t\tif ( node.animationCache === undefined ) {\r\n\r\n\t\t\t\t\tnode.animationCache = {};\r\n\t\t\t\t\tnode.animationCache.prevKey = null;\r\n\t\t\t\t\tnode.animationCache.nextKey = null;\r\n\t\t\t\t\tnode.animationCache.originalMatrix = object.matrix;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tvar keys = this.data.hierarchy[h].keys;\r\n\r\n\t\t\t\tif (keys.length) {\r\n\r\n\t\t\t\t\tnode.animationCache.prevKey = keys[ 0 ];\r\n\t\t\t\t\tnode.animationCache.nextKey = keys[ 1 ];\r\n\r\n\t\t\t\t\tthis.startTime = Math.min( keys[0].time, this.startTime );\r\n\t\t\t\t\tthis.endTime = Math.max( keys[keys.length - 1].time, this.endTime );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tthis.update( 0 );\r\n\r\n\t\t}\r\n\r\n\t\tthis.isPaused = false;\r\n\r\n\t\tTHREE.AnimationHandler.play( this );\r\n\r\n\t},\r\n\r\n\tstop: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\t\tthis.isPaused  = false;\r\n\r\n\t\tTHREE.AnimationHandler.stop( this );\r\n\r\n\t\t// reset JIT matrix and remove cache\r\n\r\n\t\tfor ( var h = 0; h < this.data.hierarchy.length; h ++ ) {\r\n\r\n\t\t\tvar obj = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tif ( node.animationCache !== undefined ) {\r\n\r\n\t\t\t\tvar original = node.animationCache.originalMatrix;\r\n\r\n\t\t\t\toriginal.copy( obj.matrix );\r\n\t\t\t\tobj.matrix = original;\r\n\r\n\t\t\t\tdelete node.animationCache;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta * this.timeScale;\r\n\r\n\t\t//\r\n\r\n\t\tvar duration = this.data.length;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > duration ) {\r\n\r\n\t\t\tthis.currentTime %= duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, duration );\r\n\r\n\t\tfor ( var h = 0, hl = this.hierarchy.length; h < hl; h ++ ) {\r\n\r\n\t\t\tvar object = this.hierarchy[ h ];\r\n\t\t\tvar node = this.data.hierarchy[ h ];\r\n\r\n\t\t\tvar keys = node.keys,\r\n\t\t\t\tanimationCache = node.animationCache;\r\n\r\n\r\n\t\t\tif ( keys.length ) {\r\n\r\n\t\t\t\tvar prevKey = animationCache.prevKey;\r\n\t\t\t\tvar nextKey = animationCache.nextKey;\r\n\r\n\t\t\t\tif ( nextKey.time <= this.currentTime ) {\r\n\r\n\t\t\t\t\twhile ( nextKey.time < this.currentTime && nextKey.index > prevKey.index ) {\r\n\r\n\t\t\t\t\t\tprevKey = nextKey;\r\n\t\t\t\t\t\tnextKey = keys[ prevKey.index + 1 ];\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\tanimationCache.prevKey = prevKey;\r\n\t\t\t\t\tanimationCache.nextKey = nextKey;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( nextKey.time >= this.currentTime ) {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, this.currentTime );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tprevKey.interpolate( nextKey, nextKey.time );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tthis.data.hierarchy[ h ].node.updateMatrix();\r\n\t\t\t\tobject.matrixWorldNeedsUpdate = true;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t},\r\n\r\n\tgetNextKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key % keys.length;\r\n\r\n\t\tfor ( ; key < keys.length; key ++ ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ 0 ];\r\n\r\n\t},\r\n\r\n\tgetPrevKeyWith: function ( sid, h, key ) {\r\n\r\n\t\tvar keys = this.data.hierarchy[ h ].keys;\r\n\t\tkey = key >= 0 ? key : key + keys.length;\r\n\r\n\t\tfor ( ; key >= 0; key -- ) {\r\n\r\n\t\t\tif ( keys[ key ].hasTarget( sid ) ) {\r\n\r\n\t\t\t\treturn keys[ key ];\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn keys[ keys.length - 1 ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/animation/MorphAnimation.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com\r\n * @author willy-vvu / http://willy-vvu.github.io\r\n */\r\n\r\nTHREE.MorphAnimation = function ( mesh ) {\r\n\r\n\tthis.mesh = mesh;\r\n\tthis.frames = mesh.morphTargetInfluences.length;\r\n\tthis.currentTime = 0;\r\n\tthis.duration = 1000;\r\n\tthis.loop = true;\r\n\tthis.lastFrame = 0;\r\n\tthis.currentFrame = 0;\r\n\r\n\tthis.isPlaying = false;\r\n\r\n};\r\n\r\nTHREE.MorphAnimation.prototype = {\r\n\r\n\tconstructor: THREE.MorphAnimation,\r\n\r\n\tplay: function () {\r\n\r\n\t\tthis.isPlaying = true;\r\n\r\n\t},\r\n\r\n\tpause: function () {\r\n\r\n\t\tthis.isPlaying = false;\r\n\r\n\t},\r\n\r\n\tupdate: function ( delta ) {\r\n\r\n\t\tif ( this.isPlaying === false ) return;\r\n\r\n\t\tthis.currentTime += delta;\r\n\r\n\t\tif ( this.loop === true && this.currentTime > this.duration ) {\r\n\r\n\t\t\tthis.currentTime %= this.duration;\r\n\r\n\t\t}\r\n\r\n\t\tthis.currentTime = Math.min( this.currentTime, this.duration );\r\n\r\n\t\tvar interpolation = this.duration / this.frames;\r\n\t\tvar frame = Math.floor( this.currentTime / interpolation );\r\n\r\n\t\tvar influences = this.mesh.morphTargetInfluences;\r\n\r\n\t\tif ( frame != this.currentFrame ) {\r\n\r\n\t\t\tinfluences[ this.lastFrame ] = 0;\r\n\t\t\tinfluences[ this.currentFrame ] = 1;\r\n\t\t\tinfluences[ frame ] = 0;\r\n\r\n\t\t\tthis.lastFrame = this.currentFrame;\r\n\t\t\tthis.currentFrame = frame;\r\n\r\n\t\t}\r\n\r\n\t\tinfluences[ frame ] = ( this.currentTime % interpolation ) / interpolation;\r\n\t\tinfluences[ this.lastFrame ] = 1 - influences[ frame ];\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/BoxGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Cube.as\r\n */\r\n\r\nTHREE.BoxGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'BoxGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\tdepth: depth,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tdepthSegments: depthSegments\r\n\t};\r\n\r\n\tthis.widthSegments = widthSegments || 1;\r\n\tthis.heightSegments = heightSegments || 1;\r\n\tthis.depthSegments = depthSegments || 1;\r\n\r\n\tvar scope = this;\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\tvar depth_half = depth / 2;\r\n\r\n\tbuildPlane( 'z', 'y', - 1, - 1, depth, height, width_half, 0 ); // px\r\n\tbuildPlane( 'z', 'y',   1, - 1, depth, height, - width_half, 1 ); // nx\r\n\tbuildPlane( 'x', 'z',   1,   1, width, depth, height_half, 2 ); // py\r\n\tbuildPlane( 'x', 'z',   1, - 1, width, depth, - height_half, 3 ); // ny\r\n\tbuildPlane( 'x', 'y',   1, - 1, width, height, depth_half, 4 ); // pz\r\n\tbuildPlane( 'x', 'y', - 1, - 1, width, height, - depth_half, 5 ); // nz\r\n\r\n\tfunction buildPlane( u, v, udir, vdir, width, height, depth, materialIndex ) {\r\n\r\n\t\tvar w, ix, iy,\r\n\t\tgridX = scope.widthSegments,\r\n\t\tgridY = scope.heightSegments,\r\n\t\twidth_half = width / 2,\r\n\t\theight_half = height / 2,\r\n\t\toffset = scope.vertices.length;\r\n\r\n\t\tif ( ( u === 'x' && v === 'y' ) || ( u === 'y' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'z';\r\n\r\n\t\t} else if ( ( u === 'x' && v === 'z' ) || ( u === 'z' && v === 'x' ) ) {\r\n\r\n\t\t\tw = 'y';\r\n\t\t\tgridY = scope.depthSegments;\r\n\r\n\t\t} else if ( ( u === 'z' && v === 'y' ) || ( u === 'y' && v === 'z' ) ) {\r\n\r\n\t\t\tw = 'x';\r\n\t\t\tgridX = scope.depthSegments;\r\n\r\n\t\t}\r\n\r\n\t\tvar gridX1 = gridX + 1,\r\n\t\tgridY1 = gridY + 1,\r\n\t\tsegment_width = width / gridX,\r\n\t\tsegment_height = height / gridY,\r\n\t\tnormal = new THREE.Vector3();\r\n\r\n\t\tnormal[ w ] = depth > 0 ? 1 : - 1;\r\n\r\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\t\tvar vector = new THREE.Vector3();\r\n\t\t\t\tvector[ u ] = ( ix * segment_width - width_half ) * udir;\r\n\t\t\t\tvector[ v ] = ( iy * segment_height - height_half ) * vdir;\r\n\t\t\t\tvector[ w ] = depth;\r\n\r\n\t\t\t\tscope.vertices.push( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\t\tvar uva = new THREE.Vector2( ix / gridX, 1 - iy / gridY );\r\n\t\t\t\tvar uvb = new THREE.Vector2( ix / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvc = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - ( iy + 1 ) / gridY );\r\n\t\t\t\tvar uvd = new THREE.Vector2( ( ix + 1 ) / gridX, 1 - iy / gridY );\r\n\r\n\t\t\t\tvar face = new THREE.Face3( a + offset, b + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\t\tface = new THREE.Face3( b + offset, c + offset, d + offset );\r\n\t\t\t\tface.normal.copy( normal );\r\n\t\t\t\tface.vertexNormals.push( normal.clone(), normal.clone(), normal.clone() );\r\n\t\t\t\tface.materialIndex = materialIndex;\r\n\r\n\t\t\t\tscope.faces.push( face );\r\n\t\t\t\tscope.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\r\n};\r\n\r\nTHREE.BoxGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.BoxGeometry.prototype.constructor = THREE.BoxGeometry;\r\n\r\n// File:src/extras/geometries/CircleGeometry.js\r\n\r\n/**\r\n * @author hughes\r\n */\r\n\r\nTHREE.CircleGeometry = function ( radius, segments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CircleGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tsegments: segments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tvar i, uvs = [],\r\n\tcenter = new THREE.Vector3(), centerUV = new THREE.Vector2( 0.5, 0.5 );\r\n\r\n\tthis.vertices.push(center);\r\n\tuvs.push( centerUV );\r\n\r\n\tfor ( i = 0; i <= segments; i ++ ) {\r\n\r\n\t\tvar vertex = new THREE.Vector3();\r\n\t\tvar segment = thetaStart + i / segments * thetaLength;\r\n\r\n\t\tvertex.x = radius * Math.cos( segment );\r\n\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\tthis.vertices.push( vertex );\r\n\t\tuvs.push( new THREE.Vector2( ( vertex.x / radius + 1 ) / 2, ( vertex.y / radius + 1 ) / 2 ) );\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 1; i <= segments; i ++ ) {\r\n\r\n\t\tthis.faces.push( new THREE.Face3( i, i + 1, 0, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ i ].clone(), uvs[ i + 1 ].clone(), centerUV.clone() ] );\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.CircleGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CircleGeometry.prototype.constructor = THREE.CircleGeometry;\r\n\r\n// File:src/extras/geometries/CubeGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\n\r\nTHREE.CubeGeometry = function ( width, height, depth, widthSegments, heightSegments, depthSegments ) {\r\n\r\n\tTHREE.warn( 'THREE.CubeGeometry has been renamed to THREE.BoxGeometry.' );\r\n\treturn new THREE.BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments );\r\n\r\n };\r\n\r\n// File:src/extras/geometries/CylinderGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.CylinderGeometry = function ( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'CylinderGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradiusTop: radiusTop,\r\n\t\tradiusBottom: radiusBottom,\r\n\t\theight: height,\r\n\t\tradialSegments: radialSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\topenEnded: openEnded,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tradiusTop = radiusTop !== undefined ? radiusTop : 20;\r\n\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 20;\r\n\theight = height !== undefined ? height : 100;\r\n\r\n\tradialSegments = radialSegments || 8;\r\n\theightSegments = heightSegments || 1;\r\n\r\n\topenEnded = openEnded !== undefined ? openEnded : false;\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : 2 * Math.PI;\r\n\r\n\tvar heightHalf = height / 2;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tvar v = y / heightSegments;\r\n\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\r\n\r\n\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / radialSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = radius * Math.sin( u * thetaLength + thetaStart );\r\n\t\t\tvertex.y = - v * height + heightHalf;\r\n\t\t\tvertex.z = radius * Math.cos( u * thetaLength + thetaStart );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tvar tanTheta = ( radiusBottom - radiusTop ) / height;\r\n\tvar na, nb;\r\n\r\n\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\tif ( radiusTop !== 0 ) {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 0 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 0 ][ x + 1 ] ].clone();\r\n\r\n\t\t} else {\r\n\r\n\t\t\tna = this.vertices[ vertices[ 1 ][ x ] ].clone();\r\n\t\t\tnb = this.vertices[ vertices[ 1 ][ x + 1 ] ].clone();\r\n\r\n\t\t}\r\n\r\n\t\tna.setY( Math.sqrt( na.x * na.x + na.z * na.z ) * tanTheta ).normalize();\r\n\t\tnb.setY( Math.sqrt( nb.x * nb.x + nb.z * nb.z ) * tanTheta ).normalize();\r\n\r\n\t\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x ];\r\n\t\t\tvar v2 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x + 1 ];\r\n\t\t\tvar v4 = vertices[ y ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = na.clone();\r\n\t\t\tvar n2 = na.clone();\r\n\t\t\tvar n3 = nb.clone();\r\n\t\t\tvar n4 = nb.clone();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\t\t\tvar uv4 = uvs[ y ][ x + 1 ].clone();\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// top cap\r\n\r\n\tif ( openEnded === false && radiusTop > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ 0 ][ x ];\r\n\t\t\tvar v2 = vertices[ 0 ][ x + 1 ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ 0 ][ x ].clone();\r\n\t\t\tvar uv2 = uvs[ 0 ][ x + 1 ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 0 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// bottom cap\r\n\r\n\tif ( openEnded === false && radiusBottom > 0 ) {\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( 0, - heightHalf, 0 ) );\r\n\r\n\t\tfor ( x = 0; x < radialSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ heightSegments ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ heightSegments ][ x ];\r\n\t\t\tvar v3 = this.vertices.length - 1;\r\n\r\n\t\t\tvar n1 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n2 = new THREE.Vector3( 0, - 1, 0 );\r\n\t\t\tvar n3 = new THREE.Vector3( 0, - 1, 0 );\r\n\r\n\t\t\tvar uv1 = uvs[ heightSegments ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ heightSegments ][ x ].clone();\r\n\t\t\tvar uv3 = new THREE.Vector2( uv2.x, 1 );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.CylinderGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.CylinderGeometry.prototype.constructor = THREE.CylinderGeometry;\r\n\r\n// File:src/extras/geometries/ExtrudeGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n *\r\n * Creates extruded geometry from a path shape.\r\n *\r\n * parameters = {\r\n *\r\n *  curveSegments: <int>, // number of points on the curves\r\n *  steps: <int>, // number of points for z-side extrusions / used for subdividing segements of extrude spline too\r\n *  amount: <int>, // Depth to extrude the shape\r\n *\r\n *  bevelEnabled: <bool>, // turn on bevel\r\n *  bevelThickness: <float>, // how deep into the original shape bevel goes\r\n *  bevelSize: <float>, // how far from shape outline is bevel\r\n *  bevelSegments: <int>, // number of bevel layers\r\n *\r\n *  extrudePath: <THREE.CurvePath> // 3d spline path to extrude shape along. (creates Frames if .frames aren't defined)\r\n *  frames: <THREE.TubeGeometry.FrenetFrames> // containing arrays of tangents, normals, binormals\r\n *\r\n *  material: <int> // material index for front and back faces\r\n *  extrudeMaterial: <int> // material index for extrusion and beveled faces\r\n *  uvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ExtrudeGeometry = function ( shapes, options ) {\r\n\r\n\tif ( typeof( shapes ) === \"undefined\" ) {\r\n\t\tshapes = [];\r\n\t\treturn;\r\n\t}\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ExtrudeGeometry';\r\n\r\n\tshapes = shapes instanceof Array ? shapes : [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\t// can't really use automatic vertex normals\r\n\t// as then front and back sides get smoothed too\r\n\t// should do separate smoothing just for sides\r\n\r\n\t//this.computeVertexNormals();\r\n\r\n\t//console.log( \"took\", ( Date.now() - startTime ) );\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ExtrudeGeometry.prototype.constructor = THREE.ExtrudeGeometry;\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\tvar sl = shapes.length;\r\n\r\n\tfor ( var s = 0; s < sl; s ++ ) {\r\n\t\tvar shape = shapes[ s ];\r\n\t\tthis.addShape( shape, options );\r\n\t}\r\n};\r\n\r\nTHREE.ExtrudeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tvar amount = options.amount !== undefined ? options.amount : 100;\r\n\r\n\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6; // 10\r\n\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2; // 8\r\n\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\r\n\r\n\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true; // false\r\n\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar steps = options.steps !== undefined ? options.steps : 1;\r\n\r\n\tvar extrudePath = options.extrudePath;\r\n\tvar extrudePts, extrudeByPath = false;\r\n\r\n\tvar material = options.material;\r\n\tvar extrudeMaterial = options.extrudeMaterial;\r\n\r\n\t// Use default WorldUVGenerator if no UV generators are specified.\r\n\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : THREE.ExtrudeGeometry.WorldUVGenerator;\r\n\r\n\tvar splineTube, binormal, normal, position2;\r\n\tif ( extrudePath ) {\r\n\r\n\t\textrudePts = extrudePath.getSpacedPoints( steps );\r\n\r\n\t\textrudeByPath = true;\r\n\t\tbevelEnabled = false; // bevels not supported for path extrusion\r\n\r\n\t\t// SETUP TNB variables\r\n\r\n\t\t// Reuse TNB from TubeGeomtry for now.\r\n\t\t// TODO1 - have a .isClosed in spline?\r\n\r\n\t\tsplineTube = options.frames !== undefined ? options.frames : new THREE.TubeGeometry.FrenetFrames(extrudePath, steps, false);\r\n\r\n\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\r\n\r\n\t\tbinormal = new THREE.Vector3();\r\n\t\tnormal = new THREE.Vector3();\r\n\t\tposition2 = new THREE.Vector3();\r\n\r\n\t}\r\n\r\n\t// Safeguards if bevels are not enabled\r\n\r\n\tif ( ! bevelEnabled ) {\r\n\r\n\t\tbevelSegments = 0;\r\n\t\tbevelThickness = 0;\r\n\t\tbevelSize = 0;\r\n\r\n\t}\r\n\r\n\t// Variables initalization\r\n\r\n\tvar ahole, h, hl; // looping of holes\r\n\tvar scope = this;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices ) ;\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( ahole ) ) {\r\n\r\n\t\t\t\tholes[ h ] = ahole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false; // If vertices are in order now, we shouldn't need to worry about them again (hopefully)!\r\n\r\n\t}\r\n\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape ( vertices, holes );\r\n\r\n\t/* Vertices */\r\n\r\n\tvar contour = vertices; // vertices has all points but contour has only points of circumference\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\tvertices = vertices.concat( ahole );\r\n\r\n\t}\r\n\r\n\r\n\tfunction scalePt2 ( pt, vec, size ) {\r\n\r\n\t\tif ( ! vec ) THREE.error( \"THREE.ExtrudeGeometry: vec does not exist\" );\r\n\r\n\t\treturn vec.clone().multiplyScalar( size ).add( pt );\r\n\r\n\t}\r\n\r\n\tvar b, bs, t, z,\r\n\t\tvert, vlen = vertices.length,\r\n\t\tface, flen = faces.length;\r\n\r\n\r\n\t// Find directions for point movement\r\n\r\n\r\n\tfunction getBevelVec( inPt, inPrev, inNext ) {\r\n\r\n\t\tvar EPSILON = 0.0000000001;\r\n\t\t\r\n\t\t// computes for inPt the corresponding point inPt' on a new contour\r\n\t\t//   shiftet by 1 unit (length of normalized vector) to the left\r\n\t\t// if we walk along contour clockwise, this new contour is outside the old one\r\n\t\t//\r\n\t\t// inPt' is the intersection of the two lines parallel to the two\r\n\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\r\n\t\t\r\n\t\tvar v_trans_x, v_trans_y, shrink_by = 1;\t\t// resulting translation vector for inPt\r\n\r\n\t\t// good reading for geometry algorithms (here: line-line intersection)\r\n\t\t// http://geomalgorithms.com/a05-_intersect-1.html\r\n\r\n\t\tvar v_prev_x = inPt.x - inPrev.x, v_prev_y = inPt.y - inPrev.y;\r\n\t\tvar v_next_x = inNext.x - inPt.x, v_next_y = inNext.y - inPt.y;\r\n\t\t\r\n\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\r\n\t\t\r\n\t\t// check for colinear edges\r\n\t\tvar colinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\t\r\n\t\tif ( Math.abs( colinear0 ) > EPSILON ) {\t\t// not colinear\r\n\t\t\t\r\n\t\t\t// length of vectors for normalizing\r\n\t\r\n\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\r\n\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\r\n\t\t\t\r\n\t\t\t// shift adjacent points by unit vectors to the left\r\n\t\r\n\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\r\n\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\r\n\t\t\t\r\n\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\r\n\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\r\n\t\r\n\t\t\t// scaling factor for v_prev to intersection point\r\n\t\r\n\t\t\tvar sf = (  ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\r\n\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x    ) /\r\n\t\t\t\t\t  ( v_prev_x * v_next_y - v_prev_y * v_next_x );\r\n\t\r\n\t\t\t// vector from inPt to intersection point\r\n\t\r\n\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\r\n\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\r\n\t\r\n\t\t\t// Don't normalize!, otherwise sharp corners become ugly\r\n\t\t\t//  but prevent crazy spikes\r\n\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y )\r\n\t\t\tif ( v_trans_lensq <= 2 ) {\r\n\t\t\t\treturn\tnew THREE.Vector2( v_trans_x, v_trans_y );\r\n\t\t\t} else {\r\n\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else {\t\t// handle special case of colinear edges\r\n\r\n\t\t\tvar direction_eq = false;\t\t// assumes: opposite\r\n\t\t\tif ( v_prev_x > EPSILON ) {\r\n\t\t\t\tif ( v_next_x > EPSILON ) { direction_eq = true; }\r\n\t\t\t} else {\r\n\t\t\t\tif ( v_prev_x < - EPSILON ) {\r\n\t\t\t\t\tif ( v_next_x < - EPSILON ) { direction_eq = true; }\r\n\t\t\t\t} else {\r\n\t\t\t\t\tif ( Math.sign(v_prev_y) == Math.sign(v_next_y) ) { direction_eq = true; }\r\n\t\t\t\t}\r\n\t\t\t}\r\n\r\n\t\t\tif ( direction_eq ) {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\r\n\t\t\t\tv_trans_x = - v_prev_y;\r\n\t\t\t\tv_trans_y =  v_prev_x;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\r\n\t\t\t} else {\r\n\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\r\n\t\t\t\tv_trans_x = v_prev_x;\r\n\t\t\t\tv_trans_y = v_prev_y;\r\n\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treturn\tnew THREE.Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\r\n\r\n\t}\r\n\r\n\r\n\tvar contourMovements = [];\r\n\r\n\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\tif ( j === il ) j = 0;\r\n\t\tif ( k === il ) k = 0;\r\n\r\n\t\t//  (j)---(i)---(k)\r\n\t\t// console.log('i,j,k', i, j , k)\r\n\r\n\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\r\n\r\n\t}\r\n\r\n\tvar holesMovements = [], oneHoleMovements, verticesMovements = contourMovements.concat();\r\n\r\n\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\tahole = holes[ h ];\r\n\r\n\t\toneHoleMovements = [];\r\n\r\n\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\r\n\r\n\t\t\tif ( j === il ) j = 0;\r\n\t\t\tif ( k === il ) k = 0;\r\n\r\n\t\t\t//  (j)---(i)---(k)\r\n\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\r\n\r\n\t\t}\r\n\r\n\t\tholesMovements.push( oneHoleMovements );\r\n\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\r\n\r\n\t}\r\n\r\n\r\n\t// Loop bevelSegments, 1 for the front, 1 for the back\r\n\r\n\tfor ( b = 0; b < bevelSegments; b ++ ) {\r\n\t//for ( b = bevelSegments; b > 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\r\n\t\t//z = bevelThickness * t;\r\n\t\tbs = bevelSize * ( Math.sin ( t * Math.PI / 2 ) ) ; // curved\r\n\t\t//bs = bevelSize * t ; // linear\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\r\n\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tv( vert.x, vert.y,  - z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tbs = bevelSize;\r\n\r\n\t// Back facing vertices\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\tv( vert.x, vert.y, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\r\n\r\n\t\t\tnormal.copy( splineTube.normals[0] ).multiplyScalar(vert.x);\r\n\t\t\tbinormal.copy( splineTube.binormals[0] ).multiplyScalar(vert.y);\r\n\r\n\t\t\tposition2.copy( extrudePts[0] ).add(normal).add(binormal);\r\n\r\n\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Add stepped vertices...\r\n\t// Including front facing vertices\r\n\r\n\tvar s;\r\n\r\n\tfor ( s = 1; s <= steps; s ++ ) {\r\n\r\n\t\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\r\n\r\n\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\tv( vert.x, vert.y, amount / steps * s );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\r\n\r\n\t\t\t\tnormal.copy( splineTube.normals[s] ).multiplyScalar( vert.x );\r\n\t\t\t\tbinormal.copy( splineTube.binormals[s] ).multiplyScalar( vert.y );\r\n\r\n\t\t\t\tposition2.copy( extrudePts[s] ).add( normal ).add( binormal );\r\n\r\n\t\t\t\tv( position2.x, position2.y, position2.z );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Add bevel segments planes\r\n\r\n\t//for ( b = 1; b <= bevelSegments; b ++ ) {\r\n\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\r\n\r\n\t\tt = b / bevelSegments;\r\n\t\tz = bevelThickness * ( 1 - t );\r\n\t\t//bs = bevelSize * ( 1-Math.sin ( ( 1 - t ) * Math.PI/2 ) );\r\n\t\tbs = bevelSize * Math.sin ( t * Math.PI / 2 ) ;\r\n\r\n\t\t// contract shape\r\n\r\n\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\r\n\r\n\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\r\n\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t}\r\n\r\n\t\t// expand holes\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\toneHoleMovements = holesMovements[ h ];\r\n\r\n\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\r\n\r\n\t\t\t\tif ( ! extrudeByPath ) {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y,  amount + z );\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t/* Faces */\r\n\r\n\t// Top and bottom faces\r\n\r\n\tbuildLidFaces();\r\n\r\n\t// Sides faces\r\n\r\n\tbuildSideFaces();\r\n\r\n\r\n\t/////  Internal functions\r\n\r\n\tfunction buildLidFaces() {\r\n\r\n\t\tif ( bevelEnabled ) {\r\n\r\n\t\t\tvar layer = 0 ; // steps + 1\r\n\t\t\tvar offset = vlen * layer;\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t\tlayer = steps + bevelSegments * 2;\r\n\t\t\toffset = vlen * layer;\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\t// Bottom faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// Top faces\r\n\r\n\t\t\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\t\t\tface = faces[ i ];\r\n\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// Create faces for the z-sides of the shape\r\n\r\n\tfunction buildSideFaces() {\r\n\r\n\t\tvar layeroffset = 0;\r\n\t\tsidewalls( contour, layeroffset );\r\n\t\tlayeroffset += contour.length;\r\n\r\n\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\r\n\r\n\t\t\tahole = holes[ h ];\r\n\t\t\tsidewalls( ahole, layeroffset );\r\n\r\n\t\t\t//, true\r\n\t\t\tlayeroffset += ahole.length;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfunction sidewalls( contour, layeroffset ) {\r\n\r\n\t\tvar j, k;\r\n\t\ti = contour.length;\r\n\r\n\t\twhile ( -- i >= 0 ) {\r\n\r\n\t\t\tj = i;\r\n\t\t\tk = i - 1;\r\n\t\t\tif ( k < 0 ) k = contour.length - 1;\r\n\r\n\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\r\n\r\n\t\t\tvar s = 0, sl = steps  + bevelSegments * 2;\r\n\r\n\t\t\tfor ( s = 0; s < sl; s ++ ) {\r\n\r\n\t\t\t\tvar slen1 = vlen * s;\r\n\t\t\t\tvar slen2 = vlen * ( s + 1 );\r\n\r\n\t\t\t\tvar a = layeroffset + j + slen1,\r\n\t\t\t\t\tb = layeroffset + k + slen1,\r\n\t\t\t\t\tc = layeroffset + k + slen2,\r\n\t\t\t\t\td = layeroffset + j + slen2;\r\n\r\n\t\t\t\tf4( a, b, c, d, contour, s, sl, j, k );\r\n\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\tfunction v( x, y, z ) {\r\n\r\n\t\tscope.vertices.push( new THREE.Vector3( x, y, z ) );\r\n\r\n\t}\r\n\r\n\tfunction f3( a, b, c ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\r\n\t\t// normal, color, material\r\n\t\tscope.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\r\n\t\tvar uvs = uvgen.generateTopUV( scope, a, b, c );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( uvs );\r\n\r\n\t}\r\n\r\n\tfunction f4( a, b, c, d, wallContour, stepIndex, stepsLength, contourIndex1, contourIndex2 ) {\r\n\r\n\t\ta += shapesOffset;\r\n\t\tb += shapesOffset;\r\n\t\tc += shapesOffset;\r\n\t\td += shapesOffset;\r\n\r\n\t\tscope.faces.push( new THREE.Face3( a, b, d, null, null, extrudeMaterial ) );\r\n\t\tscope.faces.push( new THREE.Face3( b, c, d, null, null, extrudeMaterial ) );\r\n\r\n\t\tvar uvs = uvgen.generateSideWallUV( scope, a, b, c, d );\r\n\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 0 ], uvs[ 1 ], uvs[ 3 ] ] );\r\n\t\tscope.faceVertexUvs[ 0 ].push( [ uvs[ 1 ], uvs[ 2 ], uvs[ 3 ] ] );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.ExtrudeGeometry.WorldUVGenerator = {\r\n\r\n\tgenerateTopUV: function ( geometry, indexA, indexB, indexC ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\r\n\t\treturn [\r\n\t\t\tnew THREE.Vector2( a.x, a.y ),\r\n\t\t\tnew THREE.Vector2( b.x, b.y ),\r\n\t\t\tnew THREE.Vector2( c.x, c.y )\r\n\t\t];\r\n\r\n\t},\r\n\r\n\tgenerateSideWallUV: function ( geometry, indexA, indexB, indexC, indexD ) {\r\n\r\n\t\tvar vertices = geometry.vertices;\r\n\r\n\t\tvar a = vertices[ indexA ];\r\n\t\tvar b = vertices[ indexB ];\r\n\t\tvar c = vertices[ indexC ];\r\n\t\tvar d = vertices[ indexD ];\r\n\r\n\t\tif ( Math.abs( a.y - b.y ) < 0.01 ) {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.x, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.x, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.x, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.x, 1 - d.z )\r\n\t\t\t];\r\n\t\t} else {\r\n\t\t\treturn [\r\n\t\t\t\tnew THREE.Vector2( a.y, 1 - a.z ),\r\n\t\t\t\tnew THREE.Vector2( b.y, 1 - b.z ),\r\n\t\t\t\tnew THREE.Vector2( c.y, 1 - c.z ),\r\n\t\t\t\tnew THREE.Vector2( d.y, 1 - d.z )\r\n\t\t\t];\r\n\t\t}\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/ShapeGeometry.js\r\n\r\n/**\r\n * @author jonobr1 / http://jonobr1.com\r\n *\r\n * Creates a one-sided polygonal geometry from a path shape. Similar to\r\n * ExtrudeGeometry.\r\n *\r\n * parameters = {\r\n *\r\n *\tcurveSegments: <int>, // number of points on the curves. NOT USED AT THE MOMENT.\r\n *\r\n *\tmaterial: <int> // material index for front and back faces\r\n *\tuvGenerator: <Object> // object that provides UV generator functions\r\n *\r\n * }\r\n **/\r\n\r\nTHREE.ShapeGeometry = function ( shapes, options ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ShapeGeometry';\r\n\r\n\tif ( shapes instanceof Array === false ) shapes = [ shapes ];\r\n\r\n\tthis.addShapeList( shapes, options );\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.ShapeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ShapeGeometry.prototype.constructor = THREE.ShapeGeometry;\r\n\r\n/**\r\n * Add an array of shapes to THREE.ShapeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShapeList = function ( shapes, options ) {\r\n\r\n\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\r\n\r\n\t\tthis.addShape( shapes[ i ], options );\r\n\r\n\t}\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n/**\r\n * Adds a shape to THREE.ShapeGeometry, based on THREE.ExtrudeGeometry.\r\n */\r\nTHREE.ShapeGeometry.prototype.addShape = function ( shape, options ) {\r\n\r\n\tif ( options === undefined ) options = {};\r\n\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\r\n\r\n\tvar material = options.material;\r\n\tvar uvgen = options.UVGenerator === undefined ? THREE.ExtrudeGeometry.WorldUVGenerator : options.UVGenerator;\r\n\r\n\t//\r\n\r\n\tvar i, l, hole;\r\n\r\n\tvar shapesOffset = this.vertices.length;\r\n\tvar shapePoints = shape.extractPoints( curveSegments );\r\n\r\n\tvar vertices = shapePoints.shape;\r\n\tvar holes = shapePoints.holes;\r\n\r\n\tvar reverse = ! THREE.Shape.Utils.isClockWise( vertices );\r\n\r\n\tif ( reverse ) {\r\n\r\n\t\tvertices = vertices.reverse();\r\n\r\n\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe...\r\n\r\n\t\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\t\thole = holes[ i ];\r\n\r\n\t\t\tif ( THREE.Shape.Utils.isClockWise( hole ) ) {\r\n\r\n\t\t\t\tholes[ i ] = hole.reverse();\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\treverse = false;\r\n\r\n\t}\r\n\r\n\tvar faces = THREE.Shape.Utils.triangulateShape( vertices, holes );\r\n\r\n\t// Vertices\r\n\r\n\tvar contour = vertices;\r\n\r\n\tfor ( i = 0, l = holes.length; i < l; i ++ ) {\r\n\r\n\t\thole = holes[ i ];\r\n\t\tvertices = vertices.concat( hole );\r\n\r\n\t}\r\n\r\n\t//\r\n\r\n\tvar vert, vlen = vertices.length;\r\n\tvar face, flen = faces.length;\r\n\r\n\tfor ( i = 0; i < vlen; i ++ ) {\r\n\r\n\t\tvert = vertices[ i ];\r\n\r\n\t\tthis.vertices.push( new THREE.Vector3( vert.x, vert.y, 0 ) );\r\n\r\n\t}\r\n\r\n\tfor ( i = 0; i < flen; i ++ ) {\r\n\r\n\t\tface = faces[ i ];\r\n\r\n\t\tvar a = face[ 0 ] + shapesOffset;\r\n\t\tvar b = face[ 1 ] + shapesOffset;\r\n\t\tvar c = face[ 2 ] + shapesOffset;\r\n\r\n\t\tthis.faces.push( new THREE.Face3( a, b, c, null, null, material ) );\r\n\t\tthis.faceVertexUvs[ 0 ].push( uvgen.generateTopUV( this, a, b, c ) );\r\n\r\n\t}\r\n\r\n};\r\n\r\n// File:src/extras/geometries/LatheGeometry.js\r\n\r\n/**\r\n * @author astrodud / http://astrodud.isgreat.org/\r\n * @author zz85 / https://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n */\r\n\r\n// points - to create a closed torus, one must use a set of points \r\n//    like so: [ a, b, c, d, a ], see first is the same as last.\r\n// segments - the number of circumference segments to create\r\n// phiStart - the starting radian\r\n// phiLength - the radian (0 to 2*PI) range of the lathed section\r\n//    2*pi is a closed lathe, less than 2PI is a portion.\r\n\r\nTHREE.LatheGeometry = function ( points, segments, phiStart, phiLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'LatheGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpoints: points,\r\n\t\tsegments: segments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength\r\n\t};\r\n\r\n\tsegments = segments || 12;\r\n\tphiStart = phiStart || 0;\r\n\tphiLength = phiLength || 2 * Math.PI;\r\n\r\n\tvar inversePointLength = 1.0 / ( points.length - 1 );\r\n\tvar inverseSegments = 1.0 / segments;\r\n\r\n\tfor ( var i = 0, il = segments; i <= il; i ++ ) {\r\n\r\n\t\tvar phi = phiStart + i * inverseSegments * phiLength;\r\n\r\n\t\tvar c = Math.cos( phi ),\r\n\t\t\ts = Math.sin( phi );\r\n\r\n\t\tfor ( var j = 0, jl = points.length; j < jl; j ++ ) {\r\n\r\n\t\t\tvar pt = points[ j ];\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\r\n\t\t\tvertex.x = c * pt.x - s * pt.y;\r\n\t\t\tvertex.y = s * pt.x + c * pt.y;\r\n\t\t\tvertex.z = pt.z;\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar np = points.length;\r\n\r\n\tfor ( var i = 0, il = segments; i < il; i ++ ) {\r\n\r\n\t\tfor ( var j = 0, jl = points.length - 1; j < jl; j ++ ) {\r\n\r\n\t\t\tvar base = j + np * i;\r\n\t\t\tvar a = base;\r\n\t\t\tvar b = base + np;\r\n\t\t\tvar c = base + 1 + np;\r\n\t\t\tvar d = base + 1;\r\n\r\n\t\t\tvar u0 = i * inverseSegments;\r\n\t\t\tvar v0 = j * inversePointLength;\r\n\t\t\tvar u1 = u0 + inverseSegments;\r\n\t\t\tvar v1 = v0 + inversePointLength;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u0, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [\r\n\r\n\t\t\t\tnew THREE.Vector2( u1, v0 ),\r\n\t\t\t\tnew THREE.Vector2( u1, v1 ),\r\n\t\t\t\tnew THREE.Vector2( u0, v1 )\r\n\r\n\t\t\t] );\r\n\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.mergeVertices();\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.LatheGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.LatheGeometry.prototype.constructor = THREE.LatheGeometry;\r\n\r\n// File:src/extras/geometries/PlaneGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tconsole.info( 'THREE.PlaneGeometry: Consider using THREE.PlaneBufferGeometry for lower memory footprint.' );\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PlaneGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tthis.fromBufferGeometry( new THREE.PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\r\n\r\n};\r\n\r\nTHREE.PlaneGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PlaneGeometry.prototype.constructor = THREE.PlaneGeometry;\r\n\r\n// File:src/extras/geometries/PlaneBufferGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://papervision3d.googlecode.com/svn/trunk/as3/trunk/src/org/papervision3d/objects/primitives/Plane.as\r\n */\r\n\r\nTHREE.PlaneBufferGeometry = function ( width, height, widthSegments, heightSegments ) {\r\n\r\n\tTHREE.BufferGeometry.call( this );\r\n\r\n\tthis.type = 'PlaneBufferGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\twidth: width,\r\n\t\theight: height,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments\r\n\t};\r\n\r\n\tvar width_half = width / 2;\r\n\tvar height_half = height / 2;\r\n\r\n\tvar gridX = widthSegments || 1;\r\n\tvar gridY = heightSegments || 1;\r\n\r\n\tvar gridX1 = gridX + 1;\r\n\tvar gridY1 = gridY + 1;\r\n\r\n\tvar segment_width = width / gridX;\r\n\tvar segment_height = height / gridY;\r\n\r\n\tvar vertices = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar normals = new Float32Array( gridX1 * gridY1 * 3 );\r\n\tvar uvs = new Float32Array( gridX1 * gridY1 * 2 );\r\n\r\n\tvar offset = 0;\r\n\tvar offset2 = 0;\r\n\r\n\tfor ( var iy = 0; iy < gridY1; iy ++ ) {\r\n\r\n\t\tvar y = iy * segment_height - height_half;\r\n\r\n\t\tfor ( var ix = 0; ix < gridX1; ix ++ ) {\r\n\r\n\t\t\tvar x = ix * segment_width - width_half;\r\n\r\n\t\t\tvertices[ offset     ] = x;\r\n\t\t\tvertices[ offset + 1 ] = - y;\r\n\r\n\t\t\tnormals[ offset + 2 ] = 1;\r\n\r\n\t\t\tuvs[ offset2     ] = ix / gridX;\r\n\t\t\tuvs[ offset2 + 1 ] = 1 - ( iy / gridY );\r\n\r\n\t\t\toffset += 3;\r\n\t\t\toffset2 += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\toffset = 0;\r\n\r\n\tvar indices = new ( ( vertices.length / 3 ) > 65535 ? Uint32Array : Uint16Array )( gridX * gridY * 6 );\r\n\r\n\tfor ( var iy = 0; iy < gridY; iy ++ ) {\r\n\r\n\t\tfor ( var ix = 0; ix < gridX; ix ++ ) {\r\n\r\n\t\t\tvar a = ix + gridX1 * iy;\r\n\t\t\tvar b = ix + gridX1 * ( iy + 1 );\r\n\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\r\n\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\r\n\r\n\t\t\tindices[ offset     ] = a;\r\n\t\t\tindices[ offset + 1 ] = b;\r\n\t\t\tindices[ offset + 2 ] = d;\r\n\r\n\t\t\tindices[ offset + 3 ] = b;\r\n\t\t\tindices[ offset + 4 ] = c;\r\n\t\t\tindices[ offset + 5 ] = d;\r\n\r\n\t\t\toffset += 6;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.addAttribute( 'index', new THREE.BufferAttribute( indices, 1 ) );\r\n\tthis.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tthis.addAttribute( 'normal', new THREE.BufferAttribute( normals, 3 ) );\r\n\tthis.addAttribute( 'uv', new THREE.BufferAttribute( uvs, 2 ) );\r\n\r\n};\r\n\r\nTHREE.PlaneBufferGeometry.prototype = Object.create( THREE.BufferGeometry.prototype );\r\nTHREE.PlaneBufferGeometry.prototype.constructor = THREE.PlaneBufferGeometry;\r\n\r\n// File:src/extras/geometries/RingGeometry.js\r\n\r\n/**\r\n * @author Kaleb Murphy\r\n */\r\n\r\nTHREE.RingGeometry = function ( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'RingGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tinnerRadius: innerRadius,\r\n\t\touterRadius: outerRadius,\r\n\t\tthetaSegments: thetaSegments,\r\n\t\tphiSegments: phiSegments,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength\r\n\t};\r\n\r\n\tinnerRadius = innerRadius || 0;\r\n\touterRadius = outerRadius || 50;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\r\n\r\n\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\r\n\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 8;\r\n\r\n\tvar i, o, uvs = [], radius = innerRadius, radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\r\n\r\n\tfor ( i = 0; i < phiSegments + 1; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tfor ( o = 0; o < thetaSegments + 1; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvar segment = thetaStart + o / thetaSegments * thetaLength;\r\n\t\t\tvertex.x = radius * Math.cos( segment );\r\n\t\t\tvertex.y = radius * Math.sin( segment );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\t\t\tuvs.push( new THREE.Vector2( ( vertex.x / outerRadius + 1 ) / 2, ( vertex.y / outerRadius + 1 ) / 2 ) );\r\n\t\t}\r\n\r\n\t\tradius += radiusStep;\r\n\r\n\t}\r\n\r\n\tvar n = new THREE.Vector3( 0, 0, 1 );\r\n\r\n\tfor ( i = 0; i < phiSegments; i ++ ) { // concentric circles inside ring\r\n\r\n\t\tvar thetaSegment = i * (thetaSegments + 1);\r\n\r\n\t\tfor ( o = 0; o < thetaSegments ; o ++ ) { // number of segments per circle\r\n\r\n\t\t\tvar segment = o + thetaSegment;\r\n\r\n\t\t\tvar v1 = segment;\r\n\t\t\tvar v2 = segment + thetaSegments + 1;\r\n\t\t\tvar v3 = segment + thetaSegments + 2;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t\tv1 = segment;\r\n\t\t\tv2 = segment + thetaSegments + 2;\r\n\t\t\tv3 = segment + 1;\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n.clone(), n.clone(), n.clone() ] ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ v1 ].clone(), uvs[ v2 ].clone(), uvs[ v3 ].clone() ]);\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.RingGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.RingGeometry.prototype.constructor = THREE.RingGeometry;\r\n\r\n\r\n// File:src/extras/geometries/SphereGeometry.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.SphereGeometry = function ( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'SphereGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\twidthSegments: widthSegments,\r\n\t\theightSegments: heightSegments,\r\n\t\tphiStart: phiStart,\r\n\t\tphiLength: phiLength,\r\n\t\tthetaStart: thetaStart,\r\n\t\tthetaLength: thetaLength \r\n\t};\r\n\r\n\tradius = radius || 50;\r\n\r\n\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\r\n\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\r\n\r\n\tphiStart = phiStart !== undefined ? phiStart : 0;\r\n\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\r\n\r\n\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\r\n\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\r\n\r\n\tvar x, y, vertices = [], uvs = [];\r\n\r\n\tfor ( y = 0; y <= heightSegments; y ++ ) {\r\n\r\n\t\tvar verticesRow = [];\r\n\t\tvar uvsRow = [];\r\n\r\n\t\tfor ( x = 0; x <= widthSegments; x ++ ) {\r\n\r\n\t\t\tvar u = x / widthSegments;\r\n\t\t\tvar v = y / heightSegments;\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\r\n\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tverticesRow.push( this.vertices.length - 1 );\r\n\t\t\tuvsRow.push( new THREE.Vector2( u, 1 - v ) );\r\n\r\n\t\t}\r\n\r\n\t\tvertices.push( verticesRow );\r\n\t\tuvs.push( uvsRow );\r\n\r\n\t}\r\n\r\n\tfor ( y = 0; y < heightSegments; y ++ ) {\r\n\r\n\t\tfor ( x = 0; x < widthSegments; x ++ ) {\r\n\r\n\t\t\tvar v1 = vertices[ y ][ x + 1 ];\r\n\t\t\tvar v2 = vertices[ y ][ x ];\r\n\t\t\tvar v3 = vertices[ y + 1 ][ x ];\r\n\t\t\tvar v4 = vertices[ y + 1 ][ x + 1 ];\r\n\r\n\t\t\tvar n1 = this.vertices[ v1 ].clone().normalize();\r\n\t\t\tvar n2 = this.vertices[ v2 ].clone().normalize();\r\n\t\t\tvar n3 = this.vertices[ v3 ].clone().normalize();\r\n\t\t\tvar n4 = this.vertices[ v4 ].clone().normalize();\r\n\r\n\t\t\tvar uv1 = uvs[ y ][ x + 1 ].clone();\r\n\t\t\tvar uv2 = uvs[ y ][ x ].clone();\r\n\t\t\tvar uv3 = uvs[ y + 1 ][ x ].clone();\r\n\t\t\tvar uv4 = uvs[ y + 1 ][ x + 1 ].clone();\r\n\r\n\t\t\tif ( Math.abs( this.vertices[ v1 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv1.x = ( uv1.x + uv2.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v3, v4, [ n1, n3, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv3, uv4 ] );\r\n\r\n\t\t\t} else if ( Math.abs( this.vertices[ v3 ].y ) === radius ) {\r\n\r\n\t\t\t\tuv3.x = ( uv3.x + uv4.x ) / 2;\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v3, [ n1, n2, n3 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv3 ] );\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v1, v2, v4, [ n1, n2, n4 ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv1, uv2, uv4 ] );\r\n\r\n\t\t\t\tthis.faces.push( new THREE.Face3( v2, v3, v4, [ n2.clone(), n3, n4.clone() ] ) );\r\n\t\t\t\tthis.faceVertexUvs[ 0 ].push( [ uv2.clone(), uv3, uv4.clone() ] );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n};\r\n\r\nTHREE.SphereGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.SphereGeometry.prototype.constructor = THREE.SphereGeometry;\r\n\r\n// File:src/extras/geometries/TextGeometry.js\r\n\r\n/**\r\n * @author zz85 / http://www.lab4games.net/zz85/blog\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n * For creating 3D text geometry in three.js\r\n *\r\n * Text = 3D Text\r\n *\r\n * parameters = {\r\n *  size: \t\t\t<float>, \t// size of the text\r\n *  height: \t\t<float>, \t// thickness to extrude text\r\n *  curveSegments: \t<int>,\t\t// number of points on the curves\r\n *\r\n *  font: \t\t\t<string>,\t\t// font name\r\n *  weight: \t\t<string>,\t\t// font weight (normal, bold)\r\n *  style: \t\t\t<string>,\t\t// font style  (normal, italics)\r\n *\r\n *  bevelEnabled:\t<bool>,\t\t\t// turn on bevel\r\n *  bevelThickness: <float>, \t\t// how deep into text bevel goes\r\n *  bevelSize:\t\t<float>, \t\t// how far from text outline is bevel\r\n *  }\r\n *\r\n */\r\n\r\n/*\tUsage Examples\r\n\r\n\t// TextGeometry wrapper\r\n\r\n\tvar text3d = new TextGeometry( text, options );\r\n\r\n\t// Complete manner\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, options );\r\n\tvar text3d = new ExtrudeGeometry( textShapes, options );\r\n\r\n*/\r\n\r\n\r\nTHREE.TextGeometry = function ( text, parameters ) {\r\n\r\n\tparameters = parameters || {};\r\n\r\n\tvar textShapes = THREE.FontUtils.generateShapes( text, parameters );\r\n\r\n\t// translate parameters to ExtrudeGeometry API\r\n\r\n\tparameters.amount = parameters.height !== undefined ? parameters.height : 50;\r\n\r\n\t// defaults\r\n\r\n\tif ( parameters.bevelThickness === undefined ) parameters.bevelThickness = 10;\r\n\tif ( parameters.bevelSize === undefined ) parameters.bevelSize = 8;\r\n\tif ( parameters.bevelEnabled === undefined ) parameters.bevelEnabled = false;\r\n\r\n\tTHREE.ExtrudeGeometry.call( this, textShapes, parameters );\r\n\r\n\tthis.type = 'TextGeometry';\r\n\r\n};\r\n\r\nTHREE.TextGeometry.prototype = Object.create( THREE.ExtrudeGeometry.prototype );\r\nTHREE.TextGeometry.prototype.constructor = THREE.TextGeometry;\r\n\r\n// File:src/extras/geometries/TorusGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * @author mrdoob / http://mrdoob.com/\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3DLite/src/away3dlite/primitives/Torus.as?r=2888\r\n */\r\n\r\nTHREE.TorusGeometry = function ( radius, tube, radialSegments, tubularSegments, arc ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tarc: arc\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 8;\r\n\ttubularSegments = tubularSegments || 6;\r\n\tarc = arc || Math.PI * 2;\r\n\r\n\tvar center = new THREE.Vector3(), uvs = [], normals = [];\r\n\r\n\tfor ( var j = 0; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 0; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar u = i / tubularSegments * arc;\r\n\t\t\tvar v = j / radialSegments * Math.PI * 2;\r\n\r\n\t\t\tcenter.x = radius * Math.cos( u );\r\n\t\t\tcenter.y = radius * Math.sin( u );\r\n\r\n\t\t\tvar vertex = new THREE.Vector3();\r\n\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\r\n\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\r\n\t\t\tvertex.z = tube * Math.sin( v );\r\n\r\n\t\t\tthis.vertices.push( vertex );\r\n\r\n\t\t\tuvs.push( new THREE.Vector2( i / tubularSegments, j / radialSegments ) );\r\n\t\t\tnormals.push( vertex.clone().sub( center ).normalize() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var j = 1; j <= radialSegments; j ++ ) {\r\n\r\n\t\tfor ( var i = 1; i <= tubularSegments; i ++ ) {\r\n\r\n\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\r\n\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\r\n\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\r\n\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\r\n\r\n\t\t\tvar face = new THREE.Face3( a, b, d, [ normals[ a ].clone(), normals[ b ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ a ].clone(), uvs[ b ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t\tface = new THREE.Face3( b, c, d, [ normals[ b ].clone(), normals[ c ].clone(), normals[ d ].clone() ] );\r\n\t\t\tthis.faces.push( face );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvs[ b ].clone(), uvs[ c ].clone(), uvs[ d ].clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n};\r\n\r\nTHREE.TorusGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusGeometry.prototype.constructor = THREE.TorusGeometry;\r\n\r\n// File:src/extras/geometries/TorusKnotGeometry.js\r\n\r\n/**\r\n * @author oosmoxiecode\r\n * based on http://code.google.com/p/away3d/source/browse/trunk/fp10/Away3D/src/away3d/primitives/TorusKnot.as?spec=svn2473&r=2473\r\n */\r\n\r\nTHREE.TorusKnotGeometry = function ( radius, tube, radialSegments, tubularSegments, p, q, heightScale ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TorusKnotGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\ttube: tube,\r\n\t\tradialSegments: radialSegments,\r\n\t\ttubularSegments: tubularSegments,\r\n\t\tp: p,\r\n\t\tq: q,\r\n\t\theightScale: heightScale\r\n\t};\r\n\r\n\tradius = radius || 100;\r\n\ttube = tube || 40;\r\n\tradialSegments = radialSegments || 64;\r\n\ttubularSegments = tubularSegments || 8;\r\n\tp = p || 2;\r\n\tq = q || 3;\r\n\theightScale = heightScale || 1;\r\n\t\r\n\tvar grid = new Array( radialSegments );\r\n\tvar tang = new THREE.Vector3();\r\n\tvar n = new THREE.Vector3();\r\n\tvar bitan = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tgrid[ i ] = new Array( tubularSegments );\r\n\t\tvar u = i / radialSegments * 2 * p * Math.PI;\r\n\t\tvar p1 = getPos( u, q, p, radius, heightScale );\r\n\t\tvar p2 = getPos( u + 0.01, q, p, radius, heightScale );\r\n\t\ttang.subVectors( p2, p1 );\r\n\t\tn.addVectors( p2, p1 );\r\n\r\n\t\tbitan.crossVectors( tang, n );\r\n\t\tn.crossVectors( bitan, tang );\r\n\t\tbitan.normalize();\r\n\t\tn.normalize();\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar v = j / tubularSegments * 2 * Math.PI;\r\n\t\t\tvar cx = - tube * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tvar cy = tube * Math.sin( v );\r\n\r\n\t\t\tvar pos = new THREE.Vector3();\r\n\t\t\tpos.x = p1.x + cx * n.x + cy * bitan.x;\r\n\t\t\tpos.y = p1.y + cx * n.y + cy * bitan.y;\r\n\t\t\tpos.z = p1.z + cx * n.z + cy * bitan.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = this.vertices.push( pos ) - 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < radialSegments; ++ i ) {\r\n\r\n\t\tfor ( var j = 0; j < tubularSegments; ++ j ) {\r\n\r\n\t\t\tvar ip = ( i + 1 ) % radialSegments;\r\n\t\t\tvar jp = ( j + 1 ) % tubularSegments;\r\n\r\n\t\t\tvar a = grid[ i ][ j ];\r\n\t\t\tvar b = grid[ ip ][ j ];\r\n\t\t\tvar c = grid[ ip ][ jp ];\r\n\t\t\tvar d = grid[ i ][ jp ];\r\n\r\n\t\t\tvar uva = new THREE.Vector2( i / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvb = new THREE.Vector2( ( i + 1 ) / radialSegments, j / tubularSegments );\r\n\t\t\tvar uvc = new THREE.Vector2( ( i + 1 ) / radialSegments, ( j + 1 ) / tubularSegments );\r\n\t\t\tvar uvd = new THREE.Vector2( i / radialSegments, ( j + 1 ) / tubularSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n\tfunction getPos( u, in_q, in_p, radius, heightScale ) {\r\n\r\n\t\tvar cu = Math.cos( u );\r\n\t\tvar su = Math.sin( u );\r\n\t\tvar quOverP = in_q / in_p * u;\r\n\t\tvar cs = Math.cos( quOverP );\r\n\r\n\t\tvar tx = radius * ( 2 + cs ) * 0.5 * cu;\r\n\t\tvar ty = radius * ( 2 + cs ) * su * 0.5;\r\n\t\tvar tz = heightScale * radius * Math.sin( quOverP ) * 0.5;\r\n\r\n\t\treturn new THREE.Vector3( tx, ty, tz );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.TorusKnotGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TorusKnotGeometry.prototype.constructor = THREE.TorusKnotGeometry;\r\n\r\n// File:src/extras/geometries/TubeGeometry.js\r\n\r\n/**\r\n * @author WestLangley / https://github.com/WestLangley\r\n * @author zz85 / https://github.com/zz85\r\n * @author miningold / https://github.com/miningold\r\n * @author jonobr1 / https://github.com/jonobr1\r\n *\r\n * Modified from the TorusKnotGeometry by @oosmoxiecode\r\n *\r\n * Creates a tube which extrudes along a 3d spline\r\n *\r\n * Uses parallel transport frames as described in\r\n * http://www.cs.indiana.edu/pub/techreports/TR425.pdf\r\n */\r\n\r\nTHREE.TubeGeometry = function ( path, segments, radius, radialSegments, closed, taper ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'TubeGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tpath: path,\r\n\t\tsegments: segments,\r\n\t\tradius: radius,\r\n\t\tradialSegments: radialSegments,\r\n\t\tclosed: closed\r\n\t};\r\n\r\n\tsegments = segments || 64;\r\n\tradius = radius || 1;\r\n\tradialSegments = radialSegments || 8;\r\n\tclosed = closed || false;\r\n\ttaper = taper || THREE.TubeGeometry.NoTaper;\r\n\r\n\tvar grid = [];\r\n\r\n\tvar scope = this,\r\n\r\n\t\ttangent,\r\n\t\tnormal,\r\n\t\tbinormal,\r\n\r\n\t\tnumpoints = segments + 1,\r\n\r\n\t\tu, v, r,\r\n\r\n\t\tcx, cy,\r\n\t\tpos, pos2 = new THREE.Vector3(),\r\n\t\ti, j,\r\n\t\tip, jp,\r\n\t\ta, b, c, d,\r\n\t\tuva, uvb, uvc, uvd;\r\n\r\n\tvar frames = new THREE.TubeGeometry.FrenetFrames( path, segments, closed ),\r\n\t\ttangents = frames.tangents,\r\n\t\tnormals = frames.normals,\r\n\t\tbinormals = frames.binormals;\r\n\r\n\t// proxy internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\tfunction vert( x, y, z ) {\r\n\r\n\t\treturn scope.vertices.push( new THREE.Vector3( x, y, z ) ) - 1;\r\n\r\n\t}\r\n\r\n\t// consruct the grid\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tgrid[ i ] = [];\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\tpos = path.getPointAt( u );\r\n\r\n\t\ttangent = tangents[ i ];\r\n\t\tnormal = normals[ i ];\r\n\t\tbinormal = binormals[ i ];\r\n\r\n\t\tr = radius * taper( u );\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tv = j / radialSegments * 2 * Math.PI;\r\n\r\n\t\t\tcx = - r * Math.cos( v ); // TODO: Hack: Negating it so it faces outside.\r\n\t\t\tcy = r * Math.sin( v );\r\n\r\n\t\t\tpos2.copy( pos );\r\n\t\t\tpos2.x += cx * normal.x + cy * binormal.x;\r\n\t\t\tpos2.y += cx * normal.y + cy * binormal.y;\r\n\t\t\tpos2.z += cx * normal.z + cy * binormal.z;\r\n\r\n\t\t\tgrid[ i ][ j ] = vert( pos2.x, pos2.y, pos2.z );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\r\n\t// construct the mesh\r\n\r\n\tfor ( i = 0; i < segments; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < radialSegments; j ++ ) {\r\n\r\n\t\t\tip = ( closed ) ? (i + 1) % segments : i + 1;\r\n\t\t\tjp = (j + 1) % radialSegments;\r\n\r\n\t\t\ta = grid[ i ][ j ];\t\t// *** NOT NECESSARILY PLANAR ! ***\r\n\t\t\tb = grid[ ip ][ j ];\r\n\t\t\tc = grid[ ip ][ jp ];\r\n\t\t\td = grid[ i ][ jp ];\r\n\r\n\t\t\tuva = new THREE.Vector2( i / segments, j / radialSegments );\r\n\t\t\tuvb = new THREE.Vector2( ( i + 1 ) / segments, j / radialSegments );\r\n\t\t\tuvc = new THREE.Vector2( ( i + 1 ) / segments, ( j + 1 ) / radialSegments );\r\n\t\t\tuvd = new THREE.Vector2( i / segments, ( j + 1 ) / radialSegments );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tthis.faces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tthis.faceVertexUvs[ 0 ].push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TubeGeometry.prototype.constructor = THREE.TubeGeometry;\r\n\r\nTHREE.TubeGeometry.NoTaper = function ( u ) {\r\n\r\n\treturn 1;\r\n\r\n};\r\n\r\nTHREE.TubeGeometry.SinusoidalTaper = function ( u ) {\r\n\r\n\treturn Math.sin( Math.PI * u );\r\n\r\n};\r\n\r\n// For computing of Frenet frames, exposing the tangents, normals and binormals the spline\r\nTHREE.TubeGeometry.FrenetFrames = function ( path, segments, closed ) {\r\n\r\n\tvar\tnormal = new THREE.Vector3(),\r\n\r\n\t\ttangents = [],\r\n\t\tnormals = [],\r\n\t\tbinormals = [],\r\n\r\n\t\tvec = new THREE.Vector3(),\r\n\t\tmat = new THREE.Matrix4(),\r\n\r\n\t\tnumpoints = segments + 1,\r\n\t\ttheta,\r\n\t\tepsilon = 0.0001,\r\n\t\tsmallest,\r\n\r\n\t\ttx, ty, tz,\r\n\t\ti, u;\r\n\r\n\r\n\t// expose internals\r\n\tthis.tangents = tangents;\r\n\tthis.normals = normals;\r\n\tthis.binormals = binormals;\r\n\r\n\t// compute the tangent vectors for each segment on the path\r\n\r\n\tfor ( i = 0; i < numpoints; i ++ ) {\r\n\r\n\t\tu = i / ( numpoints - 1 );\r\n\r\n\t\ttangents[ i ] = path.getTangentAt( u );\r\n\t\ttangents[ i ].normalize();\r\n\r\n\t}\r\n\r\n\tinitialNormal3();\r\n\r\n\t/*\r\n\tfunction initialNormal1(lastBinormal) {\r\n\t\t// fixed start binormal. Has dangers of 0 vectors\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tif (lastBinormal===undefined) lastBinormal = new THREE.Vector3( 0, 0, 1 );\r\n\t\tnormals[ 0 ].crossVectors( lastBinormal, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\t}\r\n\r\n\tfunction initialNormal2() {\r\n\r\n\t\t// This uses the Frenet-Serret formula for deriving binormal\r\n\t\tvar t2 = path.getTangentAt( epsilon );\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3().subVectors( t2, tangents[ 0 ] ).normalize();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3().crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\r\n\t\tnormals[ 0 ].crossVectors( binormals[ 0 ], tangents[ 0 ] ).normalize(); // last binormal x tangent\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] ).normalize();\r\n\r\n\t}\r\n\t*/\r\n\r\n\tfunction initialNormal3() {\r\n\t\t// select an initial normal vector perpenicular to the first tangent vector,\r\n\t\t// and in the direction of the smallest tangent xyz component\r\n\r\n\t\tnormals[ 0 ] = new THREE.Vector3();\r\n\t\tbinormals[ 0 ] = new THREE.Vector3();\r\n\t\tsmallest = Number.MAX_VALUE;\r\n\t\ttx = Math.abs( tangents[ 0 ].x );\r\n\t\tty = Math.abs( tangents[ 0 ].y );\r\n\t\ttz = Math.abs( tangents[ 0 ].z );\r\n\r\n\t\tif ( tx <= smallest ) {\r\n\t\t\tsmallest = tx;\r\n\t\t\tnormal.set( 1, 0, 0 );\r\n\t\t}\r\n\r\n\t\tif ( ty <= smallest ) {\r\n\t\t\tsmallest = ty;\r\n\t\t\tnormal.set( 0, 1, 0 );\r\n\t\t}\r\n\r\n\t\tif ( tz <= smallest ) {\r\n\t\t\tnormal.set( 0, 0, 1 );\r\n\t\t}\r\n\r\n\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\r\n\r\n\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\r\n\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\r\n\t}\r\n\r\n\r\n\t// compute the slowly-varying normal and binormal vectors for each segment on the path\r\n\r\n\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\tnormals[ i ] = normals[ i - 1 ].clone();\r\n\r\n\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\r\n\r\n\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\r\n\r\n\t\tif ( vec.length() > epsilon ) {\r\n\r\n\t\t\tvec.normalize();\r\n\r\n\t\t\ttheta = Math.acos( THREE.Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\r\n\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\r\n\r\n\t\t}\r\n\r\n\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t}\r\n\r\n\r\n\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\r\n\r\n\tif ( closed ) {\r\n\r\n\t\ttheta = Math.acos( THREE.Math.clamp( normals[ 0 ].dot( normals[ numpoints - 1 ] ), - 1, 1 ) );\r\n\t\ttheta /= ( numpoints - 1 );\r\n\r\n\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ numpoints - 1 ] ) ) > 0 ) {\r\n\r\n\t\t\ttheta = - theta;\r\n\r\n\t\t}\r\n\r\n\t\tfor ( i = 1; i < numpoints; i ++ ) {\r\n\r\n\t\t\t// twist a little...\r\n\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\r\n\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n};\r\n\r\n// File:src/extras/geometries/PolyhedronGeometry.js\r\n\r\n/**\r\n * @author clockworkgeek / https://github.com/clockworkgeek\r\n * @author timothypratley / https://github.com/timothypratley\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.PolyhedronGeometry = function ( vertices, indices, radius, detail ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'PolyhedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tvertices: vertices,\r\n\t\tindices: indices,\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tradius = radius || 1;\r\n\tdetail = detail || 0;\r\n\r\n\tvar that = this;\r\n\r\n\tfor ( var i = 0, l = vertices.length; i < l; i += 3 ) {\r\n\r\n\t\tprepare( new THREE.Vector3( vertices[ i ], vertices[ i + 1 ], vertices[ i + 2 ] ) );\r\n\r\n\t}\r\n\r\n\tvar p = this.vertices;\r\n\r\n\tvar faces = [];\r\n\r\n\tfor ( var i = 0, j = 0, l = indices.length; i < l; i += 3, j ++ ) {\r\n\r\n\t\tvar v1 = p[ indices[ i     ] ];\r\n\t\tvar v2 = p[ indices[ i + 1 ] ];\r\n\t\tvar v3 = p[ indices[ i + 2 ] ];\r\n\r\n\t\tfaces[ j ] = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\r\n\t}\r\n\r\n\tvar centroid = new THREE.Vector3();\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tsubdivide( faces[ i ], detail );\r\n\r\n\t}\r\n\r\n\r\n\t// Handle case when face straddles the seam\r\n\r\n\tfor ( var i = 0, l = this.faceVertexUvs[ 0 ].length; i < l; i ++ ) {\r\n\r\n\t\tvar uvs = this.faceVertexUvs[ 0 ][ i ];\r\n\r\n\t\tvar x0 = uvs[ 0 ].x;\r\n\t\tvar x1 = uvs[ 1 ].x;\r\n\t\tvar x2 = uvs[ 2 ].x;\r\n\r\n\t\tvar max = Math.max( x0, Math.max( x1, x2 ) );\r\n\t\tvar min = Math.min( x0, Math.min( x1, x2 ) );\r\n\r\n\t\tif ( max > 0.9 && min < 0.1 ) { // 0.9 is somewhat arbitrary\r\n\r\n\t\t\tif ( x0 < 0.2 ) uvs[ 0 ].x += 1;\r\n\t\t\tif ( x1 < 0.2 ) uvs[ 1 ].x += 1;\r\n\t\t\tif ( x2 < 0.2 ) uvs[ 2 ].x += 1;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Apply radius\r\n\r\n\tfor ( var i = 0, l = this.vertices.length; i < l; i ++ ) {\r\n\r\n\t\tthis.vertices[ i ].multiplyScalar( radius );\r\n\r\n\t}\r\n\r\n\r\n\t// Merge vertices\r\n\r\n\tthis.mergeVertices();\r\n\r\n\tthis.computeFaceNormals();\r\n\r\n\tthis.boundingSphere = new THREE.Sphere( new THREE.Vector3(), radius );\r\n\r\n\r\n\t// Project vector onto sphere's surface\r\n\r\n\tfunction prepare( vector ) {\r\n\r\n\t\tvar vertex = vector.normalize().clone();\r\n\t\tvertex.index = that.vertices.push( vertex ) - 1;\r\n\r\n\t\t// Texture coords are equivalent to map coords, calculate angle and convert to fraction of a circle.\r\n\r\n\t\tvar u = azimuth( vector ) / 2 / Math.PI + 0.5;\r\n\t\tvar v = inclination( vector ) / Math.PI + 0.5;\r\n\t\tvertex.uv = new THREE.Vector2( u, 1 - v );\r\n\r\n\t\treturn vertex;\r\n\r\n\t}\r\n\r\n\r\n\t// Approximate a curved face with recursively sub-divided triangles.\r\n\r\n\tfunction make( v1, v2, v3 ) {\r\n\r\n\t\tvar face = new THREE.Face3( v1.index, v2.index, v3.index, [ v1.clone(), v2.clone(), v3.clone() ] );\r\n\t\tthat.faces.push( face );\r\n\r\n\t\tcentroid.copy( v1 ).add( v2 ).add( v3 ).divideScalar( 3 );\r\n\r\n\t\tvar azi = azimuth( centroid );\r\n\r\n\t\tthat.faceVertexUvs[ 0 ].push( [\r\n\t\t\tcorrectUV( v1.uv, v1, azi ),\r\n\t\t\tcorrectUV( v2.uv, v2, azi ),\r\n\t\t\tcorrectUV( v3.uv, v3, azi )\r\n\t\t] );\r\n\r\n\t}\r\n\r\n\r\n\t// Analytically subdivide a face to the required detail level.\r\n\r\n\tfunction subdivide( face, detail ) {\r\n\r\n\t\tvar cols = Math.pow(2, detail);\r\n\t\tvar a = prepare( that.vertices[ face.a ] );\r\n\t\tvar b = prepare( that.vertices[ face.b ] );\r\n\t\tvar c = prepare( that.vertices[ face.c ] );\r\n\t\tvar v = [];\r\n\r\n\t\t// Construct all of the vertices for this subdivision.\r\n\r\n\t\tfor ( var i = 0 ; i <= cols; i ++ ) {\r\n\r\n\t\t\tv[ i ] = [];\r\n\r\n\t\t\tvar aj = prepare( a.clone().lerp( c, i / cols ) );\r\n\t\t\tvar bj = prepare( b.clone().lerp( c, i / cols ) );\r\n\t\t\tvar rows = cols - i;\r\n\r\n\t\t\tfor ( var j = 0; j <= rows; j ++) {\r\n\r\n\t\t\t\tif ( j == 0 && i == cols ) {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = aj;\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tv[ i ][ j ] = prepare( aj.clone().lerp( bj, j / rows ) );\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\t// Construct all of the faces.\r\n\r\n\t\tfor ( var i = 0; i < cols ; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2 * (cols - i) - 1; j ++ ) {\r\n\r\n\t\t\t\tvar k = Math.floor( j / 2 );\r\n\r\n\t\t\t\tif ( j % 2 == 0 ) {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ],\r\n\t\t\t\t\t\tv[ i ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t} else {\r\n\r\n\t\t\t\t\tmake(\r\n\t\t\t\t\t\tv[ i ][ k + 1 ],\r\n\t\t\t\t\t\tv[ i + 1][ k + 1],\r\n\t\t\t\t\t\tv[ i + 1 ][ k ]\r\n\t\t\t\t\t);\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\r\n\t// Angle around the Y axis, counter-clockwise when looking from above.\r\n\r\n\tfunction azimuth( vector ) {\r\n\r\n\t\treturn Math.atan2( vector.z, - vector.x );\r\n\r\n\t}\r\n\r\n\r\n\t// Angle above the XZ plane.\r\n\r\n\tfunction inclination( vector ) {\r\n\r\n\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\r\n\r\n\t}\r\n\r\n\r\n\t// Texture fixing helper. Spheres have some odd behaviours.\r\n\r\n\tfunction correctUV( uv, vector, azimuth ) {\r\n\r\n\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) uv = new THREE.Vector2( uv.x - 1, uv.y );\r\n\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) uv = new THREE.Vector2( azimuth / 2 / Math.PI + 0.5, uv.y );\r\n\t\treturn uv.clone();\r\n\r\n\t}\r\n\r\n\r\n};\r\n\r\nTHREE.PolyhedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.PolyhedronGeometry.prototype.constructor = THREE.PolyhedronGeometry;\r\n\r\n// File:src/extras/geometries/DodecahedronGeometry.js\r\n\r\n/**\r\n * @author Abe Pazos / https://hamoid.com\r\n */\r\n\r\nTHREE.DodecahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\tvar r = 1 / t;\r\n\r\n\tvar vertices = [\r\n\r\n\t\t// (±1, ±1, ±1)\r\n\t\t-1, -1, -1,    -1, -1,  1,\r\n\t\t-1,  1, -1,    -1,  1,  1,\r\n\t\t 1, -1, -1,     1, -1,  1,\r\n\t\t 1,  1, -1,     1,  1,  1,\r\n\r\n\t\t// (0, ±1/φ, ±φ)\r\n\t\t 0, -r, -t,     0, -r,  t,\r\n\t\t 0,  r, -t,     0,  r,  t,\r\n\r\n\t\t// (±1/φ, ±φ, 0)\r\n\t\t-r, -t,  0,    -r,  t,  0,\r\n\t\t r, -t,  0,     r,  t,  0,\r\n\r\n\t\t// (±φ, 0, ±1/φ)\r\n\t\t-t,  0, -r,     t,  0, -r,\r\n\t\t-t,  0,  r,     t,  0,  r\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 3, 11,  7,      3,  7, 15,      3, 15, 13,\r\n\t\t 7, 19, 17,      7, 17,  6,      7,  6, 15,\r\n\t\t17,  4,  8,     17,  8, 10,     17, 10,  6,\r\n\t\t 8,  0, 16,      8, 16,  2,      8,  2, 10,\r\n\t\t 0, 12,  1,      0,  1, 18,      0, 18, 16,\r\n\t\t 6, 10,  2,      6,  2, 13,      6, 13, 15,\r\n\t\t 2, 16, 18,      2, 18,  3,      2,  3, 13,\r\n\t\t18,  1,  9,     18,  9, 11,     18, 11,  3,\r\n\t\t 4, 14, 12,      4, 12,  0,      4,  0,  8,\r\n\t\t11,  9,  5,     11,  5, 19,     11, 19,  7,\r\n\t\t19,  5, 14,     19, 14,  4,     19,  4, 17,\r\n\t\t 1, 12, 14,      1, 14,  5,      1,  5,  9\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n};\r\n\r\nTHREE.DodecahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.DodecahedronGeometry.prototype.constructor = THREE.DodecahedronGeometry;\r\n\r\n// File:src/extras/geometries/IcosahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.IcosahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\r\n\r\n\tvar vertices = [\r\n\t\t- 1,  t,  0,    1,  t,  0,   - 1, - t,  0,    1, - t,  0,\r\n\t\t 0, - 1,  t,    0,  1,  t,    0, - 1, - t,    0,  1, - t,\r\n\t\t t,  0, - 1,    t,  0,  1,   - t,  0, - 1,   - t,  0,  1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 0, 11,  5,    0,  5,  1,    0,  1,  7,    0,  7, 10,    0, 10, 11,\r\n\t\t 1,  5,  9,    5, 11,  4,   11, 10,  2,   10,  7,  6,    7,  1,  8,\r\n\t\t 3,  9,  4,    3,  4,  2,    3,  2,  6,    3,  6,  8,    3,  8,  9,\r\n\t\t 4,  9,  5,    2,  4, 11,    6,  2, 10,    8,  6,  7,    9,  8,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'IcosahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.IcosahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.IcosahedronGeometry.prototype.constructor = THREE.IcosahedronGeometry;\r\n\r\n// File:src/extras/geometries/OctahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.OctahedronGeometry = function ( radius, detail ) {\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n\tvar vertices = [\r\n\t\t1, 0, 0,   - 1, 0, 0,    0, 1, 0,    0,- 1, 0,    0, 0, 1,    0, 0,- 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t0, 2, 4,    0, 4, 3,    0, 3, 5,    0, 5, 2,    1, 2, 5,    1, 5, 3,    1, 3, 4,    1, 4, 2\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'OctahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n};\r\n\r\nTHREE.OctahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.OctahedronGeometry.prototype.constructor = THREE.OctahedronGeometry;\r\n\r\n// File:src/extras/geometries/TetrahedronGeometry.js\r\n\r\n/**\r\n * @author timothypratley / https://github.com/timothypratley\r\n */\r\n\r\nTHREE.TetrahedronGeometry = function ( radius, detail ) {\r\n\r\n\tvar vertices = [\r\n\t\t 1,  1,  1,   - 1, - 1,  1,   - 1,  1, - 1,    1, - 1, - 1\r\n\t];\r\n\r\n\tvar indices = [\r\n\t\t 2,  1,  0,    0,  3,  2,    1,  3,  0,    2,  3,  1\r\n\t];\r\n\r\n\tTHREE.PolyhedronGeometry.call( this, vertices, indices, radius, detail );\r\n\r\n\tthis.type = 'TetrahedronGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tradius: radius,\r\n\t\tdetail: detail\r\n\t};\r\n\r\n};\r\n\r\nTHREE.TetrahedronGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.TetrahedronGeometry.prototype.constructor = THREE.TetrahedronGeometry;\r\n\r\n// File:src/extras/geometries/ParametricGeometry.js\r\n\r\n/**\r\n * @author zz85 / https://github.com/zz85\r\n * Parametric Surfaces Geometry\r\n * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\r\n *\r\n * new THREE.ParametricGeometry( parametricFunction, uSegments, ySegements );\r\n *\r\n */\r\n\r\nTHREE.ParametricGeometry = function ( func, slices, stacks ) {\r\n\r\n\tTHREE.Geometry.call( this );\r\n\r\n\tthis.type = 'ParametricGeometry';\r\n\r\n\tthis.parameters = {\r\n\t\tfunc: func,\r\n\t\tslices: slices,\r\n\t\tstacks: stacks\r\n\t};\r\n\r\n\tvar verts = this.vertices;\r\n\tvar faces = this.faces;\r\n\tvar uvs = this.faceVertexUvs[ 0 ];\r\n\r\n\tvar i, j, p;\r\n\tvar u, v;\r\n\r\n\tvar sliceCount = slices + 1;\r\n\r\n\tfor ( i = 0; i <= stacks; i ++ ) {\r\n\r\n\t\tv = i / stacks;\r\n\r\n\t\tfor ( j = 0; j <= slices; j ++ ) {\r\n\r\n\t\t\tu = j / slices;\r\n\r\n\t\t\tp = func( u, v );\r\n\t\t\tverts.push( p );\r\n\r\n\t\t}\r\n\t}\r\n\r\n\tvar a, b, c, d;\r\n\tvar uva, uvb, uvc, uvd;\r\n\r\n\tfor ( i = 0; i < stacks; i ++ ) {\r\n\r\n\t\tfor ( j = 0; j < slices; j ++ ) {\r\n\r\n\t\t\ta = i * sliceCount + j;\r\n\t\t\tb = i * sliceCount + j + 1;\r\n\t\t\tc = (i + 1) * sliceCount + j + 1;\r\n\t\t\td = (i + 1) * sliceCount + j;\r\n\r\n\t\t\tuva = new THREE.Vector2( j / slices, i / stacks );\r\n\t\t\tuvb = new THREE.Vector2( ( j + 1 ) / slices, i / stacks );\r\n\t\t\tuvc = new THREE.Vector2( ( j + 1 ) / slices, ( i + 1 ) / stacks );\r\n\t\t\tuvd = new THREE.Vector2( j / slices, ( i + 1 ) / stacks );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( a, b, d ) );\r\n\t\t\tuvs.push( [ uva, uvb, uvd ] );\r\n\r\n\t\t\tfaces.push( new THREE.Face3( b, c, d ) );\r\n\t\t\tuvs.push( [ uvb.clone(), uvc, uvd.clone() ] );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\t// console.log(this);\r\n\r\n\t// magic bullet\r\n\t// var diff = this.mergeVertices();\r\n\t// console.log('removed ', diff, ' vertices by merging');\r\n\r\n\tthis.computeFaceNormals();\r\n\tthis.computeVertexNormals();\r\n\r\n};\r\n\r\nTHREE.ParametricGeometry.prototype = Object.create( THREE.Geometry.prototype );\r\nTHREE.ParametricGeometry.prototype.constructor = THREE.ParametricGeometry;\r\n\r\n// File:src/extras/helpers/AxisHelper.js\r\n\r\n/**\r\n * @author sroucheray / http://sroucheray.org/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.AxisHelper = function ( size ) {\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar vertices = new Float32Array( [\r\n\t\t0, 0, 0,  size, 0, 0,\r\n\t\t0, 0, 0,  0, size, 0,\r\n\t\t0, 0, 0,  0, 0, size\r\n\t] );\r\n\r\n\tvar colors = new Float32Array( [\r\n\t\t1, 0, 0,  1, 0.6, 0,\r\n\t\t0, 1, 0,  0.6, 1, 0,\r\n\t\t0, 0, 1,  0, 0.6, 1\r\n\t] );\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( vertices, 3 ) );\r\n\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.AxisHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.AxisHelper.prototype.constructor = THREE.AxisHelper;\r\n\r\n// File:src/extras/helpers/ArrowHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @author zz85 / http://github.com/zz85\r\n * @author bhouston / http://exocortex.com\r\n *\r\n * Creates an arrow for visualizing directions\r\n *\r\n * Parameters:\r\n *  dir - Vector3\r\n *  origin - Vector3\r\n *  length - Number\r\n *  color - color in hex value\r\n *  headLength - Number\r\n *  headWidth - Number\r\n */\r\n\r\nTHREE.ArrowHelper = ( function () {\r\n\r\n\tvar lineGeometry = new THREE.Geometry();\r\n\tlineGeometry.vertices.push( new THREE.Vector3( 0, 0, 0 ), new THREE.Vector3( 0, 1, 0 ) );\r\n\r\n\tvar coneGeometry = new THREE.CylinderGeometry( 0, 0.5, 1, 5, 1 );\r\n\tconeGeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\r\n\treturn function ( dir, origin, length, color, headLength, headWidth ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tTHREE.Object3D.call( this );\r\n\r\n\t\tif ( color === undefined ) color = 0xffff00;\r\n\t\tif ( length === undefined ) length = 1;\r\n\t\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\t\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\t\tthis.position.copy( origin );\r\n\r\n\t\tthis.line = new THREE.Line( lineGeometry, new THREE.LineBasicMaterial( { color: color } ) );\r\n\t\tthis.line.matrixAutoUpdate = false;\r\n\t\tthis.add( this.line );\r\n\r\n\t\tthis.cone = new THREE.Mesh( coneGeometry, new THREE.MeshBasicMaterial( { color: color } ) );\r\n\t\tthis.cone.matrixAutoUpdate = false;\r\n\t\tthis.add( this.cone );\r\n\r\n\t\tthis.setDirection( dir );\r\n\t\tthis.setLength( length, headLength, headWidth );\r\n\r\n\t}\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ArrowHelper.prototype.constructor = THREE.ArrowHelper;\r\n\r\nTHREE.ArrowHelper.prototype.setDirection = ( function () {\r\n\r\n\tvar axis = new THREE.Vector3();\r\n\tvar radians;\r\n\r\n\treturn function ( dir ) {\r\n\r\n\t\t// dir is assumed to be normalized\r\n\r\n\t\tif ( dir.y > 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\r\n\r\n\t\t} else if ( dir.y < - 0.99999 ) {\r\n\r\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\r\n\r\n\t\t} else {\r\n\r\n\t\t\taxis.set( dir.z, 0, - dir.x ).normalize();\r\n\r\n\t\t\tradians = Math.acos( dir.y );\r\n\r\n\t\t\tthis.quaternion.setFromAxisAngle( axis, radians );\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n}() );\r\n\r\nTHREE.ArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\r\n\r\n\tif ( headLength === undefined ) headLength = 0.2 * length;\r\n\tif ( headWidth === undefined ) headWidth = 0.2 * headLength;\r\n\r\n\tthis.line.scale.set( 1, length - headLength, 1 );\r\n\tthis.line.updateMatrix();\r\n\r\n\tthis.cone.scale.set( headWidth, headLength, headWidth );\r\n\tthis.cone.position.y = length;\r\n\tthis.cone.updateMatrix();\r\n\r\n};\r\n\r\nTHREE.ArrowHelper.prototype.setColor = function ( color ) {\r\n\r\n\tthis.line.material.color.set( color );\r\n\tthis.cone.material.color.set( color );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoxHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.BoxHelper = function ( object ) {\r\n\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( new Float32Array( 72 ), 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: 0xffff00 } ), THREE.LinePieces );\r\n\r\n\tif ( object !== undefined ) {\r\n\r\n\t\tthis.update( object );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.BoxHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.BoxHelper.prototype.constructor = THREE.BoxHelper;\r\n\r\nTHREE.BoxHelper.prototype.update = function ( object ) {\r\n\r\n\tvar geometry = object.geometry;\r\n\r\n\tif ( geometry.boundingBox === null ) {\r\n\r\n\t\tgeometry.computeBoundingBox();\r\n\r\n\t}\r\n\r\n\tvar min = geometry.boundingBox.min;\r\n\tvar max = geometry.boundingBox.max;\r\n\r\n\t/*\r\n\t  5____4\r\n\t1/___0/|\r\n\t| 6__|_7\r\n\t2/___3/\r\n\r\n\t0: max.x, max.y, max.z\r\n\t1: min.x, max.y, max.z\r\n\t2: min.x, min.y, max.z\r\n\t3: max.x, min.y, max.z\r\n\t4: max.x, max.y, min.z\r\n\t5: min.x, max.y, min.z\r\n\t6: min.x, min.y, min.z\r\n\t7: max.x, min.y, min.z\r\n\t*/\r\n\r\n\tvar vertices = this.geometry.attributes.position.array;\r\n\r\n\tvertices[  0 ] = max.x; vertices[  1 ] = max.y; vertices[  2 ] = max.z;\r\n\tvertices[  3 ] = min.x; vertices[  4 ] = max.y; vertices[  5 ] = max.z;\r\n\r\n\tvertices[  6 ] = min.x; vertices[  7 ] = max.y; vertices[  8 ] = max.z;\r\n\tvertices[  9 ] = min.x; vertices[ 10 ] = min.y; vertices[ 11 ] = max.z;\r\n\r\n\tvertices[ 12 ] = min.x; vertices[ 13 ] = min.y; vertices[ 14 ] = max.z;\r\n\tvertices[ 15 ] = max.x; vertices[ 16 ] = min.y; vertices[ 17 ] = max.z;\r\n\r\n\tvertices[ 18 ] = max.x; vertices[ 19 ] = min.y; vertices[ 20 ] = max.z;\r\n\tvertices[ 21 ] = max.x; vertices[ 22 ] = max.y; vertices[ 23 ] = max.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 24 ] = max.x; vertices[ 25 ] = max.y; vertices[ 26 ] = min.z;\r\n\tvertices[ 27 ] = min.x; vertices[ 28 ] = max.y; vertices[ 29 ] = min.z;\r\n\r\n\tvertices[ 30 ] = min.x; vertices[ 31 ] = max.y; vertices[ 32 ] = min.z;\r\n\tvertices[ 33 ] = min.x; vertices[ 34 ] = min.y; vertices[ 35 ] = min.z;\r\n\r\n\tvertices[ 36 ] = min.x; vertices[ 37 ] = min.y; vertices[ 38 ] = min.z;\r\n\tvertices[ 39 ] = max.x; vertices[ 40 ] = min.y; vertices[ 41 ] = min.z;\r\n\r\n\tvertices[ 42 ] = max.x; vertices[ 43 ] = min.y; vertices[ 44 ] = min.z;\r\n\tvertices[ 45 ] = max.x; vertices[ 46 ] = max.y; vertices[ 47 ] = min.z;\r\n\r\n\t//\r\n\r\n\tvertices[ 48 ] = max.x; vertices[ 49 ] = max.y; vertices[ 50 ] = max.z;\r\n\tvertices[ 51 ] = max.x; vertices[ 52 ] = max.y; vertices[ 53 ] = min.z;\r\n\r\n\tvertices[ 54 ] = min.x; vertices[ 55 ] = max.y; vertices[ 56 ] = max.z;\r\n\tvertices[ 57 ] = min.x; vertices[ 58 ] = max.y; vertices[ 59 ] = min.z;\r\n\r\n\tvertices[ 60 ] = min.x; vertices[ 61 ] = min.y; vertices[ 62 ] = max.z;\r\n\tvertices[ 63 ] = min.x; vertices[ 64 ] = min.y; vertices[ 65 ] = min.z;\r\n\r\n\tvertices[ 66 ] = max.x; vertices[ 67 ] = min.y; vertices[ 68 ] = max.z;\r\n\tvertices[ 69 ] = max.x; vertices[ 70 ] = min.y; vertices[ 71 ] = min.z;\r\n\r\n\tthis.geometry.attributes.position.needsUpdate = true;\r\n\r\n\tthis.geometry.computeBoundingSphere();\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\n// File:src/extras/helpers/BoundingBoxHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\n// a helper to show the world-axis-aligned bounding box for an object\r\n\r\nTHREE.BoundingBoxHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x888888;\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.box = new THREE.Box3();\r\n\r\n\tTHREE.Mesh.call( this, new THREE.BoxGeometry( 1, 1, 1 ), new THREE.MeshBasicMaterial( { color: color, wireframe: true } ) );\r\n\r\n};\r\n\r\nTHREE.BoundingBoxHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.BoundingBoxHelper.prototype.constructor = THREE.BoundingBoxHelper;\r\n\r\nTHREE.BoundingBoxHelper.prototype.update = function () {\r\n\r\n\tthis.box.setFromObject( this.object );\r\n\r\n\tthis.box.size( this.scale );\r\n\r\n\tthis.box.center( this.position );\r\n\r\n};\r\n\r\n// File:src/extras/helpers/CameraHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n *\r\n *\t- shows frustum, line of sight and up of the camera\r\n *\t- suitable for fast updates\r\n * \t- based on frustum visualization in lightgl.js shadowmap example\r\n *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\r\n */\r\n\r\nTHREE.CameraHelper = function ( camera ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { color: 0xffffff, vertexColors: THREE.FaceColors } );\r\n\r\n\tvar pointMap = {};\r\n\r\n\t// colors\r\n\r\n\tvar hexFrustum = 0xffaa00;\r\n\tvar hexCone = 0xff0000;\r\n\tvar hexUp = 0x00aaff;\r\n\tvar hexTarget = 0xffffff;\r\n\tvar hexCross = 0x333333;\r\n\r\n\t// near\r\n\r\n\taddLine( \"n1\", \"n2\", hexFrustum );\r\n\taddLine( \"n2\", \"n4\", hexFrustum );\r\n\taddLine( \"n4\", \"n3\", hexFrustum );\r\n\taddLine( \"n3\", \"n1\", hexFrustum );\r\n\r\n\t// far\r\n\r\n\taddLine( \"f1\", \"f2\", hexFrustum );\r\n\taddLine( \"f2\", \"f4\", hexFrustum );\r\n\taddLine( \"f4\", \"f3\", hexFrustum );\r\n\taddLine( \"f3\", \"f1\", hexFrustum );\r\n\r\n\t// sides\r\n\r\n\taddLine( \"n1\", \"f1\", hexFrustum );\r\n\taddLine( \"n2\", \"f2\", hexFrustum );\r\n\taddLine( \"n3\", \"f3\", hexFrustum );\r\n\taddLine( \"n4\", \"f4\", hexFrustum );\r\n\r\n\t// cone\r\n\r\n\taddLine( \"p\", \"n1\", hexCone );\r\n\taddLine( \"p\", \"n2\", hexCone );\r\n\taddLine( \"p\", \"n3\", hexCone );\r\n\taddLine( \"p\", \"n4\", hexCone );\r\n\r\n\t// up\r\n\r\n\taddLine( \"u1\", \"u2\", hexUp );\r\n\taddLine( \"u2\", \"u3\", hexUp );\r\n\taddLine( \"u3\", \"u1\", hexUp );\r\n\r\n\t// target\r\n\r\n\taddLine( \"c\", \"t\", hexTarget );\r\n\taddLine( \"p\", \"c\", hexCross );\r\n\r\n\t// cross\r\n\r\n\taddLine( \"cn1\", \"cn2\", hexCross );\r\n\taddLine( \"cn3\", \"cn4\", hexCross );\r\n\r\n\taddLine( \"cf1\", \"cf2\", hexCross );\r\n\taddLine( \"cf3\", \"cf4\", hexCross );\r\n\r\n\tfunction addLine( a, b, hex ) {\r\n\r\n\t\taddPoint( a, hex );\r\n\t\taddPoint( b, hex );\r\n\r\n\t}\r\n\r\n\tfunction addPoint( id, hex ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\tgeometry.colors.push( new THREE.Color( hex ) );\r\n\r\n\t\tif ( pointMap[ id ] === undefined ) {\r\n\r\n\t\t\tpointMap[ id ] = [];\r\n\r\n\t\t}\r\n\r\n\t\tpointMap[ id ].push( geometry.vertices.length - 1 );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.camera = camera;\r\n\tthis.matrix = camera.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.pointMap = pointMap;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.CameraHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.CameraHelper.prototype.constructor = THREE.CameraHelper;\r\n\r\nTHREE.CameraHelper.prototype.update = function () {\r\n\r\n\tvar geometry, pointMap;\r\n\t\r\n\tvar vector = new THREE.Vector3();\r\n\tvar camera = new THREE.Camera();\r\n\r\n\tvar setPoint = function ( point, x, y, z ) {\r\n\r\n\t\tvector.set( x, y, z ).unproject( camera );\r\n\r\n\t\tvar points = pointMap[ point ];\r\n\r\n\t\tif ( points !== undefined ) {\r\n\r\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\r\n\r\n\t\t\t\tgeometry.vertices[ points[ i ] ].copy( vector );\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t};\r\n\r\n\treturn function () {\r\n\r\n\t\tgeometry = this.geometry;\r\n\t\tpointMap = this.pointMap;\r\n\r\n\t\tvar w = 1, h = 1;\r\n\r\n\t\t// we need just camera projection matrix\r\n\t\t// world matrix must be identity\r\n\r\n\t\tcamera.projectionMatrix.copy( this.camera.projectionMatrix );\r\n\r\n\t\t// center / target\r\n\r\n\t\tsetPoint( \"c\", 0, 0, - 1 );\r\n\t\tsetPoint( \"t\", 0, 0,  1 );\r\n\r\n\t\t// near\r\n\r\n\t\tsetPoint( \"n1\", - w, - h, - 1 );\r\n\t\tsetPoint( \"n2\",   w, - h, - 1 );\r\n\t\tsetPoint( \"n3\", - w,   h, - 1 );\r\n\t\tsetPoint( \"n4\",   w,   h, - 1 );\r\n\r\n\t\t// far\r\n\r\n\t\tsetPoint( \"f1\", - w, - h, 1 );\r\n\t\tsetPoint( \"f2\",   w, - h, 1 );\r\n\t\tsetPoint( \"f3\", - w,   h, 1 );\r\n\t\tsetPoint( \"f4\",   w,   h, 1 );\r\n\r\n\t\t// up\r\n\r\n\t\tsetPoint( \"u1\",   w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u2\", - w * 0.7, h * 1.1, - 1 );\r\n\t\tsetPoint( \"u3\",         0, h * 2,   - 1 );\r\n\r\n\t\t// cross\r\n\r\n\t\tsetPoint( \"cf1\", - w,   0, 1 );\r\n\t\tsetPoint( \"cf2\",   w,   0, 1 );\r\n\t\tsetPoint( \"cf3\",   0, - h, 1 );\r\n\t\tsetPoint( \"cf4\",   0,   h, 1 );\r\n\r\n\t\tsetPoint( \"cn1\", - w,   0, - 1 );\r\n\t\tsetPoint( \"cn2\",   w,   0, - 1 );\r\n\t\tsetPoint( \"cn3\",   0, - h, - 1 );\r\n\t\tsetPoint( \"cn4\",   0,   h, - 1 );\r\n\r\n\t\tgeometry.verticesNeedUpdate = true;\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/DirectionalLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n */\r\n\r\nTHREE.DirectionalLightHelper = function ( light, size ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tsize = size || 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3( - size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size,   size, 0 ),\r\n\t\tnew THREE.Vector3(   size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size, - size, 0 ),\r\n\t\tnew THREE.Vector3( - size,   size, 0 )\r\n\t);\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.lightPlane = new THREE.Line( geometry, material );\r\n\tthis.add( this.lightPlane );\r\n\r\n\tgeometry = new THREE.Geometry();\r\n\tgeometry.vertices.push(\r\n\t\tnew THREE.Vector3(),\r\n\t\tnew THREE.Vector3()\r\n\t);\r\n\r\n\tmaterial = new THREE.LineBasicMaterial( { fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tthis.targetLine = new THREE.Line( geometry, material );\r\n\tthis.add( this.targetLine );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.DirectionalLightHelper.prototype.constructor = THREE.DirectionalLightHelper;\r\n\r\nTHREE.DirectionalLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.lightPlane.geometry.dispose();\r\n\tthis.lightPlane.material.dispose();\r\n\tthis.targetLine.geometry.dispose();\r\n\tthis.targetLine.material.dispose();\r\n};\r\n\r\nTHREE.DirectionalLightHelper.prototype.update = function () {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\tvar v2 = new THREE.Vector3();\r\n\tvar v3 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tv1.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tv2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\t\tv3.subVectors( v2, v1 );\r\n\r\n\t\tthis.lightPlane.lookAt( v3 );\r\n\t\tthis.lightPlane.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.targetLine.geometry.vertices[ 1 ].copy( v3 );\r\n\t\tthis.targetLine.geometry.verticesNeedUpdate = true;\r\n\t\tthis.targetLine.material.color.copy( this.lightPlane.material.color );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/EdgesHelper.js\r\n\r\n/**\r\n * @author WestLangley / http://github.com/WestLangley\r\n * @param object THREE.Mesh whose geometry will be used\r\n * @param hex line color\r\n * @param thresholdAngle the minimim angle (in degrees),\r\n * between the face normals of adjacent faces,\r\n * that is required to render an edge. A value of 10 means\r\n * an edge is only rendered if the angle is at least 10 degrees.\r\n */\r\n\r\nTHREE.EdgesHelper = function ( object, hex, thresholdAngle ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\r\n\r\n\tvar thresholdDot = Math.cos( THREE.Math.degToRad( thresholdAngle ) );\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tvar geometry2;\r\n\r\n\tif ( object.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tgeometry2 = new THREE.Geometry();\r\n\t\tgeometry2.fromBufferGeometry( object.geometry );\r\n\r\n\t} else {\r\n\r\n\t\tgeometry2 = object.geometry.clone();\r\n\r\n\t}\r\n\r\n\tgeometry2.mergeVertices();\r\n\tgeometry2.computeFaceNormals();\r\n\r\n\tvar vertices = geometry2.vertices;\r\n\tvar faces = geometry2.faces;\r\n\tvar numEdges = 0;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\tvar key = edge.toString();\r\n\r\n\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\thash[ key ] = { vert1: edge[ 0 ], vert2: edge[ 1 ], face1: i, face2: undefined };\r\n\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t} else {\r\n\r\n\t\t\t\thash[ key ].face2 = i;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\tvar index = 0;\r\n\r\n\tfor ( var key in hash ) {\r\n\r\n\t\tvar h = hash[ key ];\r\n\r\n\t\tif ( h.face2 === undefined || faces[ h.face1 ].normal.dot( faces[ h.face2 ].normal ) <= thresholdDot ) {\r\n\r\n\t\t\tvar vertex = vertices[ h.vert1 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t\tvertex = vertices[ h.vert2 ];\r\n\t\t\tcoords[ index ++ ] = vertex.x;\r\n\t\t\tcoords[ index ++ ] = vertex.y;\r\n\t\t\tcoords[ index ++ ] = vertex.z;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.EdgesHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.EdgesHelper.prototype.constructor = THREE.EdgesHelper;\r\n\r\n// File:src/extras/helpers/FaceNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.FaceNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = this.object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.FaceNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.FaceNormalsHelper.prototype.constructor = THREE.FaceNormalsHelper;\r\n\r\nTHREE.FaceNormalsHelper.prototype.update = function () {\r\n\r\n\tvar vertices = this.geometry.vertices;\r\n\r\n\tvar object = this.object;\r\n\tvar objectVertices = object.geometry.vertices;\r\n\tvar objectFaces = object.geometry.faces;\r\n\tvar objectWorldMatrix = object.matrixWorld;\r\n\r\n\tobject.updateMatrixWorld( true );\r\n\r\n\tthis.normalMatrix.getNormalMatrix( objectWorldMatrix );\r\n\r\n\tfor ( var i = 0, i2 = 0, l = objectFaces.length; i < l; i ++, i2 += 2 ) {\r\n\r\n\t\tvar face = objectFaces[ i ];\r\n\r\n\t\tvertices[ i2 ].copy( objectVertices[ face.a ] )\r\n\t\t\t.add( objectVertices[ face.b ] )\r\n\t\t\t.add( objectVertices[ face.c ] )\r\n\t\t\t.divideScalar( 3 )\r\n\t\t\t.applyMatrix4( objectWorldMatrix );\r\n\r\n\t\tvertices[ i2 + 1 ].copy( face.normal )\r\n\t\t\t.applyMatrix3( this.normalMatrix )\r\n\t\t\t.normalize()\r\n\t\t\t.multiplyScalar( this.size )\r\n\t\t\t.add( vertices[ i2 ] );\r\n\r\n\t}\r\n\r\n\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\treturn this;\r\n\r\n};\r\n\r\n\r\n// File:src/extras/helpers/GridHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.GridHelper = function ( size, step ) {\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors } );\r\n\r\n\tthis.color1 = new THREE.Color( 0x444444 );\r\n\tthis.color2 = new THREE.Color( 0x888888 );\r\n\r\n\tfor ( var i = - size; i <= size; i += step ) {\r\n\r\n\t\tgeometry.vertices.push(\r\n\t\t\tnew THREE.Vector3( - size, 0, i ), new THREE.Vector3( size, 0, i ),\r\n\t\t\tnew THREE.Vector3( i, 0, - size ), new THREE.Vector3( i, 0, size )\r\n\t\t);\r\n\r\n\t\tvar color = i === 0 ? this.color1 : this.color2;\r\n\r\n\t\tgeometry.colors.push( color, color, color, color );\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n};\r\n\r\nTHREE.GridHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.GridHelper.prototype.constructor = THREE.GridHelper;\r\n\r\nTHREE.GridHelper.prototype.setColors = function( colorCenterLine, colorGrid ) {\r\n\r\n\tthis.color1.set( colorCenterLine );\r\n\tthis.color2.set( colorGrid );\r\n\r\n\tthis.geometry.colorsNeedUpdate = true;\r\n\r\n}\r\n\r\n// File:src/extras/helpers/HemisphereLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.HemisphereLightHelper = function ( light, sphereSize ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.colors = [ new THREE.Color(), new THREE.Color() ];\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tfor ( var i = 0, il = 8; i < il; i ++ ) {\r\n\r\n\t\tgeometry.faces[ i ].color = this.colors[ i < 4 ? 0 : 1 ];\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { vertexColors: THREE.FaceColors, wireframe: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.lightSphere );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.HemisphereLightHelper.prototype.constructor = THREE.HemisphereLightHelper;\r\n\r\nTHREE.HemisphereLightHelper.prototype.dispose = function () {\r\n\tthis.lightSphere.geometry.dispose();\r\n\tthis.lightSphere.material.dispose();\r\n};\r\n\r\nTHREE.HemisphereLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tthis.colors[ 0 ].copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\t\tthis.colors[ 1 ].copy( this.light.groundColor ).multiplyScalar( this.light.intensity );\r\n\r\n\t\tthis.lightSphere.lookAt( vector.setFromMatrixPosition( this.light.matrixWorld ).negate() );\r\n\t\tthis.lightSphere.geometry.colorsNeedUpdate = true;\r\n\r\n\t}\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/PointLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.PointLightHelper = function ( light, sphereSize ) {\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tvar geometry = new THREE.SphereGeometry( sphereSize, 4, 2 );\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\tmaterial.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.matrix = this.light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\t/*\r\n\tvar distanceGeometry = new THREE.IcosahedronGeometry( 1, 2 );\r\n\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\r\n\r\n\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\r\n\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\r\n\r\n\tvar d = light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\r\n\tthis.add( this.lightDistance );\r\n\t*/\r\n\r\n};\r\n\r\nTHREE.PointLightHelper.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.PointLightHelper.prototype.constructor = THREE.PointLightHelper;\r\n\r\nTHREE.PointLightHelper.prototype.dispose = function () {\r\n\r\n\tthis.geometry.dispose();\r\n\tthis.material.dispose();\r\n};\r\n\r\nTHREE.PointLightHelper.prototype.update = function () {\r\n\r\n\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t/*\r\n\tvar d = this.light.distance;\r\n\r\n\tif ( d === 0.0 ) {\r\n\r\n\t\tthis.lightDistance.visible = false;\r\n\r\n\t} else {\r\n\r\n\t\tthis.lightDistance.visible = true;\r\n\t\tthis.lightDistance.scale.set( d, d, d );\r\n\r\n\t}\r\n\t*/\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SkeletonHelper.js\r\n\r\n/**\r\n * @author Sean Griffin / http://twitter.com/sgrif\r\n * @author Michael Guerrero / http://realitymeltdown.com\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author ikerr / http://verold.com\r\n */\r\n\r\nTHREE.SkeletonHelper = function ( object ) {\r\n\r\n\tthis.bones = this.getBoneList( object );\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 0, 1 ) );\r\n\t\t\tgeometry.colors.push( new THREE.Color( 0, 1, 0 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tvar material = new THREE.LineBasicMaterial( { vertexColors: THREE.VertexColors, depthTest: false, depthWrite: false, transparent: true } );\r\n\r\n\tTHREE.Line.call( this, geometry, material, THREE.LinePieces );\r\n\r\n\tthis.root = object;\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\n\r\nTHREE.SkeletonHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.SkeletonHelper.prototype.constructor = THREE.SkeletonHelper;\r\n\r\nTHREE.SkeletonHelper.prototype.getBoneList = function( object ) {\r\n\r\n\tvar boneList = [];\r\n\r\n\tif ( object instanceof THREE.Bone ) {\r\n\r\n\t\tboneList.push( object );\r\n\r\n\t}\r\n\r\n\tfor ( var i = 0; i < object.children.length; i ++ ) {\r\n\r\n\t\tboneList.push.apply( boneList, this.getBoneList( object.children[ i ] ) );\r\n\r\n\t}\r\n\r\n\treturn boneList;\r\n\r\n};\r\n\r\nTHREE.SkeletonHelper.prototype.update = function () {\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tvar matrixWorldInv = new THREE.Matrix4().getInverse( this.root.matrixWorld );\r\n\r\n\tvar boneMatrix = new THREE.Matrix4();\r\n\r\n\tvar j = 0;\r\n\r\n\tfor ( var i = 0; i < this.bones.length; i ++ ) {\r\n\r\n\t\tvar bone = this.bones[ i ];\r\n\r\n\t\tif ( bone.parent instanceof THREE.Bone ) {\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.matrixWorld );\r\n\t\t\tgeometry.vertices[ j ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tboneMatrix.multiplyMatrices( matrixWorldInv, bone.parent.matrixWorld );\r\n\t\t\tgeometry.vertices[ j + 1 ].setFromMatrixPosition( boneMatrix );\r\n\r\n\t\t\tj += 2;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tgeometry.verticesNeedUpdate = true;\r\n\r\n\tgeometry.computeBoundingSphere();\r\n\r\n};\r\n\r\n// File:src/extras/helpers/SpotLightHelper.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.SpotLightHelper = function ( light ) {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.light = light;\r\n\tthis.light.updateMatrixWorld();\r\n\r\n\tthis.matrix = light.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tvar geometry = new THREE.CylinderGeometry( 0, 1, 1, 8, 1, true );\r\n\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeTranslation( 0, - 0.5, 0 ) );\r\n\tgeometry.applyMatrix( new THREE.Matrix4().makeRotationX( - Math.PI / 2 ) );\r\n\r\n\tvar material = new THREE.MeshBasicMaterial( { wireframe: true, fog: false } );\r\n\r\n\tthis.cone = new THREE.Mesh( geometry, material );\r\n\tthis.add( this.cone );\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.SpotLightHelper.prototype.constructor = THREE.SpotLightHelper;\r\n\r\nTHREE.SpotLightHelper.prototype.dispose = function () {\r\n\tthis.cone.geometry.dispose();\r\n\tthis.cone.material.dispose();\r\n};\r\n\r\nTHREE.SpotLightHelper.prototype.update = function () {\r\n\r\n\tvar vector = new THREE.Vector3();\r\n\tvar vector2 = new THREE.Vector3();\r\n\r\n\treturn function () {\r\n\r\n\t\tvar coneLength = this.light.distance ? this.light.distance : 10000;\r\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\r\n\r\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\r\n\r\n\t\tvector.setFromMatrixPosition( this.light.matrixWorld );\r\n\t\tvector2.setFromMatrixPosition( this.light.target.matrixWorld );\r\n\r\n\t\tthis.cone.lookAt( vector2.sub( vector ) );\r\n\r\n\t\tthis.cone.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\r\n\r\n\t};\r\n\r\n}();\r\n\r\n// File:src/extras/helpers/VertexNormalsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexNormalsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3(), new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.normalMatrix = new THREE.Matrix3();\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexNormalsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexNormalsHelper.prototype.constructor = THREE.VertexNormalsHelper;\r\n\r\nTHREE.VertexNormalsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tthis.normalMatrix.getNormalMatrix( this.object.matrixWorld );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar normal = face.vertexNormals[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( normal ).applyMatrix3( this.normalMatrix ).normalize().multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/VertexTangentsHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n * @author WestLangley / http://github.com/WestLangley\r\n*/\r\n\r\nTHREE.VertexTangentsHelper = function ( object, size, hex, linewidth ) {\r\n\r\n\tthis.object = object;\r\n\r\n\tthis.size = ( size !== undefined ) ? size : 1;\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0x0000ff;\r\n\r\n\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\r\n\r\n\tvar geometry = new THREE.Geometry();\r\n\r\n\tvar faces = object.geometry.faces;\r\n\r\n\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\tvar face = faces[ i ];\r\n\r\n\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\t\t\tgeometry.vertices.push( new THREE.Vector3() );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color, linewidth: width } ), THREE.LinePieces );\r\n\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n\tthis.update();\r\n\r\n};\r\n\r\nTHREE.VertexTangentsHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.VertexTangentsHelper.prototype.constructor = THREE.VertexTangentsHelper;\r\n\r\nTHREE.VertexTangentsHelper.prototype.update = ( function ( object ) {\r\n\r\n\tvar v1 = new THREE.Vector3();\r\n\r\n\treturn function( object ) {\r\n\r\n\t\tvar keys = [ 'a', 'b', 'c', 'd' ];\r\n\r\n\t\tthis.object.updateMatrixWorld( true );\r\n\r\n\t\tvar vertices = this.geometry.vertices;\r\n\r\n\t\tvar verts = this.object.geometry.vertices;\r\n\r\n\t\tvar faces = this.object.geometry.faces;\r\n\r\n\t\tvar worldMatrix = this.object.matrixWorld;\r\n\r\n\t\tvar idx = 0;\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0, jl = face.vertexTangents.length; j < jl; j ++ ) {\r\n\r\n\t\t\t\tvar vertexId = face[ keys[ j ] ];\r\n\t\t\t\tvar vertex = verts[ vertexId ];\r\n\r\n\t\t\t\tvar tangent = face.vertexTangents[ j ];\r\n\r\n\t\t\t\tvertices[ idx ].copy( vertex ).applyMatrix4( worldMatrix );\r\n\r\n\t\t\t\tv1.copy( tangent ).transformDirection( worldMatrix ).multiplyScalar( this.size );\r\n\r\n\t\t\t\tv1.add( vertices[ idx ] );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t\tvertices[ idx ].copy( v1 );\r\n\t\t\t\tidx = idx + 1;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tthis.geometry.verticesNeedUpdate = true;\r\n\r\n\t\treturn this;\r\n\r\n\t}\r\n\r\n}());\r\n\r\n// File:src/extras/helpers/WireframeHelper.js\r\n\r\n/**\r\n * @author mrdoob / http://mrdoob.com/\r\n */\r\n\r\nTHREE.WireframeHelper = function ( object, hex ) {\r\n\r\n\tvar color = ( hex !== undefined ) ? hex : 0xffffff;\r\n\r\n\tvar edge = [ 0, 0 ], hash = {};\r\n\tvar sortFunction = function ( a, b ) { return a - b };\r\n\r\n\tvar keys = [ 'a', 'b', 'c' ];\r\n\tvar geometry = new THREE.BufferGeometry();\r\n\r\n\tif ( object.geometry instanceof THREE.Geometry ) {\r\n\r\n\t\tvar vertices = object.geometry.vertices;\r\n\t\tvar faces = object.geometry.faces;\r\n\t\tvar numEdges = 0;\r\n\r\n\t\t// allocate maximal size\r\n\t\tvar edges = new Uint32Array( 6 * faces.length );\r\n\r\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\r\n\r\n\t\t\tvar face = faces[ i ];\r\n\r\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\tedge[ 0 ] = face[ keys[ j ] ];\r\n\t\t\t\tedge[ 1 ] = face[ keys[ ( j + 1 ) % 3 ] ];\r\n\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\tvar vertex = vertices[ edges [ 2 * i + j] ];\r\n\r\n\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\tcoords[ index + 0 ] = vertex.x;\r\n\t\t\t\tcoords[ index + 1 ] = vertex.y;\r\n\t\t\t\tcoords[ index + 2 ] = vertex.z;\r\n\r\n\t\t\t}\r\n\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t} else if ( object.geometry instanceof THREE.BufferGeometry ) {\r\n\r\n\t\tif ( object.geometry.attributes.index !== undefined ) { // Indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar indices = object.geometry.attributes.index.array;\r\n\t\t\tvar drawcalls = object.geometry.drawcalls;\r\n\t\t\tvar numEdges = 0;\r\n\r\n\t\t\tif ( drawcalls.length === 0 ) {\r\n\r\n\t\t\t\tdrawcalls = [ { count : indices.length, index : 0, start : 0 } ];\r\n\r\n\t\t\t}\r\n\r\n\t\t\t// allocate maximal size\r\n\t\t\tvar edges = new Uint32Array( 2 * indices.length );\r\n\r\n\t\t\tfor ( var o = 0, ol = drawcalls.length; o < ol; ++ o ) {\r\n\r\n\t\t\t\tvar start = drawcalls[ o ].start;\r\n\t\t\t\tvar count = drawcalls[ o ].count;\r\n\t\t\t\tvar index = drawcalls[ o ].index;\r\n\r\n\t\t\t\tfor ( var i = start, il = start + count; i < il; i += 3 ) {\r\n\r\n\t\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\t\tedge[ 0 ] = index + indices[ i + j ];\r\n\t\t\t\t\t\tedge[ 1 ] = index + indices[ i + ( j + 1 ) % 3 ];\r\n\t\t\t\t\t\tedge.sort( sortFunction );\r\n\r\n\t\t\t\t\t\tvar key = edge.toString();\r\n\r\n\t\t\t\t\t\tif ( hash[ key ] === undefined ) {\r\n\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges ] = edge[ 0 ];\r\n\t\t\t\t\t\t\tedges[ 2 * numEdges + 1 ] = edge[ 1 ];\r\n\t\t\t\t\t\t\thash[ key ] = true;\r\n\t\t\t\t\t\t\tnumEdges ++;\r\n\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numEdges; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 2; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 6 * i + 3 * j;\r\n\t\t\t\t\tvar index2 = 3 * edges[ 2 * i + j];\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t} else { // non-indexed BufferGeometry\r\n\r\n\t\t\tvar vertices = object.geometry.attributes.position.array;\r\n\t\t\tvar numEdges = vertices.length / 3;\r\n\t\t\tvar numTris = numEdges / 3;\r\n\r\n\t\t\tvar coords = new Float32Array( numEdges * 2 * 3 );\r\n\r\n\t\t\tfor ( var i = 0, l = numTris; i < l; i ++ ) {\r\n\r\n\t\t\t\tfor ( var j = 0; j < 3; j ++ ) {\r\n\r\n\t\t\t\t\tvar index = 18 * i + 6 * j;\r\n\r\n\t\t\t\t\tvar index1 = 9 * i + 3 * j;\r\n\t\t\t\t\tcoords[ index + 0 ] = vertices[ index1 ];\r\n\t\t\t\t\tcoords[ index + 1 ] = vertices[ index1 + 1 ];\r\n\t\t\t\t\tcoords[ index + 2 ] = vertices[ index1 + 2 ];\r\n\r\n\t\t\t\t\tvar index2 = 9 * i + 3 * ( ( j + 1 ) % 3 );\r\n\t\t\t\t\tcoords[ index + 3 ] = vertices[ index2 ];\r\n\t\t\t\t\tcoords[ index + 4 ] = vertices[ index2 + 1 ];\r\n\t\t\t\t\tcoords[ index + 5 ] = vertices[ index2 + 2 ];\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( coords, 3 ) );\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tTHREE.Line.call( this, geometry, new THREE.LineBasicMaterial( { color: color } ), THREE.LinePieces );\r\n\r\n\tthis.matrix = object.matrixWorld;\r\n\tthis.matrixAutoUpdate = false;\r\n\r\n};\r\n\r\nTHREE.WireframeHelper.prototype = Object.create( THREE.Line.prototype );\r\nTHREE.WireframeHelper.prototype.constructor = THREE.WireframeHelper;\r\n\r\n// File:src/extras/objects/ImmediateRenderObject.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.ImmediateRenderObject = function () {\r\n\r\n\tTHREE.Object3D.call( this );\r\n\r\n\tthis.render = function ( renderCallback ) {};\r\n\r\n};\r\n\r\nTHREE.ImmediateRenderObject.prototype = Object.create( THREE.Object3D.prototype );\r\nTHREE.ImmediateRenderObject.prototype.constructor = THREE.ImmediateRenderObject;\r\n\r\n// File:src/extras/objects/MorphBlendMesh.js\r\n\r\n/**\r\n * @author alteredq / http://alteredqualia.com/\r\n */\r\n\r\nTHREE.MorphBlendMesh = function( geometry, material ) {\r\n\r\n\tTHREE.Mesh.call( this, geometry, material );\r\n\r\n\tthis.animationsMap = {};\r\n\tthis.animationsList = [];\r\n\r\n\t// prepare default animation\r\n\t// (all frames played together in 1 second)\r\n\r\n\tvar numFrames = this.geometry.morphTargets.length;\r\n\r\n\tvar name = \"__default\";\r\n\r\n\tvar startFrame = 0;\r\n\tvar endFrame = numFrames - 1;\r\n\r\n\tvar fps = numFrames / 1;\r\n\r\n\tthis.createAnimation( name, startFrame, endFrame, fps );\r\n\tthis.setAnimationWeight( name, 1 );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype = Object.create( THREE.Mesh.prototype );\r\nTHREE.MorphBlendMesh.prototype.constructor = THREE.MorphBlendMesh;\r\n\r\nTHREE.MorphBlendMesh.prototype.createAnimation = function ( name, start, end, fps ) {\r\n\r\n\tvar animation = {\r\n\r\n\t\tstartFrame: start,\r\n\t\tendFrame: end,\r\n\r\n\t\tlength: end - start + 1,\r\n\r\n\t\tfps: fps,\r\n\t\tduration: ( end - start ) / fps,\r\n\r\n\t\tlastFrame: 0,\r\n\t\tcurrentFrame: 0,\r\n\r\n\t\tactive: false,\r\n\r\n\t\ttime: 0,\r\n\t\tdirection: 1,\r\n\t\tweight: 1,\r\n\r\n\t\tdirectionBackwards: false,\r\n\t\tmirroredLoop: false\r\n\r\n\t};\r\n\r\n\tthis.animationsMap[ name ] = animation;\r\n\tthis.animationsList.push( animation );\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.autoCreateAnimations = function ( fps ) {\r\n\r\n\tvar pattern = /([a-z]+)_?(\\d+)/;\r\n\r\n\tvar firstAnimation, frameRanges = {};\r\n\r\n\tvar geometry = this.geometry;\r\n\r\n\tfor ( var i = 0, il = geometry.morphTargets.length; i < il; i ++ ) {\r\n\r\n\t\tvar morph = geometry.morphTargets[ i ];\r\n\t\tvar chunks = morph.name.match( pattern );\r\n\r\n\t\tif ( chunks && chunks.length > 1 ) {\r\n\r\n\t\t\tvar name = chunks[ 1 ];\r\n\r\n\t\t\tif ( ! frameRanges[ name ] ) frameRanges[ name ] = { start: Infinity, end: - Infinity };\r\n\r\n\t\t\tvar range = frameRanges[ name ];\r\n\r\n\t\t\tif ( i < range.start ) range.start = i;\r\n\t\t\tif ( i > range.end ) range.end = i;\r\n\r\n\t\t\tif ( ! firstAnimation ) firstAnimation = name;\r\n\r\n\t\t}\r\n\r\n\t}\r\n\r\n\tfor ( var name in frameRanges ) {\r\n\r\n\t\tvar range = frameRanges[ name ];\r\n\t\tthis.createAnimation( name, range.start, range.end, fps );\r\n\r\n\t}\r\n\r\n\tthis.firstAnimation = firstAnimation;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionForward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = 1;\r\n\t\tanimation.directionBackwards = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDirectionBackward = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.direction = - 1;\r\n\t\tanimation.directionBackwards = true;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationFPS = function ( name, fps ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.fps = fps;\r\n\t\tanimation.duration = ( animation.end - animation.start ) / animation.fps;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationDuration = function ( name, duration ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.duration = duration;\r\n\t\tanimation.fps = ( animation.end - animation.start ) / animation.duration;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationWeight = function ( name, weight ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.weight = weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.setAnimationTime = function ( name, time ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = time;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationTime = function ( name ) {\r\n\r\n\tvar time = 0;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\ttime = animation.time;\r\n\r\n\t}\r\n\r\n\treturn time;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.getAnimationDuration = function ( name ) {\r\n\r\n\tvar duration = - 1;\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tduration = animation.duration;\r\n\r\n\t}\r\n\r\n\treturn duration;\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.playAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.time = 0;\r\n\t\tanimation.active = true;\r\n\r\n\t} else {\r\n\r\n\t\tTHREE.warn( \"THREE.MorphBlendMesh: animation[\" + name + \"] undefined in .playAnimation()\" );\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.stopAnimation = function ( name ) {\r\n\r\n\tvar animation = this.animationsMap[ name ];\r\n\r\n\tif ( animation ) {\r\n\r\n\t\tanimation.active = false;\r\n\r\n\t}\r\n\r\n};\r\n\r\nTHREE.MorphBlendMesh.prototype.update = function ( delta ) {\r\n\r\n\tfor ( var i = 0, il = this.animationsList.length; i < il; i ++ ) {\r\n\r\n\t\tvar animation = this.animationsList[ i ];\r\n\r\n\t\tif ( ! animation.active ) continue;\r\n\r\n\t\tvar frameTime = animation.duration / animation.length;\r\n\r\n\t\tanimation.time += animation.direction * delta;\r\n\r\n\t\tif ( animation.mirroredLoop ) {\r\n\r\n\t\t\tif ( animation.time > animation.duration || animation.time < 0 ) {\r\n\r\n\t\t\t\tanimation.direction *= - 1;\r\n\r\n\t\t\t\tif ( animation.time > animation.duration ) {\r\n\r\n\t\t\t\t\tanimation.time = animation.duration;\r\n\t\t\t\t\tanimation.directionBackwards = true;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t\tif ( animation.time < 0 ) {\r\n\r\n\t\t\t\t\tanimation.time = 0;\r\n\t\t\t\t\tanimation.directionBackwards = false;\r\n\r\n\t\t\t\t}\r\n\r\n\t\t\t}\r\n\r\n\t\t} else {\r\n\r\n\t\t\tanimation.time = animation.time % animation.duration;\r\n\r\n\t\t\tif ( animation.time < 0 ) animation.time += animation.duration;\r\n\r\n\t\t}\r\n\r\n\t\tvar keyframe = animation.startFrame + THREE.Math.clamp( Math.floor( animation.time / frameTime ), 0, animation.length - 1 );\r\n\t\tvar weight = animation.weight;\r\n\r\n\t\tif ( keyframe !== animation.currentFrame ) {\r\n\r\n\t\t\tthis.morphTargetInfluences[ animation.lastFrame ] = 0;\r\n\t\t\tthis.morphTargetInfluences[ animation.currentFrame ] = 1 * weight;\r\n\r\n\t\t\tthis.morphTargetInfluences[ keyframe ] = 0;\r\n\r\n\t\t\tanimation.lastFrame = animation.currentFrame;\r\n\t\t\tanimation.currentFrame = keyframe;\r\n\r\n\t\t}\r\n\r\n\t\tvar mix = ( animation.time % frameTime ) / frameTime;\r\n\r\n\t\tif ( animation.directionBackwards ) mix = 1 - mix;\r\n\r\n\t\tthis.morphTargetInfluences[ animation.currentFrame ] = mix * weight;\r\n\t\tthis.morphTargetInfluences[ animation.lastFrame ] = ( 1 - mix ) * weight;\r\n\r\n\t}\r\n\r\n};\r\n\r\n\r\n// Export the THREE object for **Node.js**, with\r\n// backwards-compatibility for the old `require()` API. If we're in\r\n// the browser, add `_` as a global object via a string identifier,\r\n// for Closure Compiler \"advanced\" mode.\r\nif (typeof exports !== 'undefined') {\r\n  if (typeof module !== 'undefined' && module.exports) {\r\n    exports = module.exports = THREE;\r\n  }\r\n  exports.THREE = THREE;\r\n} else {\r\n  this['THREE'] = THREE;\r\n}\r\n","/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n/*global THREE, console */\n\n// This set of controls performs orbiting, dollying (zooming), and panning. It maintains\n// the \"up\" direction as +Y, unlike the TrackballControls. Touch on tablet and phones is\n// supported.\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n//\n// This is a drop-in replacement for (most) TrackballControls used in examples.\n// That is, include this js file and wherever you see:\n//    \tcontrols = new THREE.TrackballControls( camera );\n//      controls.target.z = 150;\n// Simple substitute \"OrbitControls\" and the control should work as-is.\n\nimport THREE from 'three';\n\nTHREE.OrbitControls = function ( object, domElement ) {\n\n\tthis.object = object;\n\tthis.domElement = ( domElement !== undefined ) ? domElement : document;\n\n\t// API\n\n\t// Set to false to disable this control\n\tthis.enabled = true;\n\n\t// \"target\" sets the location of focus, where the control orbits around\n\t// and where it pans with respect to.\n\tthis.target = new THREE.Vector3();\n\t// center is old, deprecated; use \"target\" instead\n\tthis.center = this.target;\n\n\t// This option actually enables dollying in and out; left as \"zoom\" for\n\t// backwards compatibility\n\tthis.noZoom = false;\n\tthis.zoomSpeed = 1.0;\n\t// Limits to how far you can dolly in and out\n\tthis.minDistance = 0;\n\tthis.maxDistance = Infinity;\n\n\t// Set to true to disable this control\n\tthis.noRotate = false;\n\tthis.rotateSpeed = 1.0;\n\n\t// Set to true to disable this control\n\tthis.noPan = false;\n\tthis.keyPanSpeed = 7.0;\t// pixels moved per arrow key push\n\n\t// Set to true to automatically rotate around the target\n\tthis.autoRotate = false;\n\tthis.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n\t// How far you can orbit vertically, upper and lower limits.\n\t// Range is 0 to Math.PI radians.\n\tthis.minPolarAngle = 0; // radians\n\tthis.maxPolarAngle = Math.PI; // radians\n\n\t// Set to true to disable use of the keys\n\tthis.noKeys = false;\n\t// The four arrow keys\n\tthis.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n\t////////////\n\t// internals\n\n\tvar scope = this;\n\n\tvar EPS = 0.000001;\n\n\tvar rotateStart = new THREE.Vector2();\n\tvar rotateEnd = new THREE.Vector2();\n\tvar rotateDelta = new THREE.Vector2();\n\n\tvar panStart = new THREE.Vector2();\n\tvar panEnd = new THREE.Vector2();\n\tvar panDelta = new THREE.Vector2();\n\n\tvar dollyStart = new THREE.Vector2();\n\tvar dollyEnd = new THREE.Vector2();\n\tvar dollyDelta = new THREE.Vector2();\n\n\tvar phiDelta = 0;\n\tvar thetaDelta = 0;\n\tvar scale = 1;\n\tvar pan = new THREE.Vector3();\n\n\tvar lastPosition = new THREE.Vector3();\n\n\tvar STATE = { NONE : -1, ROTATE : 0, DOLLY : 1, PAN : 2, TOUCH_ROTATE : 3, TOUCH_DOLLY : 4, TOUCH_PAN : 5 };\n\tvar state = STATE.NONE;\n\n\t// events\n\n\tvar changeEvent = { type: 'change' };\n\n\n\tthis.rotateLeft = function ( angle ) {\n\n\t\tif ( angle === undefined ) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tthetaDelta -= angle;\n\n\t};\n\n\tthis.rotateUp = function ( angle ) {\n\n\t\tif ( angle === undefined ) {\n\n\t\t\tangle = getAutoRotationAngle();\n\n\t\t}\n\n\t\tphiDelta -= angle;\n\n\t};\n\n\t// pass in distance in world space to move left\n\tthis.panLeft = function ( distance ) {\n\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar te = this.object.matrix.elements;\n\t\t// get X column of matrix\n\t\tpanOffset.set( te[0], te[1], te[2] );\n\t\tpanOffset.multiplyScalar(-distance);\n\t\t\n\t\tpan.add( panOffset );\n\n\t};\n\n\t// pass in distance in world space to move up\n\tthis.panUp = function ( distance ) {\n\n\t\tvar panOffset = new THREE.Vector3();\n\t\tvar te = this.object.matrix.elements;\n\t\t// get Y column of matrix\n\t\tpanOffset.set( te[4], te[5], te[6] );\n\t\tpanOffset.multiplyScalar(distance);\n\t\t\n\t\tpan.add( panOffset );\n\t};\n\t\n\t// main entry point; pass in Vector2 of change desired in pixel space,\n\t// right and down are positive\n\tthis.pan = function ( delta ) {\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif ( scope.object.fov !== undefined ) {\n\n\t\t\t// perspective\n\t\t\tvar position = scope.object.position;\n\t\t\tvar offset = position.clone().sub( scope.target );\n\t\t\tvar targetDistance = offset.length();\n\n\t\t\t// half of the fov is center to top of screen\n\t\t\ttargetDistance *= Math.tan( (scope.object.fov/2) * Math.PI / 180.0 );\n\t\t\t// we actually don't use screenWidth, since perspective camera is fixed to screen height\n\t\t\tscope.panLeft( 2 * delta.x * targetDistance / element.clientHeight );\n\t\t\tscope.panUp( 2 * delta.y * targetDistance / element.clientHeight );\n\n\t\t} else if ( scope.object.top !== undefined ) {\n\n\t\t\t// orthographic\n\t\t\tscope.panLeft( delta.x * (scope.object.right - scope.object.left) / element.clientWidth );\n\t\t\tscope.panUp( delta.y * (scope.object.top - scope.object.bottom) / element.clientHeight );\n\n\t\t} else {\n\n\t\t\t// camera neither orthographic or perspective - warn user\n\t\t\tconsole.warn( 'WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.' );\n\n\t\t}\n\n\t};\n\n\tthis.dollyIn = function ( dollyScale ) {\n\n\t\tif ( dollyScale === undefined ) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tscale /= dollyScale;\n\n\t};\n\n\tthis.dollyOut = function ( dollyScale ) {\n\n\t\tif ( dollyScale === undefined ) {\n\n\t\t\tdollyScale = getZoomScale();\n\n\t\t}\n\n\t\tscale *= dollyScale;\n\n\t};\n\n\tthis.update = function () {\n\n\t\tvar position = this.object.position;\n\t\tvar offset = position.clone().sub( this.target );\n\n\t\t// angle from z-axis around y-axis\n\n\t\tvar theta = Math.atan2( offset.x, offset.z );\n\n\t\t// angle from y-axis\n\n\t\tvar phi = Math.atan2( Math.sqrt( offset.x * offset.x + offset.z * offset.z ), offset.y );\n\n\t\tif ( this.autoRotate ) {\n\n\t\t\tthis.rotateLeft( getAutoRotationAngle() );\n\n\t\t}\n\n\t\ttheta += thetaDelta;\n\t\tphi += phiDelta;\n\n\t\t// restrict phi to be between desired limits\n\t\tphi = Math.max( this.minPolarAngle, Math.min( this.maxPolarAngle, phi ) );\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tphi = Math.max( EPS, Math.min( Math.PI - EPS, phi ) );\n\n\t\tvar radius = offset.length() * scale;\n\n\t\t// restrict radius to be between desired limits\n\t\tradius = Math.max( this.minDistance, Math.min( this.maxDistance, radius ) );\n\t\t\n\t\t// move target to panned location\n\t\tthis.target.add( pan );\n\n\t\toffset.x = radius * Math.sin( phi ) * Math.sin( theta );\n\t\toffset.y = radius * Math.cos( phi );\n\t\toffset.z = radius * Math.sin( phi ) * Math.cos( theta );\n\n\t\tposition.copy( this.target ).add( offset );\n\n\t\tthis.object.lookAt( this.target );\n\n\t\tthetaDelta = 0;\n\t\tphiDelta = 0;\n\t\tscale = 1;\n\t\tpan.set(0,0,0);\n\n\t\tif ( lastPosition.distanceTo( this.object.position ) > 0 ) {\n\n\t\t\tthis.dispatchEvent( changeEvent );\n\n\t\t\tlastPosition.copy( this.object.position );\n\n\t\t}\n\n\t};\n\n\n\tfunction getAutoRotationAngle() {\n\n\t\treturn 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n\n\t}\n\n\tfunction getZoomScale() {\n\n\t\treturn Math.pow( 0.95, scope.zoomSpeed );\n\n\t}\n\n\tfunction onMouseDown( event ) {\n\n\t\tif ( scope.enabled === false ) { return; }\n\t\tevent.preventDefault();\n\n\t\tif ( event.button === 0 ) {\n\t\t\tif ( scope.noRotate === true ) { return; }\n\n\t\t\tstate = STATE.ROTATE;\n\n\t\t\trotateStart.set( event.clientX, event.clientY );\n\n\t\t} else if ( event.button === 1 ) {\n\t\t\tif ( scope.noZoom === true ) { return; }\n\n\t\t\tstate = STATE.DOLLY;\n\n\t\t\tdollyStart.set( event.clientX, event.clientY );\n\n\t\t} else if ( event.button === 2 ) {\n\t\t\tif ( scope.noPan === true ) { return; }\n\n\t\t\tstate = STATE.PAN;\n\n\t\t\tpanStart.set( event.clientX, event.clientY );\n\n\t\t}\n\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tscope.domElement.addEventListener( 'mousemove', onMouseMove, false );\n\t\tscope.domElement.addEventListener( 'mouseup', onMouseUp, false );\n\n\t}\n\n\tfunction onMouseMove( event ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\tevent.preventDefault();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tif ( state === STATE.ROTATE ) {\n\n\t\t\tif ( scope.noRotate === true ) return;\n\n\t\t\trotateEnd.set( event.clientX, event.clientY );\n\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\tscope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\tscope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\trotateStart.copy( rotateEnd );\n\n\t\t} else if ( state === STATE.DOLLY ) {\n\n\t\t\tif ( scope.noZoom === true ) return;\n\n\t\t\tdollyEnd.set( event.clientX, event.clientY );\n\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\tscope.dollyIn();\n\n\t\t\t} else {\n\n\t\t\t\tscope.dollyOut();\n\n\t\t\t}\n\n\t\t\tdollyStart.copy( dollyEnd );\n\n\t\t} else if ( state === STATE.PAN ) {\n\n\t\t\tif ( scope.noPan === true ) return;\n\n\t\t\tpanEnd.set( event.clientX, event.clientY );\n\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\t\t\n\t\t\tscope.pan( panDelta );\n\n\t\t\tpanStart.copy( panEnd );\n\n\t\t}\n\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tscope.update();\n\n\t}\n\n\tfunction onMouseUp( /* event */ ) {\n\n\t\tif ( scope.enabled === false ) return;\n\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tscope.domElement.removeEventListener( 'mousemove', onMouseMove, false );\n\t\tscope.domElement.removeEventListener( 'mouseup', onMouseUp, false );\n\n\t\tstate = STATE.NONE;\n\n\t}\n\n\tfunction onMouseWheel( event ) {\n\n\t\tif ( scope.enabled === false || scope.noZoom === true ) return;\n\n\t\tvar delta = 0;\n\n\t\tif ( event.wheelDelta ) { // WebKit / Opera / Explorer 9\n\n\t\t\tdelta = event.wheelDelta;\n\n\t\t} else if ( event.detail ) { // Firefox\n\n\t\t\tdelta = - event.detail;\n\n\t\t}\n\n\t\tif ( delta > 0 ) {\n\n\t\t\tscope.dollyOut();\n\n\t\t} else {\n\n\t\t\tscope.dollyIn();\n\n\t\t}\n\n\t}\n\n\tfunction onKeyDown( event ) {\n\n\t\tif ( scope.enabled === false ) { return; }\n\t\tif ( scope.noKeys === true ) { return; }\n\t\tif ( scope.noPan === true ) { return; }\n\n\t\t// pan a pixel - I guess for precise positioning?\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tvar needUpdate = false;\n\t\t\n\t\tswitch ( event.keyCode ) {\n\n\t\t\tcase scope.keys.UP:\n\t\t\t\tscope.pan( new THREE.Vector2( 0, scope.keyPanSpeed ) );\n\t\t\t\tneedUpdate = true;\n\t\t\t\tbreak;\n\t\t\tcase scope.keys.BOTTOM:\n\t\t\t\tscope.pan( new THREE.Vector2( 0, -scope.keyPanSpeed ) );\n\t\t\t\tneedUpdate = true;\n\t\t\t\tbreak;\n\t\t\tcase scope.keys.LEFT:\n\t\t\t\tscope.pan( new THREE.Vector2( scope.keyPanSpeed, 0 ) );\n\t\t\t\tneedUpdate = true;\n\t\t\t\tbreak;\n\t\t\tcase scope.keys.RIGHT:\n\t\t\t\tscope.pan( new THREE.Vector2( -scope.keyPanSpeed, 0 ) );\n\t\t\t\tneedUpdate = true;\n\t\t\t\tbreak;\n\t\t}\n\n\t\t// Greggman fix: https://github.com/greggman/three.js/commit/fde9f9917d6d8381f06bf22cdff766029d1761be\n\t\tif ( needUpdate ) {\n\n\t\t\tscope.update();\n\n\t\t}\n\n\t}\n\t\n\tfunction touchstart( event ) {\n\n\t\tif ( scope.enabled === false ) { return; }\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1:\t// one-fingered touch: rotate\n\t\t\t\tif ( scope.noRotate === true ) { return; }\n\n\t\t\t\tstate = STATE.TOUCH_ROTATE;\n\n\t\t\t\trotateStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tcase 2:\t// two-fingered touch: dolly\n\t\t\t\tif ( scope.noZoom === true ) { return; }\n\n\t\t\t\tstate = STATE.TOUCH_DOLLY;\n\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\t\t\t\tdollyStart.set( 0, distance );\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\t\t\t\tif ( scope.noPan === true ) { return; }\n\n\t\t\t\tstate = STATE.TOUCH_PAN;\n\n\t\t\t\tpanStart.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\t}\n\n\tfunction touchmove( event ) {\n\n\t\tif ( scope.enabled === false ) { return; }\n\n\t\tevent.preventDefault();\n\t\tevent.stopPropagation();\n\n\t\tvar element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n\t\tswitch ( event.touches.length ) {\n\n\t\t\tcase 1: // one-fingered touch: rotate\n\t\t\t\tif ( scope.noRotate === true ) { return; }\n\t\t\t\tif ( state !== STATE.TOUCH_ROTATE ) { return; }\n\n\t\t\t\trotateEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\trotateDelta.subVectors( rotateEnd, rotateStart );\n\n\t\t\t\t// rotating across whole screen goes 360 degrees around\n\t\t\t\tscope.rotateLeft( 2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed );\n\t\t\t\t// rotating up and down along whole screen attempts to go 360, but limited to 180\n\t\t\t\tscope.rotateUp( 2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed );\n\n\t\t\t\trotateStart.copy( rotateEnd );\n\t\t\t\tbreak;\n\n\t\t\tcase 2: // two-fingered touch: dolly\n\t\t\t\tif ( scope.noZoom === true ) { return; }\n\t\t\t\tif ( state !== STATE.TOUCH_DOLLY ) { return; }\n\n\t\t\t\tvar dx = event.touches[ 0 ].pageX - event.touches[ 1 ].pageX;\n\t\t\t\tvar dy = event.touches[ 0 ].pageY - event.touches[ 1 ].pageY;\n\t\t\t\tvar distance = Math.sqrt( dx * dx + dy * dy );\n\n\t\t\t\tdollyEnd.set( 0, distance );\n\t\t\t\tdollyDelta.subVectors( dollyEnd, dollyStart );\n\n\t\t\t\tif ( dollyDelta.y > 0 ) {\n\n\t\t\t\t\tscope.dollyOut();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tscope.dollyIn();\n\n\t\t\t\t}\n\n\t\t\t\tdollyStart.copy( dollyEnd );\n\t\t\t\tbreak;\n\n\t\t\tcase 3: // three-fingered touch: pan\n\t\t\t\tif ( scope.noPan === true ) { return; }\n\t\t\t\tif ( state !== STATE.TOUCH_PAN ) { return; }\n\n\t\t\t\tpanEnd.set( event.touches[ 0 ].pageX, event.touches[ 0 ].pageY );\n\t\t\t\tpanDelta.subVectors( panEnd, panStart );\n\t\t\t\t\n\t\t\t\tscope.pan( panDelta );\n\n\t\t\t\tpanStart.copy( panEnd );\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tstate = STATE.NONE;\n\n\t\t}\n\n\t}\n\n\tfunction touchend( /* event */ ) {\n\n\t\tif ( scope.enabled === false ) { return; }\n\n\t\tstate = STATE.NONE;\n\t}\n\n\tthis.domElement.addEventListener( 'contextmenu', function ( event ) { event.preventDefault(); }, false );\n\tthis.domElement.addEventListener( 'mousedown', onMouseDown, false );\n\tthis.domElement.addEventListener( 'mousewheel', onMouseWheel, false );\n\tthis.domElement.addEventListener( 'DOMMouseScroll', onMouseWheel, false ); // firefox\n\n\tthis.domElement.addEventListener( 'keydown', onKeyDown, false );\n\n\tthis.domElement.addEventListener( 'touchstart', touchstart, false );\n\tthis.domElement.addEventListener( 'touchend', touchend, false );\n\tthis.domElement.addEventListener( 'touchmove', touchmove, false );\n\n};\n\nTHREE.OrbitControls.prototype = Object.create( THREE.EventDispatcher.prototype );\n","!function(e,t){\"object\"==typeof exports&&\"undefined\"!=typeof module?module.exports=t():\"function\"==typeof define&&define.amd?define(t):e.Stats=t()}(this,function(){\"use strict\";var c=function(){var n=0,l=document.createElement(\"div\");function e(e){return l.appendChild(e.dom),e}function t(e){for(var t=0;t<l.children.length;t++)l.children[t].style.display=t===e?\"block\":\"none\";n=e}l.style.cssText=\"position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000\",l.addEventListener(\"click\",function(e){e.preventDefault(),t(++n%l.children.length)},!1);var i=(performance||Date).now(),a=i,o=0,f=e(new c.Panel(\"FPS\",\"#0ff\",\"#002\")),r=e(new c.Panel(\"MS\",\"#0f0\",\"#020\"));if(self.performance&&self.performance.memory)var d=e(new c.Panel(\"MB\",\"#f08\",\"#201\"));return t(0),{REVISION:16,dom:l,addPanel:e,showPanel:t,begin:function(){i=(performance||Date).now()},end:function(){o++;var e=(performance||Date).now();if(r.update(e-i,200),a+1e3<=e&&(f.update(1e3*o/(e-a),100),a=e,o=0,d)){var t=performance.memory;d.update(t.usedJSHeapSize/1048576,t.jsHeapSizeLimit/1048576)}return e},update:function(){i=this.end()},domElement:l,setMode:t}};return c.Panel=function(n,l,i){var a=1/0,o=0,f=Math.round,r=f(window.devicePixelRatio||1),d=80*r,e=48*r,c=3*r,p=2*r,u=3*r,s=15*r,m=74*r,h=30*r,y=document.createElement(\"canvas\");y.width=d,y.height=e,y.style.cssText=\"width:80px;height:48px\";var v=y.getContext(\"2d\");return v.font=\"bold \"+9*r+\"px Helvetica,Arial,sans-serif\",v.textBaseline=\"top\",v.fillStyle=i,v.fillRect(0,0,d,e),v.fillStyle=l,v.fillText(n,c,p),v.fillRect(u,s,m,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u,s,m,h),{dom:y,update:function(e,t){a=Math.min(a,e),o=Math.max(o,e),v.fillStyle=i,v.globalAlpha=1,v.fillRect(0,0,d,s),v.fillStyle=l,v.fillText(f(e)+\" \"+n+\" (\"+f(a)+\"-\"+f(o)+\")\",c,p),v.drawImage(y,u+r,s,m-r,h,u,s,m-r,h),v.fillRect(u+m-r,s,r,h),v.fillStyle=i,v.globalAlpha=.9,v.fillRect(u+m-r,s,r,f((1-e/t)*h))}}},c});\n","import THREE from 'three';\r\n\r\nclass Atom extends THREE.Vector3 {\r\n\telement = \"C\";\t\t// Atom type, H, C, O etc\r\n\tname = \"C\";\t\t// name, C2 etc\r\n\tOK = false\t\r\n\r\n\tconstructor(data){\r\n\t\tsuper();\r\n\r\n\t\tthis.molecule = data.molecule;\r\n\t\tthis.name = data.name;\t// atom nme\r\n\t\tthis.group = data.resName;\t// residue name\r\n\t\tthis.chain = data.chainID;\t\t\t// chain name\r\n\t\tthis.element = data.element;\r\n\t\tsuper.set(data.x, data.y, data.z)\r\n\t\t\r\n\t\tthis.OK = (data.molecule && data.name && data.resName && data.chainID && data.element);\r\n\t}\r\n\r\n\tball(quality=\"NORMAL\", scale=1.0, visible=true){\r\n\t\t// Set up the mesh lets\r\n\t\t// console.log(`ball ${quality}`)\r\n\t\tlet size = Atom.VDWR[Atom.ATOM_NUMBER[this.element]];\r\n\t\tlet color = Atom.COLOR[Atom.ATOM_NUMBER[this.element]];\r\n\r\n\t\tconst material = new THREE.MeshLambertMaterial( \r\n\t\t\t\t{ \r\n\t\t\t\t\tcolor: color, \r\n\t\t\t\t\topacity : 1.0,\r\n\t\t\t\t\ttransparent : true\r\n\t\t\t\t}\r\n\t\t\t);\r\n\t\tmaterial.transparent = true;\r\n\r\n\t\tsize = scale > 0 ? size * scale : 0.0602;\r\n\t\t// console.dir(Atom.MODEL)\r\n\t  \tconst mesh = new THREE.Mesh(Atom.MODEL[quality], material);\r\n\t  \tmesh.scale.x = size;\r\n\t  \tmesh.scale.y = size;\r\n\t  \tmesh.scale.z = size;\r\n\t  \tmesh.position.set(...this.toArray());\r\n\t  \tmesh.visible = visible;\r\n\r\n\t  \treturn this.wrapupGLMesh(mesh);\r\n\t}\r\n\r\n\twrapupGLMesh (obj) {\r\n\t\t[obj.name, obj.molecule, obj.chain, obj.group] = [this.name, this.molecule, this.chain, this.group];\r\n\t\tobj.type = \"ATOM\";\r\n\t\tobj.data = this;\r\n\t\treturn obj;\r\n\t}\r\n\r\n\ttoString(){\r\n\t\treturn `type=${this.element}; name=${this.name}; pos=${this.toArray()}`;\r\n\t}\r\n\r\n\tatomicNum(){\r\n\t\treturn Atom.ATOM_NUMBER[this.element];\r\n\t}\r\n\r\n\t// group name / chain name / molecule name\r\n\tin(level, name){\r\n\t\treturn (this[level] == name);\r\n\t}\r\n\r\n\t_model_qual(model, molsize){\r\n\t\tlet qual = \"HIGH\";\r\n\t\tlet size = 1.0;\r\n\t\tlet visible = true;\r\n\r\n\t\tif ( model == \"BallStick\" || model == \"BallStick2\" ){\r\n\t\t\tif (molsize > 2000){\r\n\t\t\t\tqual = \"LOW\";\r\n\t\t\t\tsize = 0.15;\r\n\t\t\t} else {\r\n\t\t\t\tqual = \"NORMAL\";\r\n\t\t\t\tsize = 0.15;\r\n\t\t\t}\r\n\t\t\t\r\n\t\t} else if ( model == \"Stick\" ){\r\n\t\t\tif (molsize > 500){\r\n\t\t\t\tqual = \"SUPER_LOW\";\r\n\t\t\t\tsize = -1;\r\n\t\t\t} else {\r\n\t\t\t\tqual = \"LOW\";\r\n\t\t\t\tsize = -1;\r\n\t\t\t}\r\n\t\t} else if (model.toLowerCase().indexOf(\"wire\") > -1){\r\n\t\t\t// TODO : wire form\r\n\t\t\tqual = -1;\r\n\t\t\tsize = -1;\r\n\t\t}\r\n\r\n\t\treturn {qual, size, visible}\r\n\t}\r\n\r\n\tmodel(model, atomlist){\r\n\t\tconst quality = this._model_qual(model, atomlist.length);\r\n\t\tif (quality.qual == -1){\r\n\t\t\treturn null;\r\n\t\t}\r\n\t\treturn this.ball(quality.qual, quality.size, quality.visible);\r\n\t}\r\n\r\n\ttreeId(){\r\n\t\treturn `${this.molecule}-${this.chain}-${this.group}-${this.name}`;\r\n\t}\r\n}\r\n\r\nAtom.MODEL = {\r\n\tSUPER_HIGH : new THREE.SphereGeometry(1, 64, 64),\r\n\tHIGH : new THREE.SphereGeometry(1, 32, 32),\r\n\tNORMAL : new THREE.SphereGeometry(1, 24, 24),\r\n\tLOW : new THREE.SphereGeometry(1, 16, 16),\r\n\tSUPER_LOW : new THREE.SphereGeometry(1, 8, 8),\r\n}\r\n\r\nAtom.ATOM_CPK = {\r\n\tH : { color: 0xffff, size : 1 },\r\n\tC : { color: 0x999999, size : 1.5 },\r\n\tO : { color: 0xff0000, size : 1.35},\r\n\tN : { color: 0x0000, size : 1.25 },\r\n\tP : { color: 0xffff00, size : 1.7 },\r\n\tS : { color: 0xffff00, size : 1.7}\r\n}\r\n\r\nAtom.ATOM_NUMBER = {\r\n\tH : 1,\r\n\tC : 6,\r\n\tN : 7,\r\n\tO : 8,\r\n\tF : 9,\r\n\tNA : 11,\r\n\tP : 15,\r\n\tS : 16,\r\n\tCL : 17,\r\n}\r\n\r\nAtom.VDWR = [\r\n\t0.8, //dummy\r\n    // H  He     Li    Be     B     C     N     O     F     Ne\t\t\t10\r\n    1.1,  2.2,   1.22, 0.63,  1.75, 1.55, 1.4,  1.35, 1.3,  2.02,\r\n    //Na  Mg     Al    Si     P     S     Cl    Ar    K     Ca\t\t\t20\r\n    2.2,  1.5,   1.5,  2.0,   1.88, 1.81, 1.75, 2.77, 2.39, 1.95,\r\n    //Sc  Ti     V     Cr     Mg    Fe    Co    Ni    Cu    Zn\t\t\t30\r\n    1.32, 1.95,  1.06, 1.13,  1.19, 1.26, 1.13, 1.24, 1.15, 1.15,\r\n    //Ga  Ge     As    Se     Br    Ke    Rb    Sr    Y     Zr\t\t\t40\r\n    1.55, 1.48,  0.83, 0.9,   1.95, 1.9,  2.65, 2.02, 1.61, 1.42,\r\n    //Nb  Mo     Tc    Ru     Rh    Pb    Ag    Cd    In    Sn\t\t\t50\r\n    1.33, 1.75,  1.8,  1.2,   1.22, 1.44, 1.55, 1.75, 1.46, 1.67,\r\n    //Sb  Te     I     Xe     Cs    Ba    La    Ce    Pr    Nd\t\t\t60\r\n    1.12, 1.26,  2.15, 2.1,   3.01, 2.41, 1.83, 1.86, 1.62, 1.79,\r\n    //Pm  Sm     Eu    Gd     Tb    Dy    Ho    Er    Tm    Yb\t\t\t70\r\n    1.76, 1.74,  1.96, 1.69,  1.66, 1.63, 1.61, 1.59, 1.57, 1.54,\r\n    //Lu  Hf     Ta    W      Re    Os    Ir    Pt    Au    Hg\t\t\t80\r\n    1.53, 1.4,   1.22, 1.26,  1.3,  1.58, 1.22, 1.55, 1.45, 1.98,\r\n    //Tl  Pb     Bi    Po     At    Rn    Fr    Ra    Ac    Th    \r\n    1.71, 2.16,  1.73, 1.21,  1.12, 2.3,  3.24, 2.75, 2.12, 1.84,\r\n    //Pa  U      Np    Pu     Am    Cm    Bk    Cf    Es    Fm\r\n    1.6,  1.75,  1.71, 1.67,  1.66, 1.65, 1.64, 1.63, 1.62, 1.61,\r\n    //Md  No     Lr\r\n    1.6,  1.59,  1.58\r\n]\r\n\r\nAtom.COLOR = [\r\n\t0x00ffff,\t//0 dummy\r\n\t0xffffff,\t//1 H\r\n\t0x88ffff,\t//2 He\r\n\t0x8844ff, \t//3 Li\r\n\t0x99ff00,\t//4 Be\r\n\t0xff9999, \t//5 B\r\n\t0x888888, \t//6 C\r\n\t0x7777ff,\t//7 N\r\n\t0xee0000,\t//8 O\r\n\t0x88ffff,\t//9 F\r\n\t0x668899, \t//10 Ne\r\n\t0x663695, \t//11 Na\r\n\t0x530000,\t//12 Mg\r\n\t0x826565, \t//13 Al\r\n\t0x506060,\t//14 Si\r\n\t0xff8000,\t//15 P\r\n\t0xff8020,\t//16 S\r\n\t0x158070, \t//17 Cl\r\n\t0x80b0c0,\t//18 Ar\r\n\t0x80b0c0,   //19 K\r\n\t0x80b0c0,   //20 Ca\r\n\t0x80b0c0,   //21 Sc\r\n\t0x80b0c0,   //22 Ti\r\n\t0x80b0c0,   //23 V\r\n\t0x80b0c0,   //24 Cr\r\n\t0x80b0c0,   //25 Mn\r\n\t0x80b0c0,   //26 Fe\r\n\t0x80b0c0,   //27 Co\r\n\t0x80b0c0,   //28 Ni\r\n\t0x80b0c0,   //29 Cu\r\n\t0x80b0c0,   //30 Zn\r\n\t0x80b0c0,   //31 Ga\r\n\t0x80b0c0,   //32 Ge\r\n\t0x80b0c0,   //33 As\r\n\t0x80b0c0,   //34 Se\r\n\t0x80b0c0,   //35 Br\r\n\t0x80b0c0,   //36 Kr\r\n\t0x80b0c0,   //37 Rb\r\n\t0x80b0c0,   //38 Sr\r\n\t0x80b0c0,   //39 Y\r\n\t0x80b0c0,   //40 Zr\r\n\t0x80b0c0,   //41 X\r\n\t0x80b0c0,   //42 X\r\n\t0x80b0c0,   //43 X\r\n\t0x80b0c0,   //44 X\r\n\t0x80b0c0,   //45 X\r\n\t0x80b0c0,   //46 X\r\n\t0x80b0c0,   //47 X\r\n\t0x80b0c0,   //48 X\r\n\t0x80b0c0,   //49 X\r\n\t0x80b0c0,   //50 X\r\n\t0x80b0c0,   //51 X\r\n\t0x80b0c0,   //52 X\r\n\t0x80b0c0,   //53 X\r\n\t0x80b0c0,   //54 X\r\n\t0x80b0c0,   //55 X\r\n\t0x80b0c0,   //56 X\r\n\t0x80b0c0,   //57 X\r\n\t0x80b0c0,   //58 X\r\n\t0x80b0c0,   //59 X\r\n\t0x80b0c0,   //60 X\r\n\t0x80b0c0,   //61 X\r\n\t0x80b0c0,   //62 X\r\n\t0x80b0c0,   //63 X\r\n\t0x80b0c0,   //64 X\r\n\t0x80b0c0,   //65 X\r\n\t0x80b0c0,   //66 X\r\n\t0x80b0c0,   //67 X\r\n\t0x80b0c0,   //68 X\r\n\t0x80b0c0,   //69 X\r\n\t0x80b0c0,   //70 X\r\n\t0x80b0c0,   //71 X\r\n\t0x80b0c0,   //72 X\r\n\t0x80b0c0,   //73 X\r\n\t0x80b0c0,   //74 X\r\n\t0x80b0c0,   //75 X\r\n\t0x80b0c0,   //76 X\r\n\t0x80b0c0,   //77 X\r\n\t0x80b0c0,   //78 X\r\n\t0x80b0c0,   //79 X\r\n\t0x80b0c0,   //80 X\r\n]\r\n\r\n//====================================\r\n\r\nclass Bond{\r\n\tpair = [];\r\n\tconstructor( cfg ){\r\n\t\tif (cfg){\r\n\t\t\tif (cfg.from){\r\n\t\t\t\tthis.pair.push(cfg.from);\r\n\t\t\t}\r\n\r\n\t\t\tif(cfg.to){\r\n\t\t\t\tthis.pair.push(cfg.to);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tcolor_gradient_line () {\t\t\r\n\r\n\t\t// geometry\r\n\t\tlet geometry = new THREE.BufferGeometry();\r\n\r\n\t  \t// material\r\n\t  \tlet lineMaterial = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\r\n\r\n\t\t// attributes : 2-ended line\r\n\t\tlet positions = new Float32Array( 2 * 3 ); // 3 vertices per point\r\n\t\tlet colors = new Float32Array( 2 * 3 );\r\n\t\tlet color = new THREE.Color();\r\n\r\n\t\t// the 2 ends\r\n\t\tfor (let i=0; i<2; i++) {\r\n\t\t\tcolor.set ( Atom.COLOR[Atom.ATOM_NUMBER[this.pair[i].element]] );\r\n\t\t\t[ positions[ i * 3 ], positions[ i * 3 + 1 ], positions[ i * 3 + 2] ] = this.pair[i].toArray();\r\n\t\t\t[ colors[ i * 3 ], colors[ i * 3 + 1 ], colors[ i * 3 + 2 ] ] = color.toArray();\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t// line\r\n\t\tlet line = new THREE.Line( geometry, lineMaterial );\r\n\t\tline.group = this.pair[0].group;\r\n\t\treturn this.wrapupGLMesh(line);\r\n\t}\r\n\r\n\tcenter_position(){\r\n\t\tlet pt1 = this.pair[0].toArray();\r\n\t\tlet pt2 = this.pair[1].toArray();\r\n\t\treturn [ (pt1[0] + pt2[0]) * 0.5, (pt1[1] + pt2[1]) * 0.5, (pt1[2] + pt2[2]) * 0.5 ]\r\n\t}\r\n\r\n\tcolor_divide_line () {\t\t\r\n\r\n\t\t// geometry\r\n\t\tlet geometry = new THREE.BufferGeometry();\r\n\r\n\t  \t// material\r\n\t  \tlet lineMaterial = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\r\n\r\n\t\t// attributes : 4 ended-line\r\n\t\tlet positions = new Float32Array( 4 * 3 ); // 3 vertices per point\r\n\t\tlet colors = new Float32Array( 4 * 3 );\r\n\t\tlet color = new THREE.Color();\r\n\r\n\t\tlet pt1 = this.pair[0].toArray();\r\n\t\tlet pt2 = this.pair[1].toArray();\r\n\t\tlet ptm = this.center_position(); \r\n\r\n\t\t// the 4 ends\r\n\t\tlet n = 0;\r\n\r\n\t\tcolor.set ( Atom.COLOR[Atom.ATOM_NUMBER[this.pair[0].element]] );\r\n\t\t[ positions[ n * 3 ], positions[ n * 3 + 1 ], positions[ n * 3 + 2] ] = pt1;\r\n\t\t[ colors[ n * 3 ], colors[ n * 3 + 1 ], colors[ n * 3 + 2 ] ] = color.toArray();\r\n\t\tn++;\r\n\t\t[ positions[ n * 3 ], positions[ n * 3 + 1 ], positions[ n * 3 + 2] ] = ptm;\r\n\t\t[ colors[ n * 3 ], colors[ n * 3 + 1 ], colors[ n * 3 + 2 ] ] = color.toArray();\r\n\r\n\t\tcolor.set ( Atom.COLOR[Atom.ATOM_NUMBER[this.pair[1].element]] );\r\n\t\tn++;\r\n\t\t[ positions[ n * 3 ], positions[ n * 3 + 1 ], positions[ n * 3 + 2] ] = ptm;\r\n\t\t[ colors[ n * 3 ], colors[ n * 3 + 1 ], colors[ n * 3 + 2 ] ] = color.toArray();\r\n\t\tn++;\r\n\t\t[ positions[ n * 3 ], positions[ n * 3 + 1 ], positions[ n * 3 + 2] ] = pt2;\r\n\t\t[ colors[ n * 3 ], colors[ n * 3 + 1 ], colors[ n * 3 + 2 ] ] = color.toArray();\r\n\r\n\t\t\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t// line\r\n\t\tlet line = new THREE.Line( geometry, lineMaterial );\r\n\t\tline.group = this.pair[0].group;\r\n\t\tline.data = this;\r\n\t\treturn this.wrapupGLMesh(line);\r\n\t}\r\n\r\n\t_cylinder(v1, v2, color, atom, matename, length, orientation, edgeGeometry){\r\n\t    \r\n\t    let material = new THREE.MeshPhongMaterial({color: color});\r\n\t    let mesh = new THREE.Mesh(edgeGeometry, material);\r\n\t    mesh.applyMatrix(orientation);\r\n\t    // position based on midpoints - there may be a better solution than this\r\n\t    mesh.scale.y = length;\r\n\t    mesh.position.x = 0.5 * (v1.x + v2.x );\r\n\t   \tmesh.position.y = 0.5 * (v1.y + v2.y );\r\n\t   \tmesh.position.z = 0.5 * (v1.z + v2.z );\r\n\t   \t\r\n\t   \tmesh.type = \"BOND\";\r\n\t   \tmesh.group = atom.group;\r\n\t   \tmesh.data = this;\r\n\t   \tmesh.name = `${atom.name}-${matename}`;\r\n\r\n\t    return mesh;\r\n\t}\r\n\r\n\tcylinder(geotype=\"LINE\", quality=\"HIGH\"){\r\n\t\tlet direction = new THREE.Vector3().subVectors(this.pair[0], this.pair[1]);\r\n\t    let rotm = new THREE.Matrix4();\r\n\t    rotm.set(\r\n\t                1, 0, 0, 0,\r\n\t                0, 0, 1, 0,\r\n\t                0, -1, 0, 0,\r\n\t                0, 0, 0, 1\r\n\t              )\r\n\r\n\t    // reuse the cylinderGeo\r\n\t    // const geotype = cone ? \"CONE\" : \"STICK\";\r\n\t    const geo = Bond.MODEL[geotype][quality];\r\n\r\n\t    // first half from A to B\r\n\t    let orientation = new THREE.Matrix4();\r\n\t    orientation.lookAt(this.pair[0], this.pair[1], new THREE.Object3D().up);\r\n\t    orientation.multiply(rotm);\r\n\r\n\t\tlet v1 = this.pair[0];\r\n\t\tlet v2 = new THREE.Vector3(...this.center_position());\r\n\t\tlet vec = new THREE.Vector3().subVectors(v1, v2)\r\n\t\tlet color = Atom.COLOR[Atom.ATOM_NUMBER[this.pair[0].element]];\r\n\t\tlet c1 = this._cylinder( v1, v2, color, v1, this.pair[1].name, vec.length(), orientation, geo );\r\n\r\n\t\t// second half from B to A\r\n\t\torientation = new THREE.Matrix4();\r\n\t    orientation.lookAt(this.pair[1], this.pair[0], new THREE.Object3D().up);\r\n\t    orientation.multiply(rotm);\r\n\r\n\t\tv1 = this.pair[1];\r\n\t\tcolor = Atom.COLOR[Atom.ATOM_NUMBER[this.pair[1].element]];\r\n\t\tvec = new THREE.Vector3().subVectors(v1, v2)\r\n\t\tlet c2 = this._cylinder( v1, v2, color, v1, this.pair[0].name, vec.length(), orientation, geo );\r\n\r\n\t\tc1.mate = c2;\r\n\t\tc2.mate = c1;\r\n\t\tc1 = this.wrapupGLMesh(c1);\r\n\t\tc2 = this.wrapupGLMesh(c2);\r\n\t\treturn [c1, c2];\r\n\t}\r\n\r\n\r\n\tgetColoredBufferLine ( steps, phase, geometry ) {\r\n\t\tlet vertices = geometry.vertices;\r\n\t\tlet segments = geometry.vertices.length;\r\n\r\n\t\t// geometry\r\n\t\tgeometry = new THREE.BufferGeometry();\r\n\r\n\t  \t// material\r\n\t  \tlet lineMaterial = new THREE.LineBasicMaterial({ vertexColors: THREE.VertexColors });\r\n\r\n\t\t// attributes\r\n\t\tlet positions = new Float32Array( segments * 3 ); // 3 vertices per point\r\n\t\tlet colors = new Float32Array( segments * 3 );\r\n\t\tlet frequency = 1 /  ( steps * segments );\r\n\t\tlet color = new THREE.Color();\r\n\r\n\t\tlet x, y, z;\r\n\r\n\t\tfor ( let i = 0, l = segments; i < l; i ++ ) {\r\n\t\t\tx = vertices[ i ].x;\r\n\t\t\ty = vertices[ i ].y;\r\n\t\t\tz = vertices[ i ].z;\r\n\r\n\t\t    positions[ i * 3 ] = x;\r\n\t\t    positions[ i * 3 + 1 ] = y;\r\n\t\t    positions[ i * 3 + 2 ] = z;\r\n\r\n\t\t    color.set ( this.makeColorGradient( i, frequency, phase ) );\r\n\r\n\t\t    colors[ i * 3 ] = color.r;\r\n\t\t    colors[ i * 3 + 1 ] = color.g;\r\n\t\t    colors[ i * 3 + 2 ] = color.b;\r\n\t\t}\r\n\r\n\t\tgeometry.addAttribute( 'position', new THREE.BufferAttribute( positions, 3 ) );\r\n\t\tgeometry.addAttribute( 'color', new THREE.BufferAttribute( colors, 3 ) );\r\n\r\n\t\t// line\r\n\t\tlet line = new THREE.Line( geometry, lineMaterial );\r\n\r\n\t\treturn this.wrapupGLMesh(line);\r\n\r\n\t}\r\n\r\n\tmakeColorGradient ( i, frequency, phase ) {  \r\n\r\n\t\t  let center = 128;\r\n\t\t  let width = 127;\r\n\t\t\t\r\n\t\t  let redFrequency, grnFrequency, bluFrequency;\r\n\t\t \tgrnFrequency = bluFrequency = redFrequency = frequency;\r\n\t\t  \r\n\t\t  let phase2 = phase + 2;\r\n\t\t  let phase3 = phase + 4;\r\n\r\n\t\t  let red   = Math.sin( redFrequency * i + phase ) * width + center;\r\n\t\t  let green = Math.sin( grnFrequency * i + phase2 ) * width + center;\r\n\t\t  let blue  = Math.sin( bluFrequency * i + phase3 ) * width + center;\r\n\r\n\t\t  return parseInt( '0x' + this._byte2Hex( red ) + this._byte2Hex( green ) + this._byte2Hex( blue ) );\r\n\t}\r\n\r\n\t_byte2Hex (n) {\r\n\t\t  let nybHexString = \"0123456789ABCDEF\";\r\n\t\t  return String( nybHexString.substr( ( n >> 4 ) & 0x0, 1 ) ) + nybHexString.substr( n & 0x0, 1 );\r\n\t}\r\n\r\n\tlength(){\r\n\t\treturn this.pair[0].distanceTo(this.pair[1]);\r\n\t}\r\n\r\n\t// levelname : group name / chain name / molecule name; true if both atom are in\r\n\tin(level, name){\r\n\t\treturn ( this.pair[0].in(level, name) && this.pair[1].in(level, name) );\r\n\t}\r\n\r\n\ttype(afrom, ato){\r\n\t\tlet anums = this.pair.map( (a) => a.atomicNum() ).sort();\r\n\t\tlet dist = this.length();\r\n\t}\r\n\r\n\twrapupGLMesh(obj){\r\n\t\t[obj.molecule, obj.chain] = [this.pair[0].molecule, this.pair[1].chain];\r\n\t\tobj.name = `${this.pair[0].name}-${this.pair[1].name}`;\r\n\t\tobj.type = \"BOND\";\r\n\t\tobj.atoms = this.pair\r\n\t\treturn obj;\r\n\t}\r\n\r\n\tmodel(model, atomlist){\r\n\t\tmodel = model.toLowerCase();\r\n\r\n\t\tif (model.indexOf(\"wire\") > -1) {\r\n\t\t\tconst mesh = (model == \"wire\") ? this.color_divide_line() : this.color_gradient_line()\r\n\t\t\treturn [ mesh ];\r\n\t\t} else {\r\n\t\t\tlet geotype = \"LINE\";\r\n\t\t\tif (model == \"ballstick2\"){\r\n\t\t\t\tgeotype = \"CONE\";\r\n\t\t\t} else if (model.indexOf(\"stick\") > -1){\r\n\t\t\t\tgeotype = \"STICK\";\r\n\t\t\t}\r\n\t\t\treturn this.cylinder(geotype)\r\n\t\t}\r\n\t}\r\n\r\n\ttreeId(){\r\n\t\tconst atom = this.pair[0];\r\n\t\treturn atom.treeId();\r\n\t}\r\n}\r\n\r\nBond.BOND_TYPE = {\r\n\t\"1_6\" : 1.1,\r\n\t\"1_7\" : 1.04,\r\n\t\"1_8\" : 1.0,\r\n\t\"6_6\" : 1.6,\r\n\t\"6_7\" : 1.5,\r\n\t\"6_8\" : 1.5,\r\n\t\"7_7\" : 1.5,\r\n\t\"8_15\" : 1.7,\r\n}\r\n\r\nBond.STICK_SIZE = 0.06;\r\nBond.LINE_SIZE = 0.06;\r\nBond.LINE_FACES = 6;\r\n\r\nBond.MODEL = {\r\n\tCONE : {\r\n\t\tSUPER_HIGH : new THREE.CylinderGeometry(Bond.STICK_SIZE * 1.5, 0, 1, 40, 1, true),\t//open end \r\n\t\tHIGH       : new THREE.CylinderGeometry(Bond.STICK_SIZE * 1.5, 0, 1, 32, 1, true),\r\n\t\tNORMAL     : new THREE.CylinderGeometry(Bond.STICK_SIZE * 1.5, 0, 1, 26, 1, true),\r\n\t\tLOW        : new THREE.CylinderGeometry(Bond.STICK_SIZE * 1.5, 0, 1, 10, 1, true),\r\n\t\tSUPER_LOW  : new THREE.CylinderGeometry(Bond.STICK_SIZE * 1.5, 0, 1, 8, 1, true),\r\n\t},\r\n\tSTICK : {\r\n\t\tSUPER_HIGH : new THREE.CylinderGeometry(Bond.STICK_SIZE, Bond.STICK_SIZE, 1, 40, 1, true),\r\n\t\tHIGH       : new THREE.CylinderGeometry(Bond.STICK_SIZE, Bond.STICK_SIZE, 1, 32, 1, true),\r\n\t\tNORMAL     : new THREE.CylinderGeometry(Bond.STICK_SIZE, Bond.STICK_SIZE, 1, 26, 1, true),\r\n\t\tLOW        : new THREE.CylinderGeometry(Bond.STICK_SIZE, Bond.STICK_SIZE, 1, 10, 1, true),\r\n\t\tSUPER_LOW  : new THREE.CylinderGeometry(Bond.STICK_SIZE, Bond.STICK_SIZE, 1, 8, 1, true),\r\n\t},\r\n\tLINE : {\r\n\t\tSUPER_HIGH : new THREE.CylinderGeometry(Bond.LINE_SIZE, Bond.LINE_SIZE, 1, Bond.LINE_FACES, 1, true),\r\n\t\tHIGH \t   : new THREE.CylinderGeometry(Bond.LINE_SIZE, Bond.LINE_SIZE, 1, Bond.LINE_FACES, 1, true),\r\n\t\tNORMAL \t   : new THREE.CylinderGeometry(Bond.LINE_SIZE, Bond.LINE_SIZE, 1, Bond.LINE_FACES, 1, true),\r\n\t\tLOW        : new THREE.CylinderGeometry(Bond.LINE_SIZE, Bond.LINE_SIZE, 1, Bond.LINE_FACES, 1, true),\r\n\t\tSUPER_LOW  : new THREE.CylinderGeometry(Bond.LINE_SIZE, Bond.LINE_SIZE, 1, Bond.LINE_FACES, 1, true),\r\n\t}\r\n\r\n}\r\n\r\nBond.bondto = (afrom, ato) => {\r\n\tlet length = afrom.distanceTo(ato);\r\n\r\n\tlet anums = [afrom, ato].map( (a) => a.atomicNum() ).sort( (a,b) => a-b);\t// sort low to high\r\n\tlet key = `${anums[0]}_${anums[1]}`;\r\n\t// console.log(`${key} ${length} ${Bond.BOND_TYPE[key]}`)\r\n\r\n\treturn length <= Bond.BOND_TYPE[key] ? true: false\r\n}\r\n\r\nexport {\r\n\tBond, Atom\r\n};\r\n","const ATOM_NAME = 'ATOM  ';\nconst RESIDUE_NAME = 'SEQRES';\n\n/**\n * Parses the given PDB string into json\n * @param {String} pdb\n * @returns {Object}\n */\nmodule.exports = function parsePdb(pdb) {\n  const pdbLines = pdb.split('\\n');\n  const atoms = [];\n  const seqRes = []; // raw SEQRES entry data\n  let residues = []; // individual residue data parsed from SEQRES\n  const chains = new Map(); // individual rchaindata parsed from SEQRES\n\n  // Iterate each line looking for atoms\n  pdbLines.forEach((pdbLine) => {\n    if (pdbLine.substr(0, 6) === ATOM_NAME) {\n      // http://www.wwpdb.org/documentation/file-format-content/format33/sect9.html#ATOM\n      atoms.push({\n        serial: parseInt(pdbLine.substring(6, 11)),\n        name: pdbLine.substring(12, 16).trim(),\n        altLoc: pdbLine.substring(16, 17).trim(),\n        resName: pdbLine.substring(17, 20).trim(),\n        chainID: pdbLine.substring(21, 22).trim(),\n        resSeq: parseInt(pdbLine.substring(22, 26)),\n        iCode: pdbLine.substring(26, 27).trim(),\n        x: parseFloat(pdbLine.substring(30, 38)),\n        y: parseFloat(pdbLine.substring(38, 46)),\n        z: parseFloat(pdbLine.substring(46, 54)),\n        occupancy: parseFloat(pdbLine.substring(54, 60)),\n        tempFactor: parseFloat(pdbLine.substring(60, 66)),\n        element: pdbLine.substring(76, 78).trim(),\n        charge: pdbLine.substring(78, 80).trim(),\n      });\n    } else if (pdbLine.substr(0, 6) === RESIDUE_NAME) {\n      // http://www.wwpdb.org/documentation/file-format-content/format33/sect3.html#SEQRES\n      const seqResEntry = {\n        serNum: parseInt(pdbLine.substring(7, 10)),\n        chainID: pdbLine.substring(11, 12).trim(),\n        numRes: parseInt(pdbLine.substring(13, 17)),\n        resNames: pdbLine.substring(19, 70).trim().split(' '),\n      };\n      seqRes.push(seqResEntry);\n\n      residues = residues.concat(seqResEntry.resNames.map(resName => ({\n        id: residues.length,\n        serNum: seqResEntry.serNum,\n        chainID: seqResEntry.chainID,\n        resName,\n      })));\n\n      if (!chains.get(seqResEntry.chainID)) {\n        chains.set(seqResEntry.chainID, {\n          id: chains.size,\n          chainID: seqResEntry.chainID,\n          // No need to save numRes, can just do chain.residues.length\n        });\n      }\n    }\n  });\n\n  // Add residues to chains\n  chains.forEach((chain) => {\n    chain.residues = residues.filter((residue) =>\n      residue.chainID === chain.chainID,\n    );\n  });\n\n  // Add atoms to residues\n  residues.forEach((residue) => {\n    residue.atoms = atoms.filter((atom) =>\n      atom.chainID === residue.chainID && atom.resSeq === residue.serNum,\n    );\n  });\n\n  return {\n    // Raw data from pdb\n    atoms,\n    seqRes,\n    // Derived\n    residues, // Array of residue objects\n    chains, // Map of chain objects keyed on chainID\n  };\n}\n","import { Atom, Bond } from './molbase';\r\n\r\nconst parsePdb = require('parse-pdb');\r\nconst { readFileSync } = require('fs');\r\n\r\nclass MModel{\r\n\tconstructor(){\r\n\t\tthis.mol = { };\t\t// molecule data structure\r\n\t\tthis.status = false;\t\t\t\t// \r\n\t}\r\n\r\n\tloadMol(datastr, datatype=\"pdb\", mname=\"Mol\"){\r\n\t\tlet acnt = 0;\r\n\t\tif (datatype.toLowerCase() == \"pdb\"){\r\n\t\t\tconst mjson = parsePdb(datastr);\r\n\t\t\tconsole.log(`model.loadMol: parsePdb done:`)\r\n\t        console.log(mjson)\r\n\t        if (mjson.atoms.length > 0){\r\n\t            while (mname in this.mol){\r\n\t\t\t\t\tmname += \"_\"\r\n\t\t\t\t}\r\n\r\n\t\t\t\tmjson.atoms.forEach( (a) => {\r\n\t\t\t\t\ta.molecule = mname\r\n\t\t\t\t\tlet atom = new Atom(a)\r\n\t\t\t\t\tif (atom.OK){\r\n\t\t\t\t\t\tthis._addobj(atom);\r\n\t\t\t\t\t\tacnt++;\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t        }\r\n\t\t}\r\n\t\t\r\n\t\treturn acnt > 0 ? mname : null;\r\n\t}\r\n\r\n\r\n\t_addobj(atom){\r\n\t\t// console.log(atom)\r\n\t\tif ( !(atom.molecule in this.mol) ){\r\n\t\t\tthis.mol[atom.molecule] = {};\r\n\t\t}\r\n\r\n\t\tif ( !(atom.chain in this.mol[atom.molecule]) ){\r\n\t\t\tthis.mol[atom.molecule][atom.chain] = {};\r\n\t\t}\r\n\t\t\r\n\t\tif ( !(atom.group in this.mol[atom.molecule][atom.chain]) ){\r\n\t\t\tthis.mol[atom.molecule][atom.chain][atom.group] = [];\r\n\t\t}\r\n\r\n\t\tthis.mol[atom.molecule][atom.chain][atom.group].push(atom)\r\n\t}\r\n\r\n\tget_gl_objects(mname, model=\"CPK\"){\r\n\t\tif ( !(mname in this.mol)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet atomlist = this.atomlist(mname);\r\n\t\tif (!atomlist || atomlist.length == 0){\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\t// console.dir(atomlist)\r\n\r\n\t\tlet alist = [];\r\n\r\n\t\tif (model.indexOf(\"Wire\") == -1){\r\n\t\t\tatomlist.forEach( (o) => {\r\n\t\t\t\tconst mesh = o.model(model, atomlist);\r\n\t\t\t\tif (mesh){\r\n\t\t\t\t\tmesh.model = model;\r\n\t\t\t\t\talist.push(mesh)\r\n\t\t\t\t}\t\r\n\t\t\t})\r\n\t\t}\r\n\t\t\t\r\n\t\tif (model != \"CPK\"){\r\n\t\t\tfor (let i=1; i<atomlist.length; i++){\r\n\t\t\t\tfor(let n = 0; n<i; n++){\r\n\t\t\t\t\tlet afrom = atomlist[i];\r\n\t\t\t\t\tlet ato = atomlist[n];\r\n\t\t\t\t\tif (Bond.bondto(afrom, ato)){\r\n\t\t\t\t\t\tlet bond = new Bond({from : afrom, to : ato})\r\n\t\t\t\t\t\tlet mesh = bond.model(model, atomlist)\r\n\t\t\t\t\t\tif (mesh){\r\n\t\t\t\t\t\t\tmesh.forEach( (m) => { \r\n\t\t\t\t\t\t\t\tm.model = model;\r\n\t\t\t\t\t\t\t\talist.push(m); \r\n\t\t\t\t\t\t\t})\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn alist;\r\n\t}\r\n\r\n\tget_tree_data(){\r\n\t\tlet data = { \r\n\t\t\tname : \"model\",\r\n\t\t\tchildren : [],\r\n\t\t};\r\n\t\tif ( Object.entries(this.mol).length > 0 ){\r\n\t\t\t// console.log(this.mol)\r\n\t\t\tfor (let mol in this.mol){\r\n\t\t\t\tlet mobj = { name : mol, children : []};\r\n\t\t\t\tdata.children.push(mobj);\r\n\t\t\t\tfor (let chain in this.mol[mol]) {\r\n\t\t\t\t\t// console.log('chain ...')\r\n\t\t\t\t\t// console.log(chain)\r\n\t\t\t\t\tlet cobj = { name : chain, children : []};\r\n\t\t\t\t\tmobj.children.push(cobj);\r\n\t\t\t\t\tfor (let group in this.mol[mol][chain]){\r\n\t\t\t\t\t\tlet gobj = { name : group, children : []};\r\n\t\t\t\t\t\tcobj.children.push(gobj);\r\n\t\t\t\t\t\tthis.mol[mol][chain][group].forEach ( (atm) => {\r\n\t\t\t\t\t\t\tgobj.children.push({ name : atm.name });\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn data;\r\n\t}\r\n\r\n\tget_tree_data2(){\r\n\t\tlet data = [];\r\n\r\n        const zNodes =[\r\n            { id:1, pId:0, name:\"pNode 1\", open:true},\r\n            { id:11, pId:1, name:\"pNode 11\"},\r\n            { id:111, pId:11, name:\"leaf node 111\"},\r\n            { id:112, pId:11, name:\"leaf node 112\"},\r\n            { id:113, pId:11, name:\"leaf node 113\"},\r\n            { id:114, pId:11, name:\"leaf node 114\"},\r\n            { id:12, pId:1, name:\"pNode 12\"},\r\n            { id:121, pId:12, name:\"leaf node 121\"},\r\n            { id:122, pId:12, name:\"leaf node 122\"},\r\n            { id:123, pId:12, name:\"leaf node 123\"},\r\n            { id:124, pId:12, name:\"leaf node 124\"},\r\n            { id:13, pId:1, name:\"pNode 13 - no child\", isParent:true},\r\n            { id:2, pId:0, name:\"pNode 2\"},\r\n            { id:21, pId:2, name:\"pNode 21\", open:true},\r\n            { id:211, pId:21, name:\"leaf node 211\"},\r\n            { id:212, pId:21, name:\"leaf node 212\"},\r\n            { id:213, pId:21, name:\"leaf node 213\"},\r\n            { id:214, pId:21, name:\"leaf node 214\"},\r\n            { id:22, pId:2, name:\"pNode 22\"},\r\n            { id:221, pId:22, name:\"leaf node 221\"},\r\n            { id:222, pId:22, name:\"leaf node 222\"},\r\n            { id:223, pId:22, name:\"leaf node 223\"},\r\n            { id:224, pId:22, name:\"leaf node 224\"},\r\n            { id:23, pId:2, name:\"pNode 23\"},\r\n            { id:231, pId:23, name:\"leaf node 231\"},\r\n            { id:232, pId:23, name:\"leaf node 232\"},\r\n            { id:233, pId:23, name:\"leaf node 233\"},\r\n            { id:234, pId:23, name:\"leaf node 234\"},\r\n            { id:3, pId:0, name:\"pNode 3 - no child\", isParent:true}\r\n        ];\r\n\r\n        Object.keys(this.mol).forEach ( (mname) => {\r\n        \tconst mid = mname;\r\n        \tdata.push({id: mid, pId: 0, name: mname, open: true});\r\n\t\t\tObject.keys(this.mol[mname]).forEach ( (chain) => {\r\n\t\t\t\tconst cid = `${mid}-${chain}`;\r\n\t\t\t\tdata.push({id: cid, pId: mid, name: chain, open: true});\r\n\t\t\t\t\tObject.keys(this.mol[mname][chain]).forEach( (group) =>{\r\n\t\t\t\t\t\tconst gid = `${cid}-${group}`;\r\n\t\t\t\t\t\tdata.push({id: gid, pId: cid, name: group})\r\n\t\t\t\t\t\tthis.mol[mname][chain][group].forEach( (atom) => {\r\n\t\t\t\t\t\t\tdata.push({id: atom.treeId(), pId: gid, name: atom.name})\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t})\r\n\t\treturn data;\r\n\t}\r\n\r\n\t//for a given molecule name, retur a list of all atoms\r\n\tatomlist(mname, centerize=true){\r\n\t\tif ( !(mname in this.mol)) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tlet xmax = -100000;\r\n\t\tlet ymax = -100000;\r\n\t\tlet zmax = -100000;\r\n\t\tlet xmin = 100000;\r\n\t\tlet ymin = 100000;\r\n\t\tlet zmin = 100000;\r\n\r\n\t\tlet atomlist = [];\r\n\t\tObject.keys(this.mol[mname]).forEach ( (chain) => {\r\n\t\t\t\tObject.keys(this.mol[mname][chain]).forEach( (group) =>{\r\n\t\t\t\t\tthis.mol[mname][chain][group].forEach( (atom) => {\r\n\t\t\t\t\t\tif(centerize){\r\n\t\t\t\t\t\t\txmax = Math.max(xmax, atom.x);\r\n\t\t\t\t\t\t\tymax = Math.max(ymax, atom.y);\r\n\t\t\t\t\t\t\tzmax = Math.max(zmax, atom.z);\r\n\t\t\t\t\t\t\txmin = Math.min(xmin, atom.x);\r\n\t\t\t\t\t\t\tymin = Math.min(ymin, atom.y);\r\n\t\t\t\t\t\t\tzmin = Math.min(zmin, atom.z);\r\n\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\tatomlist.push(atom);\r\n\t\t\t\t\t})\r\n\t\t\t\t})\r\n\t\t\t})\r\n\r\n\t\t// molecule center xyz\r\n\t\tif (centerize){\r\n\t\t\tlet xm = (xmax + xmin) * 0.5;\r\n\t\t\tlet ym = (ymax + ymin) * 0.5;\r\n\t\t\tlet zm = (zmax + zmin) * 0.5;\r\n\r\n\t\t\t// move molecule center to origin\r\n\t\t\tatomlist.forEach( (atom) => {\r\n\t\t\t\tatom.set(atom.x-xm, atom.y-ym, atom.z-zm)\r\n\t\t\t})\r\n\t\t}\r\n\r\n\t\treturn atomlist;\r\n\t}\r\n\r\n\tcenter(){\r\n\t\tlet xmax = -100000;\r\n\t\tlet ymax = -100000;\r\n\t\tlet zmax = -100000;\r\n\t\tlet xmin = 100000;\r\n\t\tlet ymin = 100000;\r\n\t\tlet zmin = 100000;\r\n\t\tthis.mol.chain.forEach( (o) => {\r\n\t\t\tlet x = o.position.x;\r\n\t\t\tlet y = o.position.y;\r\n\t\t\tlet z = o.position.z;\r\n\t\t\t// console.log(` ${o.name} (${x}, ${y}, ${z})`)\r\n\t\t\txmax = Math.max(xmax, x);\r\n\t\t\tymax = Math.max(ymax, y);\r\n\t\t\tzmax = Math.max(zmax, z);\r\n\t\t\txmin = Math.min(xmin, x);\r\n\t\t\tymin = Math.min(ymin, y);\r\n\t\t\tzmin = Math.min(zmin, z);\r\n\t\t})\r\n\t\t// console.log(`limits : x(${xmax}, ${xmin}); y(${ymax}, ${ymin}); z(${zmax}, ${zmin})`)\r\n\r\n\t\treturn [ (xmax + xmin) * 0.5, (ymax + ymin) * 0.5, (zmax + zmin) * 0.5 ];\r\n\t}\r\n\r\n\tget(name){\r\n\t\tlet obj = null;\r\n\t\tfor(let i=0; i<this.mol.chain.length; i++){\r\n\t\t\tif (this.mol.chain[i].name === name){\r\n\t\t\t\tobj = this.mol.chain[i];\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn obj;\r\n\t}\r\n}\r\n\r\nexport default MModel;\r\n","/*\r\n * D3 indented collapsible tree view class\r\n * Ref :\r\n * dependencies:\r\n *\r\n * Shijie Yao\r\n * 20190524\r\n */\r\n\r\nclass IndentedCollapsibleTree{\r\n\r\n    constructor(divid, ajson){\r\n        this.data = ajson;\r\n        this.margin = { top: 10, right: 10, bottom: 10, left: 10 };\r\n        let divObj = $(`#${divid}`);\r\n\r\n        this.width = divObj.width();\r\n        this.height = divObj.height();\r\n\r\n        if (this.height  === 0){\r\n            const size = 350;\r\n            divObj.css(\"height\", size);\r\n            this.height = size;\r\n        }\r\n\r\n        if (this.width  === 0){\r\n            const size = 250;\r\n            divObj.css(\"width\", size);\r\n            this.width = size;\r\n        }\r\n\r\n        //console.log(`final w=${this.width}; h=${this.height}`)\r\n        this.barHeight = 20;\r\n        this.barWidth = this.width * .8;\r\n        this.i = 0;\r\n        this.duration = 750;\r\n\r\n        this.tree = d3.tree().nodeSize([0, 30]);\r\n        this.root = this.tree(d3.hierarchy(ajson));\r\n\r\n        this.root.each( (d)=>{\r\n            // d.name = d.id; //transferring name to a name variable\r\n            d.id = this.i; //Assigning numerical Ids\r\n            this.i++;\r\n        });\r\n\r\n        // define the zoomListener which calls the zoom function on the \"zoom\" event constrained within the scaleExtents\r\n        let exfactor = 8;\r\n        this.zoomListener = d3.zoom()\r\n                  .scaleExtent([0.5, 3])\r\n                  .translateExtent([\r\n                      [-this.width * exfactor, -this.height * exfactor],\r\n                      [this.width * exfactor, this.height * exfactor]\r\n                  ])\r\n                  .on(\"zoom\", ()=>{ this.zoomed() });\r\n\r\n\r\n        this.root.x0 = this.root.x;\r\n        this.root.y0 = this.root.y;\r\n        this.svg = d3.select(`#${divid}`).append('svg');\r\n        this.view = this.svg.append('g')\r\n\r\n        this.svg.attr('width', \"100%\")\r\n        this.svg.attr('height', \"100%\")\r\n        this.svg.call(this.zoomListener);\r\n        this.svg.call(this.zoomListener.transform, d3.zoomIdentity.translate(10, 10));\r\n\r\n        // this.root.children.forEach(this.collapse);\r\n        // d3.select(\"#collapse-all\").classed(\"active\", true); \r\n        // d3.select(\"#expand-all\").classed(\"active\", false);\r\n        this.update(this.root);\r\n    }\r\n\r\n    zoomed(){\r\n        this.view.attr(\"transform\", d3.event.transform)\r\n    }\r\n\r\n    connector(d){\r\n        return `M${d.parent.y},${d.parent.x}V${d.x}H${d.y}`;\r\n    }\r\n\r\n    collapse (d) {\r\n        if (d.children) {\r\n          d._children = d.children;\r\n          d._children.forEach(_this.collapse);\r\n          d.children = null;\r\n        }\r\n    };\r\n\r\n    update (source) {\r\n        // Compute the new tree layout.\r\n        let nodes = this.tree(this.root);\r\n        let nodesSort = [];\r\n        nodes.eachBefore( (n) => {\r\n            nodesSort.push(n);\r\n        });\r\n\r\n        this.height = Math.max(500, nodesSort.length * this.barHeight + this.margin.top + this.margin.bottom);\r\n        let links = nodesSort.slice(1);\r\n        // Compute the \"layout\".\r\n        nodesSort.forEach( (n, i)=>{\r\n            n.x = i * this.barHeight;\r\n        });\r\n\r\n        this.view.transition()\r\n                        .duration(this.duration)\r\n                        .attr(\"height\", this.height);\r\n\r\n        // Update the nodes…\r\n        let node = this.view.selectAll('g.node')\r\n                  .data(nodesSort, (d) => {\r\n                      return d.id || (d.id = ++this.i);\r\n                  });\r\n\r\n        // Enter any new nodes at the parent's previous position.\r\n        let nodeEnter = node.enter().append('g')\r\n                  .attr('class', 'node')\r\n                  .attr('transform', () => {\r\n                    return `translate(${source.y0}, ${source.x0})`\r\n                  })\r\n                  .on('click', (d) => {\r\n                        if (d.children) {\r\n                            d._children = d.children;\r\n                            d.children = null;\r\n                        } else {\r\n                            d.children = d._children;\r\n                            d._children = null;\r\n                        }\r\n                        this.update(d);\r\n                  });\r\n\r\n        // nodeEnter.append('circle');\r\n        nodeEnter.each(function(d){\r\n            let thisGroup = d3.select(this);\r\n            if (d.data.size){ // use circle for terminal node, and square for middle nodes\r\n                return thisGroup.append('circle');\r\n            } else {\r\n                return thisGroup.append('rect');\r\n            }\r\n        })\r\n\r\n        nodeEnter.append('text')\r\n                  .attr('x', (d) => {\r\n                      return d.children || d._children ? 10 : 10;\r\n                  })\r\n                  .attr('dy', '.35em')\r\n                  .attr('text-anchor', (d) => {\r\n                      return d.children || d._children ? 'start' : 'start';\r\n                  })\r\n                  .text( (d) => {\r\n                      let name = d.data.name;     // name in format of, eg. \"phylum: Actinobacteria\"; mosue over will show \"phylum\"\r\n                      if (name.indexOf(\":\") > -1){\r\n                          name = name.split(\":\")[1].trim()\r\n                      }\r\n                      if (d.data.size) {\r\n                          name = `${name} : ${d.data.size}`\r\n                      }\r\n\r\n                      return name\r\n                  })\r\n                  .style(\"fill\", (d)=>{\r\n                      return ( !d.data.size && (d.data.name[0] == d.data.name[0].toLowerCase()) ) ? \"#0B7500\" : \"#000\";\r\n                  })\r\n                  .style(\"font-style\", (d)=>{\r\n\r\n                      return ( !d.data.size && (d.data.name[0] == d.data.name[0].toLowerCase()) ) ? \"italic\" : \"normal\"\r\n                  })\r\n                  .style(\"font-weight\", (d)=>{\r\n                      return ( !d.data.size && (d.data.name[0] == d.data.name[0].toLowerCase()) ) ? \"bold\" : \"normal\"\r\n                  })\r\n                  .style(\"opacity\", (d)=>{\r\n                      return ( !d.data.size && (d.data.name[0] == d.data.name[0].toLowerCase()) ) ? 0.5 : 1.0\r\n                  })\r\n                  .style('fill-opacity', 1e-6);\r\n                  nodeEnter.append('svg:title').text( (d) => {\r\n                      let name = d.data.name;     // name in format of, eg. \"phylum: Actinobacteria\"; mosue over will show \"phylum\"\r\n                      if (name.indexOf(\":\") > -1){\r\n                          name = name.split(\":\")[0].trim()\r\n                      }\r\n                      return name;\r\n                  });\r\n\r\n\r\n        // Transition nodes to their new position.\r\n        let nodeUpdate = node.merge(nodeEnter)\r\n                .transition()\r\n                .duration(this.duration);\r\n\r\n        nodeUpdate.\r\n                attr('transform', (d)=>{\r\n                    return `translate(${d.y}, ${d.x})`\r\n                });\r\n\r\n        // nodeUpdate.select('circle')\r\n        //         .attr('r', 4.5)\r\n        //         .style('fill', (d)=>{\r\n        //               // d._children not null => collapsed node\r\n        //               if ( !d.data.size && (d.data.name[0] == d.data.name[0].toLowerCase()) ){\r\n        //                   return d._children ? '#bbb' : '#0B7500';\r\n        //               } else {\r\n        //                   if (!d.data.size) {\r\n        //                       return d._children ? 'lightsteelblue' : '#fff';\r\n        //                   } else {\r\n        //                       return '#FFD700';\r\n        //                   }\r\n        //               }\r\n        //         });\r\n\r\n        nodeUpdate.select('rect')\r\n                .attr('width', 10)\r\n                .attr('height', 10)\r\n                .attr(\"x\", -5)\r\n                .attr(\"y\", -5)\r\n                // .attr('style', d => 'fill:#fff;opacity:0.2')\r\n                //.attr(\"style\", d => 'fill:#eee;opacity:1.0')\r\n                .attr('style', (d)=>{\r\n                      return d._children ? 'fill:#FFD700' : 'fill:#eee';\r\n                })\r\n                .style(\"stroke-width\", 0.5)\r\n                .style(\"stroke\", \"#777\")\r\n\r\n                //.style(\"stroke-width\", 0.5)\r\n                //.style(\"stroke\", \"#888\")\r\n                //.style('fill', (d)=>{\r\n                //      return \"#eee\"\r\n                //});\r\n\r\n        nodeUpdate.select('text')\r\n                .style('fill-opacity', 1);\r\n\r\n        // Transition exiting nodes to the parent's new position (and remove the nodes)\r\n        let nodeExit = node.exit().transition().duration(this.duration);\r\n\r\n        nodeExit\r\n                .attr('transform', (d)=>{\r\n                  return `translate(${source.y},${source.x})`\r\n                })\r\n                .remove();\r\n\r\n        nodeExit\r\n                .select('circle')\r\n                .attr('r', 1e-6);\r\n\r\n        nodeExit\r\n                .select('rect')\r\n                .attr('width', 1e-6)\r\n                .attr('height', 1e-6);\r\n\r\n        nodeExit\r\n                .select('text')\r\n                .style('fill-opacity', 1e-6);\r\n\r\n\r\n        // Update the links…\r\n        let link = this.view.selectAll('path.link')\r\n                .data(links, (d) => {\r\n                    // return d.target.id;\r\n                    let id = d.id + '->' + d.parent.id;\r\n                    return id;\r\n                });\r\n\r\n        // Enter any new links at the parent's previous position.\r\n        let linkEnter = link.enter().insert('path', 'g')\r\n                .attr('class', 'link')\r\n                .attr('d',  (d) => {\r\n                    let o = { x: source.x0, y: source.y0, parent: { x: source.x0, y: source.y0 } };\r\n                    return this.connector(o);\r\n                });\r\n\r\n        // Transition links to their new position.\r\n        link.merge(linkEnter).transition()\r\n                  .duration(this.duration)\r\n                  .attr('d', this.connector);\r\n\r\n        // // Transition exiting nodes to the parent's new position.\r\n        link.exit().transition()\r\n                  .duration(this.duration)\r\n                  .attr('d', (d) => {\r\n                      let o = { x: source.x, y: source.y, parent: { x: source.x, y: source.y } };\r\n                      return this.connector(o);\r\n                  })\r\n                  .remove();\r\n\r\n        // Stash the old positions for transition.\r\n        nodesSort.forEach( (d) => {\r\n            d.x0 = d.x;\r\n            d.y0 = d.y;\r\n        });\r\n    };\r\n}\r\n\r\nexport default IndentedCollapsibleTree;","//==================================\r\n// From https://gist.github.com/electricg/4435259l\r\nexport function mouseTarget(e) {\r\n    let targ;\r\n    if (!e) e = window.event;\r\n    if (e.target) targ = e.target;\r\n    else if (e.srcElement) targ = e.srcElement;\r\n    if (targ.nodeType == 3) // defeat Safari bug\r\n      targ = targ.parentNode;\r\n    return targ;\r\n}\r\n\r\n// Mouse position relative to the document\r\n// Which HTML element is the target of the event\r\nexport function mousePositionDocument(e) {\r\n    var posx = 0;\r\n    var posy = 0;\r\n    // if (!e) {\r\n    //   varying e = window.event;\r\n    // }\r\n\r\n    if (e.pageX || e.pageY) {\r\n        posx = e.pageX;\r\n        posy = e.pageY;\r\n    } else if (e.clientX || e.clientY) {\r\n        posx = e.clientX + document.body.scrollLeft + document.documentElement.scrollLeft;\r\n        posy = e.clientY + document.body.scrollTop + document.documentElement.scrollTop;\r\n    }\r\n    return {\r\n        x : posx,\r\n        y : posy\r\n    };\r\n}\r\n\r\n// Mouse position relative to the element\r\n// not working on IE7 and below\r\nexport function mousePositionElement(e) {\r\n    let mousePosDoc = mousePositionDocument(e);\r\n    let target = e.target; //this.mouseTarget(e);\r\n    let targetPos = findPos(target);\r\n    let posx = mousePosDoc.x - targetPos.left;\r\n    let posy = mousePosDoc.y - targetPos.top;\r\n    return {\r\n        x : posx,\r\n        y : posy\r\n    };\r\n}\r\n\r\n// Find out where an element is on the page\r\nexport function findPos(obj) {\r\n    let curleft = 0;\r\n    let curtop = 0;\r\n    if (obj.offsetParent) {\r\n        do {\r\n            curleft += obj.offsetLeft;\r\n            curtop += obj.offsetTop;\r\n        } while (obj = obj.offsetParent);\r\n    }\r\n    return {\r\n        left : curleft,\r\n        top : curtop\r\n    };\r\n}","export function appendInfo(txt, debug=false){\r\n\tif ( !debug || (debug && DEBUG) ){\r\n\t\tconst ctxt = $(\"#info\").val().trim();\r\n\t\ttxt = ctxt == \"\" ? txt : `${ctxt}\\n${txt.trim()}`;\r\n\t\t$(\"#info\").val(txt);\r\n\r\n\t\t// scroll to bottom\r\n\t\tconst psconsole = $('#info');\r\n    \tif(psconsole.length){\r\n       \t\tpsconsole.scrollTop(psconsole[0].scrollHeight - psconsole.height());\r\n    \t}\r\n\t}\r\n}\r\n\r\n\r\nexport function treeview(data){\r\n\t$(\"#moltree\").tree({\r\n\t    data: data,\r\n\t    autoOpen: true,\r\n\t    dragAndDrop: true\r\n\t});\r\n}","/**\r\n *\r\n * WebGL With Three.js - Lesson 10 - Drag and Drop Objects\r\n * http://www.script-tutorials.com/webgl-with-three-js-lesson-10/\r\n *\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n * \r\n * Copyright 2015, Script Tutorials\r\n * http://www.script-tutorials.com/\r\n */\r\n\r\nimport THREE from 'three';\r\nimport Stats from 'stats-js';\r\nimport MModel from './model';\r\nimport IndentedCollapsibleTree from \"./tree\"\r\nimport { mousePositionElement } from './mouse';\r\n// import { appendInfo, treeview } from './utils';\r\nimport { appendInfo } from './utils';\r\nclass MyGL2{\r\n    scene = null;\r\n    camera = null; \r\n    renderer = null;\r\n    container = null; \r\n    controls = null;\r\n    clock = null;\r\n    stats = null;\r\n    plane = null; \r\n    selection = null;\r\n    offset = new THREE.Vector3();\r\n    objects = null;\r\n    raycaster = new THREE.Raycaster();\r\n\r\n    model = null;\r\n    objects = null; \r\n    atomHighlight = null;\r\n\r\n    meshlist = [];\r\n    pick_cnt = 0; // # times the same object is clicked\r\n    pick_level = {\r\n        2 : \"group\",\r\n        3 : \"chain\",\r\n        4 : \"molecule\"\r\n    }\r\n    shiftdown  = false;\r\n\r\n    constructor(viewid) {\r\n\r\n        // Create main scene\r\n        this.view = document.getElementById(viewid);\r\n        this.initSize();\r\n        \r\n        this.scene = new THREE.Scene();\r\n        this.scene.fog = new THREE.FogExp2(0xcce0ff, 0.0003);\r\n\r\n        \r\n        // Prepare perspective camera\r\n        var VIEW_ANGLE = 75, ASPECT = this.width / this.height, NEAR = 0.1, FAR = 10000;\r\n        this.camera = new THREE.PerspectiveCamera(VIEW_ANGLE, ASPECT, NEAR, FAR);\r\n        this.scene.add(this.camera);\r\n\r\n        this.camera.position.set(10, 0, 0); // update on object range?\r\n\r\n        this.camera.lookAt(new THREE.Vector3(0,0,0));\r\n\r\n        // Prepare webgl renderer\r\n        // console.log(`w=${this.width}; h=${this.height}`)\r\n        this.renderer = new THREE.WebGLRenderer({ antialias:true });\r\n        this.renderer.setSize(this.width, this.height);\r\n        // this.renderer.setClearColor(this.scene.fog.color);\r\n        this.renderer.setClearColor(MyGL2.CLEAR_COLOR);\r\n\r\n        // Prepare container\r\n        if (this.view){\r\n            this.view.appendChild(this.renderer.domElement);\r\n        } else {\r\n            this.container = document.createElement('div');\r\n            document.body.appendChild(this.container);\r\n            this.container.appendChild(this.renderer.domElement);\r\n        }\r\n        \r\n\r\n        // Events\r\n        // THREEx.WindowResize(this.renderer, this.camera);\r\n        if (this.view){\r\n            this.view.addEventListener('mousedown', (e)=>this.onDocumentMouseDown(e), false);\r\n            this.view.addEventListener('mousemove', (e)=>this.onDocumentMouseMove(e), false);\r\n            this.view.addEventListener('mouseup', (e)=>this.onDocumentMouseUp(e), false);\r\n            this.view.addEventListener('resize', (e)=>this.resize(e), false);\r\n        } else {\r\n            document.addEventListener('mousedown', (e)=>this.onDocumentMouseDown(e), false);\r\n            document.addEventListener('mousemove', (e)=>this.onDocumentMouseMove(e), false);\r\n            document.addEventListener('mouseup', (e)=>this.onDocumentMouseUp(e), false);\r\n\r\n            // window.addEventListener('resize', (e)=>this.resize(e), false);\r\n        }\r\n        document.addEventListener(\"keydown\", (e)=>this.onDocumentKeyDown(e), false);\r\n        document.addEventListener(\"keyup\", (e)=>this.onDocumentKeyUp(e), false);\r\n        window.addEventListener('resize', (e)=>this.resize(e), false);\r\n        \r\n\r\n        // Prepare Orbit controls\r\n        if (this.view){\r\n            this.controls = new THREE.OrbitControls(this.camera, this.view); // control listen on dom\r\n        } else {\r\n            this.controls = new THREE.OrbitControls(this.camera); // control listen on document\r\n        }\r\n        \r\n        \r\n\r\n        this.controls.target = new THREE.Vector3(0, 0, 0);\r\n        this.controls.maxDistance = 150;\r\n\r\n        \r\n\r\n        // Prepare stats\r\n        this.showstats = true;\r\n        if (this.showstats){\r\n\r\n            // Prepare clock\r\n            this.clock = new THREE.Clock();\r\n\r\n            this.stats = new Stats();\r\n            // this.stats.domElement.style.position = 'absolute';\r\n            // this.stats.domElement.style.position = 'relative';\r\n            this.stats.domElement.style.top = '30px';   // init north height in index\r\n            this.stats.domElement.style.left = '1px';   // init west width in index\r\n            this.stats.domElement.style.zIndex = 1;\r\n            if (this.view){\r\n                this.view.appendChild( this.stats.domElement );\r\n            } else {\r\n                this.container.appendChild( this.stats.domElement );\r\n            }\r\n        } else {\r\n            this.stats = null;\r\n        }\r\n        // Display skybox\r\n        // this.addSkybox();\r\n  \r\n        \r\n        // Add lights\r\n        this.scene.add( new THREE.AmbientLight(0x444444));\r\n\r\n        var dirLight = new THREE.DirectionalLight(0xffffff);\r\n        dirLight.position.set(200, 200, 1000).normalize();\r\n        this.camera.add(dirLight);\r\n        this.camera.add(dirLight.target);\r\n\r\n\r\n\r\n        // Plane, that helps to determinate an intersection position\r\n        this.plane = new THREE.Mesh(new THREE.PlaneBufferGeometry(500, 500, 8, 8), new THREE.MeshBasicMaterial({color: 0xffffff}));\r\n        this.plane.visible = false;\r\n        this.scene.add(this.plane);\r\n\r\n        this.model = new MModel();  // init an empty model obj\r\n\r\n        // this way object will not be distorted\r\n        let render = () => {\r\n            // redraw when screen is refreshed (55hz), to maintain object propotion\r\n            requestAnimationFrame(render);\r\n            this.renderer.render(this.scene, this.camera);\r\n            this.update();\r\n        }\r\n        render();\r\n    }\r\n\r\n    loadMol(dstr, dtype, mname, mtype, callback){\r\n\r\n        mname = this.model.loadMol(dstr, dtype, mname);\r\n        if (mname){\r\n            callback(mname);\r\n            this.reloadModel(mname, mtype);\r\n        }\r\n       \r\n    }\r\n\r\n    reloadModel(mname, model=\"CPK\"){\r\n\r\n        if (this.meshlist.length == 0){\r\n            // clear the old mol\r\n            if (this.objects){\r\n                this.clearDisplayObjects(this.objects);\r\n                this.objects = null;\r\n            }\r\n\r\n            this.objects = this.model.get_gl_objects(mname, model);\r\n            if (this.objects){\r\n                this.objects.forEach( (o) => this.scene.add(o) );\r\n            }\r\n        } else {\r\n            this.clearDisplayObjects(this.meshlist);\r\n            let mlist = []\r\n            this.meshlist.forEach( (m) => {\r\n                const mesh = m.data.model(model, this.meshlist);\r\n                if (mesh){\r\n                    mlist.push(mesh);\r\n                }\r\n            })\r\n            \r\n            mlist.forEach( (o) => { this.scene.add(o) })\r\n        }\r\n        this.show_tree();\r\n        return this;\r\n    }\r\n\r\n    clearDisplayObjects(objects){\r\n        if (objects){\r\n            objects.forEach( (o) => {\r\n                // let obj = this.scene.getObjectByProperty(\"uuid\", o.uuid);\r\n                // obj.geometry.dispose();  // do not rm geometry - shared\r\n                o.material.dispose();\r\n                this.scene.remove(o);\r\n            })\r\n        }\r\n        return this;\r\n    }\r\n    \r\n\r\n    initSize(){\r\n        if (this.view){\r\n            this.width =  this.view.clientWidth;\r\n            this.height =  this.view.clientHeight;\r\n        } else {\r\n            this.width =  window.innerWidth;\r\n            this.height =  window.innerHeight;\r\n        }\r\n        // console.log(`init size : w=${this.width}; h=${this.height}`)\r\n    }\r\n\r\n    addSkybox() {\r\n        let iSBrsize = 500;\r\n        let uniforms = {\r\n          topColor: {type: \"c\", value: new THREE.Color(0x0077ff)}, bottomColor: {type: \"c\", value: new THREE.Color(0xffffff)},\r\n          offset: {type: \"f\", value: iSBrsize}, exponent: {type: \"f\", value: 1.5}\r\n        }\r\n\r\n        let skyGeo = new THREE.SphereGeometry(iSBrsize, 32, 32);\r\n        let skyMat = new THREE.ShaderMaterial({vertexShader: sbVertexShader, fragmentShader: sbFragmentShader, uniforms: uniforms, side: THREE.DoubleSide, fog: false});\r\n        let skyMesh = new THREE.Mesh(skyGeo, skyMat);\r\n        this.scene.add(skyMesh);\r\n    }\r\n\r\n    mouse_relative_position(event) {      \r\n        let {x, y} = mousePositionElement(event);\r\n        return [x, y]\r\n    }\r\n  \r\n    onDocumentMouseDown (event) {\r\n        // Get mouse position\r\n        // console.log('onDocumentMouseDown')\r\n        event.preventDefault();\r\n\r\n        // this.toggle_highlight();\r\n\r\n        let [ex, ey] = this.mouse_relative_position(event);\r\n        let mouseX = (ex / this.width) * 2 - 1;\r\n        let mouseY = -(ey / this.height) * 2 + 1;\r\n        // console.log(`clientX=${event.clientX}->pageX=${event.pageX}->${ex}; clientY=${event.clientY}->pageY=${event.pageY}->${ey}`)\r\n        // console.log(`offsetL=${this.view.offsetLeft}; offsetTop=${this.view.offsetTop}`)\r\n        // console.log('')\r\n        \r\n\r\n        if ( !this.objects ){ return; }\r\n\r\n        // Get 3D vector from 3D mouse position using 'unproject' function\r\n        let vector = new THREE.Vector3(mouseX, mouseY, 1);\r\n        vector.unproject(this.camera);\r\n\r\n        // Set the raycaster position\r\n        this.raycaster.set( this.camera.position, vector.sub( this.camera.position ).normalize() );\r\n\r\n        // Find all intersected objects\r\n        let intersects = this.raycaster.intersectObjects(this.objects);\r\n\r\n        if (intersects.length > 0 ) {\r\n            // console.log(`    selection count = ${intersects.length}`)\r\n            // console.dir(intersects)\r\n\r\n            // debug - change to random color for all hits\r\n            let color = this.random_color();\r\n            let atom = null;\r\n            let bond = null;\r\n            intersects.forEach( (o) => {\r\n                const mesh = o.object;\r\n                \r\n                if (!atom && o.object.type == \"ATOM\"){\r\n                    atom = o.object;\r\n                }\r\n                if (!bond && o.object.type == \"BOND\"){\r\n                    bond = o.object;\r\n                }\r\n            })\r\n\r\n            const hitObj = atom ? atom : bond;\r\n\r\n            if ( hitObj ){ // since bond to atom is \"under\", [0] will always be the atom\r\n                appendInfo(` ${hitObj.type}:${hitObj.molecule}:${hitObj.chain}:${hitObj.group}:${hitObj.name}`);\r\n                //  the controls\r\n                this.controls.enabled = false;\r\n\r\n                // Calculate the offset\r\n                let tmp = this.raycaster.intersectObject(this.plane);\r\n                this.offset.copy(tmp[0].point).sub(this.plane.position);\r\n\r\n                this.toggle_highlight(hitObj);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseMove (event) {\r\n        if ( !this.objects ){ return; }\r\n\r\n        event.preventDefault();\r\n\r\n        // Get mouse position\r\n        let [ex, ey] = this.mouse_relative_position(event);\r\n        let mouseX = (ex / this.width) * 2 - 1;\r\n        let mouseY = -(ey / this.height) * 2 + 1;\r\n\r\n        // Get 3D vector from 3D mouse position using 'unproject' function\r\n        let vector = new THREE.Vector3(mouseX, mouseY, 1);\r\n        vector.unproject(this.camera);\r\n\r\n        // Set the raycaster position\r\n        this.raycaster.set( this.camera.position, vector.sub( this.camera.position ).normalize() );\r\n\r\n        if (this.selection) {\r\n            // Check the position where the plane is intersected\r\n            let intersects = this.raycaster.intersectObject(this.plane);\r\n\r\n        } else {\r\n            // Update position of the plane if need\r\n            let intersects = this.raycaster.intersectObjects(this.objects);\r\n            if (intersects.length > 0) {\r\n              this.plane.position.copy(intersects[0].object.position);\r\n              this.plane.lookAt(this.camera.position);\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseUp (event) {\r\n        if ( !this.objects ){ return; }\r\n\r\n        // Enable the controls\r\n        this.controls.enabled = true;\r\n    }\r\n\r\n    onDocumentKeyDown (event){\r\n        let keyCode = event.which;\r\n        this.shiftdown = event.shiftKey;\r\n        console.log(`shiftkeydown=${this.shiftdown}`)\r\n    }\r\n\r\n    onDocumentKeyUp (event){\r\n        this.shiftdown = false;\r\n        console.log(`shiftkeydown=${this.shiftdown}`)\r\n    }\r\n\r\n    show_tree(){\r\n        $(\"#tree\").html(\"\");\r\n\r\n\r\n        // console.log(data)\r\n        // this.tree = new IndentedCollapsibleTree(\"tree\", this.model.get_tree_data());\r\n        const setting = {\r\n            data: {\r\n                simpleData: {\r\n                    enable: true\r\n                }\r\n            }\r\n        };\r\n\r\n        const zNodes =[\r\n            { id:1, pId:0, name:\"pNode 1\", open:true},\r\n            { id:11, pId:1, name:\"pNode 11\"},\r\n            { id:111, pId:11, name:\"leaf node 111\"},\r\n            { id:112, pId:11, name:\"leaf node 112\"},\r\n            { id:113, pId:11, name:\"leaf node 113\"},\r\n            { id:114, pId:11, name:\"leaf node 114\"},\r\n            { id:12, pId:1, name:\"pNode 12\"},\r\n            { id:121, pId:12, name:\"leaf node 121\"},\r\n            { id:122, pId:12, name:\"leaf node 122\"},\r\n            { id:123, pId:12, name:\"leaf node 123\"},\r\n            { id:124, pId:12, name:\"leaf node 124\"},\r\n            { id:13, pId:1, name:\"pNode 13 - no child\", isParent:true},\r\n            { id:2, pId:0, name:\"pNode 2\"},\r\n            { id:21, pId:2, name:\"pNode 21\", open:true},\r\n            { id:211, pId:21, name:\"leaf node 211\"},\r\n            { id:212, pId:21, name:\"leaf node 212\"},\r\n            { id:213, pId:21, name:\"leaf node 213\"},\r\n            { id:214, pId:21, name:\"leaf node 214\"},\r\n            { id:22, pId:2, name:\"pNode 22\"},\r\n            { id:221, pId:22, name:\"leaf node 221\"},\r\n            { id:222, pId:22, name:\"leaf node 222\"},\r\n            { id:223, pId:22, name:\"leaf node 223\"},\r\n            { id:224, pId:22, name:\"leaf node 224\"},\r\n            { id:23, pId:2, name:\"pNode 23\"},\r\n            { id:231, pId:23, name:\"leaf node 231\"},\r\n            { id:232, pId:23, name:\"leaf node 232\"},\r\n            { id:233, pId:23, name:\"leaf node 233\"},\r\n            { id:234, pId:23, name:\"leaf node 234\"},\r\n            { id:3, pId:0, name:\"pNode 3 - no child\", isParent:true}\r\n        ];\r\n        $.fn.zTree.init($(\"#tree\"), setting, this.model.get_tree_data2()); //zNodes);\r\n    }\r\n    toggle_highlight(hitObj){\r\n        if (hitObj == undefined){\r\n            return;\r\n        }\r\n\r\n        // const hasSelectedBefore = (hitObj && hitObj == this.selection) ? true : false;\r\n        const hasSelectedBefore = (this.meshlist.indexOf(hitObj) > -1);\r\n        if (!hasSelectedBefore){\r\n            this.pick_cnt = 1;\r\n            if (this.selection){\r\n                console.log(\"reset selected\")\r\n                this.update_selected(true);\r\n                this.selection = null;\r\n                this.meshlist = [];\r\n            }  \r\n            this.selection = hitObj;\r\n            this.meshlist.push(hitObj);\r\n            this.update_selected();\r\n            \r\n        } else {\r\n\r\n            this.pick_cnt++;\r\n            // console.log(`call collect_mesh for level ${this.pick_level[this.pick_cnt]}`)\r\n            const alist = this.collect_mesh(hitObj);\r\n            console.log(`old len=${this.meshlist.length}; new len=${alist.length}`)\r\n            if (alist.length > this.meshlist.length){\r\n                this.meshlist = alist;\r\n                this.update_selected();\r\n            } else if (alist.length == this.meshlist.length){   // has to be !\r\n                this.update_selected(true);  // reset\r\n            } else {\r\n                // error !\r\n            }     \r\n        }\r\n    }\r\n\r\n    collect_mesh(mesh){\r\n        const level = this.pick_level[this.pick_cnt];\r\n        let alist = []\r\n\r\n        // DEBUG: \r\n        this.mesh = mesh;\r\n        console.log(`${level}; mesh.level=${mesh.data[level]}`)\r\n\r\n        if (level){\r\n            const lname = mesh[level];\r\n            this.scene.children.forEach( (o) => {               \r\n                if (o.type == \"ATOM\" || o.type == \"BOND\"){\r\n                    if ( o.data.in(level, lname) ){\r\n                        alist.push(o)\r\n                    }\r\n                }\r\n            })\r\n        }\r\n        return alist;\r\n    }\r\n\r\n    update_selected(restore=false){\r\n        if (restore){\r\n            this.meshlist.forEach( (m) => {\r\n                m.material.transparent = false;\r\n                m.material.opacity = 1.0;\r\n                m.material.color = m.ori_color.clone();\r\n            })\r\n            this.selection = null;\r\n            this.meshlist = [];\r\n        } else {\r\n            this.meshlist.forEach( (m) => {\r\n                m.material.transparent = true;\r\n                m.material.opacity = 0.85;\r\n                if ( m.ori_color == undefined){\r\n                    m.ori_color = m.material.color.clone();\r\n                }\r\n                m.material.color.setHex(0xffff00);\r\n            })\r\n        }\r\n    }\r\n\r\n    moveMol(pos){\r\n        if (this.objects){\r\n            this.objects.forEach( (o) => {\r\n                // o.position.copy(pos);\r\n            })\r\n        } \r\n    }\r\n\r\n    // Update controls and stats\r\n    update() {\r\n        if ( !this.objects ){ return; }\r\n\r\n        if (this.showstats){\r\n            let delta = this.clock.getDelta();\r\n\r\n            this.controls.update(delta);\r\n            this.stats.update();\r\n        }\r\n    }\r\n\r\n    resize(e) {\r\n        console.log('resize()')\r\n        this.initSize();\r\n        this.renderer.setSize(this.width, this.height);\r\n        this.camera.aspect = this.width / this.height;\r\n        this.camera.updateProjectionMatrix();\r\n    }\r\n\r\n    setSize(width, height){\r\n        if (this.view){\r\n            [this.view.style.clientWidth, this.view.style.clientHeight] = [width, height];\r\n        }\r\n        this.resize();\r\n    }\r\n    random_color() {\r\n        return '#' + (function co(lor){   return (lor +=\r\n          [0,1,2,3,4,5,6,7,8,9,'a','b','c','d','e','f'][Math.floor(Math.random()*16)])\r\n          && (lor.length == 6) ?  lor : co(lor); })('');\r\n    }\r\n\r\n    setStatsPosition(top, left){\r\n        if (this.stats){\r\n            this.stats.domElement.style.top = `${top}px`;\r\n            this.stats.domElement.style.left = `${left}px`;\r\n        }\r\n    }\r\n}\r\n\r\nMyGL2.CLEAR_COLOR = 0x333333;   // glview backgroud color\r\n\r\nexport default MyGL2;","class BorderLayout {\n    constructor(root, onStateChanged){\n        this.onStateChanged = onStateChanged;\n        this.dragging = null;\n        this.area = {\n            north: {element: root.querySelector('.north')},\n            south: {element: root.querySelector('.south')},\n            west: {element: root.querySelector('.west')},\n            east: {element: root.querySelector('.east')},\n            center: {element: root.querySelector('.center')}\n        };\n        this.setInitSize('north', root.offsetHeight);\n        this.setInitSize('south', root.offsetHeight);\n        this.setInitSize('west', root.offsetWidth);\n        this.setInitSize('east', root.offsetWidth);\n\n        this.redraw();\n        // this.addDrag('north', 'bottom', {left: '0', bottom: '0', width: '100%', cursor: 'ns-resize'}, function (e) {\n        //     return this.origSize + e.clientY - this.origY;\n        // });\n\n        this.addDrag('south', 'top', {left: '0', top: '0', width: '100%', cursor: 'ns-resize'}, function (e) {\n            return this.origSize - e.clientY + this.origY;\n        });\n\n        this.addDrag('west', 'right', {right: '0', top: '0', height: '100%', cursor: 'ew-resize'}, function (e) {\n            return this.origSize + e.clientX - this.origX;\n        });\n\n        this.addDrag('east', 'left', {left: '0', top: '0', height: '100%', cursor: 'ew-resize'}, function (e) {\n            return this.origSize - e.clientX + this.origX;\n        });\n\n        root.addEventListener('mousemove', (e) => {\n            if (this.dragging) {\n                let target = this.area[this.dragging.target];\n                target.size = Math.min(target.maxSize, Math.max(target.minSize, this.dragging.size(e)));\n                this.redraw();\n            }\n        });\n        root.addEventListener('mouseup', (e) => {\n            this.dragEnded(this.onStateChanged);\n        });\n        root.addEventListener('mouseout', (e) => {\n            if (e.target === root) {\n                this.dragEnded(this.onStateChanged);\n            }\n        });\n\n        // initialize\n        this.dragEnded(onStateChanged);\n    }\n\n    resize(size) {\n        for (let prop in size) {\n            this.area[prop].size = size[prop];\n        }\n        this.redraw();\n    }\n\n    maximize(name) {\n        this.setSize(name, this.area[name].maxSize);\n    }\n\n    minimize(name) {\n        this.setSize(name, this.area[name].minSize);\n    }\n\n    hide(name) {\n        this.setSize(name, 0);\n    }\n\n    setSize(name, size) {\n        this.area[name].size = size;\n        this.redraw();\n    }\n\n    setInitSize(name, parent) {\n        let elem = this.area[name].element;\n        if (elem) {\n            this.area[name].size = this.unitToPx(elem.getAttribute('size') || '20%', parent);\n            this.area[name].minSize = this.unitToPx(elem.getAttribute('min-size') || '1px', parent);\n            this.area[name].maxSize = this.unitToPx(elem.getAttribute('max-size') || '40%', parent);\n        }\n    }\n\n    unitToPx(value, parent) {\n        if (this.endsWith(value, 'px')) {\n            return parseInt(value);\n        }\n        if (this.endsWith(value, '%')) {\n            return parseInt(value) / 100 * parent;\n        }\n    }\n\n    endsWith(s, end) {\n        return s.substring(s.length - end.length) === end;\n    }\n\n    redraw() {\n        this.setSizeAttr('north', {height: 'north'});\n        this.setSizeAttr('south', {height: 'south'});\n        this.setSizeAttr('west', {width: 'west', paddingTop: 'north', paddingBottom: 'south'});\n        this.setSizeAttr('east', {width: 'east', paddingTop: 'north', paddingBottom: 'south'});\n        this.setSizeAttr('center', {paddingTop: 'north', paddingLeft: 'west', paddingBottom: 'south', paddingRight: 'east'});\n    }\n\n    setSizeAttr(target, value) {\n        let elem = this.area[target].element;\n        if (elem) {\n            for (let prop in value) {\n                elem.style[prop] = this.area[value[prop]].size + 'px';\n            }\n        }\n    }\n\n    getSize(target, attr) {\n        let elem = this.area[target].element;\n        return elem && parseInt(elem[attr]);\n    }\n\n    addDrag(name, dragSide, style, sizeFn) {\n        let target = this.area[name].element;\n        if (target && target.classList.contains('resizable')) {\n            let drag = document.createElement('div');\n            drag.className = 'drag';\n            Object.assign(drag.style, style);\n            target.appendChild(drag);\n            let borderWidth = parseInt(getComputedStyle(drag)['border-top-width']);\n            let skey = `border${this.capital(dragSide)}`;\n            // console.log(skey)\n            // console.log(`${2 * borderWidth}px solid transparent`);\n            \n            target.querySelector('.content').style[skey] = 2 * borderWidth + 'px solid transparent';\n            // target.querySelector('.content').style['border' + this.capital(dragSide)] = 2 * borderWidth + 'px solid gray';\n            drag.addEventListener('mousedown', (e) => {\n                this.dragging = {\n                    target: name,\n                    origX: e.clientX,\n                    origY: e.clientY,\n                    origSize: this.area[name].size\n                };\n                this.dragging.size = sizeFn.bind(this.dragging);\n            });\n        }\n    }\n\n    capital(s) {\n        return s.charAt(0).toUpperCase() + s.substring(1);\n    }\n\n    dragEnded(listener) {\n        if (this.dragging) {\n            if (listener) {\n                listener({\n                    north: this.getSize('north', 'offsetHeight'),\n                    south: this.getSize('south', 'offsetHeight'),\n                    west: this.getSize('west', 'offsetWidth'),\n                    east: this.getSize('east', 'offsetWidth'),\n                    centerw: this.getSize('center', 'offsetWidth'),\n                    centerh: this.getSize('center', 'offsetHeight')\n                });\n            }\n            this.dragging = null;\n        }\n    }\n};\n\nexport default BorderLayout;\n","/*\n * JQuery zTree core v3.5.40\n * http://treejs.cn/\n *\n * Copyright (c) 2010 Hunter.z\n *\n * Licensed same as jquery - MIT License\n * http://www.opensource.org/licenses/mit-license.php\n *\n * email: hunter.z@263.net\n * Date: 2019-01-18\n */\n(function ($) {\n  var settings = {}, roots = {}, caches = {},\n    //default consts of core\n    _consts = {\n      className: {\n        BUTTON: \"button\",\n        LEVEL: \"level\",\n        ICO_LOADING: \"ico_loading\",\n        SWITCH: \"switch\",\n        NAME: 'node_name'\n      },\n      event: {\n        NODECREATED: \"ztree_nodeCreated\",\n        CLICK: \"ztree_click\",\n        EXPAND: \"ztree_expand\",\n        COLLAPSE: \"ztree_collapse\",\n        ASYNC_SUCCESS: \"ztree_async_success\",\n        ASYNC_ERROR: \"ztree_async_error\",\n        REMOVE: \"ztree_remove\",\n        SELECTED: \"ztree_selected\",\n        UNSELECTED: \"ztree_unselected\"\n      },\n      id: {\n        A: \"_a\",\n        ICON: \"_ico\",\n        SPAN: \"_span\",\n        SWITCH: \"_switch\",\n        UL: \"_ul\"\n      },\n      line: {\n        ROOT: \"root\",\n        ROOTS: \"roots\",\n        CENTER: \"center\",\n        BOTTOM: \"bottom\",\n        NOLINE: \"noline\",\n        LINE: \"line\"\n      },\n      folder: {\n        OPEN: \"open\",\n        CLOSE: \"close\",\n        DOCU: \"docu\"\n      },\n      node: {\n        CURSELECTED: \"curSelectedNode\"\n      }\n    },\n    //default setting of core\n    _setting = {\n      treeId: \"\",\n      treeObj: null,\n      view: {\n        addDiyDom: null,\n        autoCancelSelected: true,\n        dblClickExpand: true,\n        expandSpeed: \"fast\",\n        fontCss: {},\n        nameIsHTML: false,\n        selectedMulti: true,\n        showIcon: true,\n        showLine: true,\n        showTitle: true,\n        txtSelectedEnable: false\n      },\n      data: {\n        key: {\n          isParent: \"isParent\",\n          children: \"children\",\n          name: \"name\",\n          title: \"\",\n          url: \"url\",\n          icon: \"icon\"\n        },\n        simpleData: {\n          enable: false,\n          idKey: \"id\",\n          pIdKey: \"pId\",\n          rootPId: null\n        },\n        keep: {\n          parent: false,\n          leaf: false\n        }\n      },\n      async: {\n        enable: false,\n        contentType: \"application/x-www-form-urlencoded\",\n        type: \"post\",\n        dataType: \"text\",\n        headers: {},\n        xhrFields: {},\n        url: \"\",\n        autoParam: [],\n        otherParam: [],\n        dataFilter: null\n      },\n      callback: {\n        beforeAsync: null,\n        beforeClick: null,\n        beforeDblClick: null,\n        beforeRightClick: null,\n        beforeMouseDown: null,\n        beforeMouseUp: null,\n        beforeExpand: null,\n        beforeCollapse: null,\n        beforeRemove: null,\n\n        onAsyncError: null,\n        onAsyncSuccess: null,\n        onNodeCreated: null,\n        onClick: null,\n        onDblClick: null,\n        onRightClick: null,\n        onMouseDown: null,\n        onMouseUp: null,\n        onExpand: null,\n        onCollapse: null,\n        onRemove: null\n      }\n    },\n    //default root of core\n    //zTree use root to save full data\n    _initRoot = function (setting) {\n      var r = data.getRoot(setting);\n      if (!r) {\n        r = {};\n        data.setRoot(setting, r);\n      }\n      data.nodeChildren(setting, r, []);\n      r.expandTriggerFlag = false;\n      r.curSelectedList = [];\n      r.noSelection = true;\n      r.createdNodes = [];\n      r.zId = 0;\n      r._ver = (new Date()).getTime();\n    },\n    //default cache of core\n    _initCache = function (setting) {\n      var c = data.getCache(setting);\n      if (!c) {\n        c = {};\n        data.setCache(setting, c);\n      }\n      c.nodes = [];\n      c.doms = [];\n    },\n    //default bindEvent of core\n    _bindEvent = function (setting) {\n      var o = setting.treeObj,\n        c = consts.event;\n      o.bind(c.NODECREATED, function (event, treeId, node) {\n        tools.apply(setting.callback.onNodeCreated, [event, treeId, node]);\n      });\n\n      o.bind(c.CLICK, function (event, srcEvent, treeId, node, clickFlag) {\n        tools.apply(setting.callback.onClick, [srcEvent, treeId, node, clickFlag]);\n      });\n\n      o.bind(c.EXPAND, function (event, treeId, node) {\n        tools.apply(setting.callback.onExpand, [event, treeId, node]);\n      });\n\n      o.bind(c.COLLAPSE, function (event, treeId, node) {\n        tools.apply(setting.callback.onCollapse, [event, treeId, node]);\n      });\n\n      o.bind(c.ASYNC_SUCCESS, function (event, treeId, node, msg) {\n        tools.apply(setting.callback.onAsyncSuccess, [event, treeId, node, msg]);\n      });\n\n      o.bind(c.ASYNC_ERROR, function (event, treeId, node, XMLHttpRequest, textStatus, errorThrown) {\n        tools.apply(setting.callback.onAsyncError, [event, treeId, node, XMLHttpRequest, textStatus, errorThrown]);\n      });\n\n      o.bind(c.REMOVE, function (event, treeId, treeNode) {\n        tools.apply(setting.callback.onRemove, [event, treeId, treeNode]);\n      });\n\n      o.bind(c.SELECTED, function (event, treeId, node) {\n        tools.apply(setting.callback.onSelected, [treeId, node]);\n      });\n      o.bind(c.UNSELECTED, function (event, treeId, node) {\n        tools.apply(setting.callback.onUnSelected, [treeId, node]);\n      });\n    },\n    _unbindEvent = function (setting) {\n      var o = setting.treeObj,\n        c = consts.event;\n      o.unbind(c.NODECREATED)\n        .unbind(c.CLICK)\n        .unbind(c.EXPAND)\n        .unbind(c.COLLAPSE)\n        .unbind(c.ASYNC_SUCCESS)\n        .unbind(c.ASYNC_ERROR)\n        .unbind(c.REMOVE)\n        .unbind(c.SELECTED)\n        .unbind(c.UNSELECTED);\n    },\n    //default event proxy of core\n    _eventProxy = function (event) {\n      var target = event.target,\n        setting = data.getSetting(event.data.treeId),\n        tId = \"\", node = null,\n        nodeEventType = \"\", treeEventType = \"\",\n        nodeEventCallback = null, treeEventCallback = null,\n        tmp = null;\n\n      if (tools.eqs(event.type, \"mousedown\")) {\n        treeEventType = \"mousedown\";\n      } else if (tools.eqs(event.type, \"mouseup\")) {\n        treeEventType = \"mouseup\";\n      } else if (tools.eqs(event.type, \"contextmenu\")) {\n        treeEventType = \"contextmenu\";\n      } else if (tools.eqs(event.type, \"click\")) {\n        if (tools.eqs(target.tagName, \"span\") && target.getAttribute(\"treeNode\" + consts.id.SWITCH) !== null) {\n          tId = tools.getNodeMainDom(target).id;\n          nodeEventType = \"switchNode\";\n        } else {\n          tmp = tools.getMDom(setting, target, [{tagName: \"a\", attrName: \"treeNode\" + consts.id.A}]);\n          if (tmp) {\n            tId = tools.getNodeMainDom(tmp).id;\n            nodeEventType = \"clickNode\";\n          }\n        }\n      } else if (tools.eqs(event.type, \"dblclick\")) {\n        treeEventType = \"dblclick\";\n        tmp = tools.getMDom(setting, target, [{tagName: \"a\", attrName: \"treeNode\" + consts.id.A}]);\n        if (tmp) {\n          tId = tools.getNodeMainDom(tmp).id;\n          nodeEventType = \"switchNode\";\n        }\n      }\n      if (treeEventType.length > 0 && tId.length == 0) {\n        tmp = tools.getMDom(setting, target, [{tagName: \"a\", attrName: \"treeNode\" + consts.id.A}]);\n        if (tmp) {\n          tId = tools.getNodeMainDom(tmp).id;\n        }\n      }\n      // event to node\n      if (tId.length > 0) {\n        node = data.getNodeCache(setting, tId);\n        switch (nodeEventType) {\n          case \"switchNode\" :\n            var isParent = data.nodeIsParent(setting, node);\n            if (!isParent) {\n              nodeEventType = \"\";\n            } else if (tools.eqs(event.type, \"click\")\n              || (tools.eqs(event.type, \"dblclick\") && tools.apply(setting.view.dblClickExpand, [setting.treeId, node], setting.view.dblClickExpand))) {\n              nodeEventCallback = handler.onSwitchNode;\n            } else {\n              nodeEventType = \"\";\n            }\n            break;\n          case \"clickNode\" :\n            nodeEventCallback = handler.onClickNode;\n            break;\n        }\n      }\n      // event to zTree\n      switch (treeEventType) {\n        case \"mousedown\" :\n          treeEventCallback = handler.onZTreeMousedown;\n          break;\n        case \"mouseup\" :\n          treeEventCallback = handler.onZTreeMouseup;\n          break;\n        case \"dblclick\" :\n          treeEventCallback = handler.onZTreeDblclick;\n          break;\n        case \"contextmenu\" :\n          treeEventCallback = handler.onZTreeContextmenu;\n          break;\n      }\n      var proxyResult = {\n        stop: false,\n        node: node,\n        nodeEventType: nodeEventType,\n        nodeEventCallback: nodeEventCallback,\n        treeEventType: treeEventType,\n        treeEventCallback: treeEventCallback\n      };\n      return proxyResult\n    },\n    //default init node of core\n    _initNode = function (setting, level, n, parentNode, isFirstNode, isLastNode, openFlag) {\n      if (!n) return;\n      var r = data.getRoot(setting),\n        children = data.nodeChildren(setting, n);\n      n.level = level;\n      n.tId = setting.treeId + \"_\" + (++r.zId);\n      n.parentTId = parentNode ? parentNode.tId : null;\n      n.open = (typeof n.open == \"string\") ? tools.eqs(n.open, \"true\") : !!n.open;\n      var isParent = data.nodeIsParent(setting, n);\n      if (tools.isArray(children)) {\n        data.nodeIsParent(setting, n, true);\n        n.zAsync = true;\n      } else {\n        isParent = data.nodeIsParent(setting, n, isParent);\n        n.open = (isParent && !setting.async.enable) ? n.open : false;\n        n.zAsync = !isParent;\n      }\n      n.isFirstNode = isFirstNode;\n      n.isLastNode = isLastNode;\n      n.getParentNode = function () {\n        return data.getNodeCache(setting, n.parentTId);\n      };\n      n.getPreNode = function () {\n        return data.getPreNode(setting, n);\n      };\n      n.getNextNode = function () {\n        return data.getNextNode(setting, n);\n      };\n      n.getIndex = function () {\n        return data.getNodeIndex(setting, n);\n      };\n      n.getPath = function () {\n        return data.getNodePath(setting, n);\n      };\n      n.isAjaxing = false;\n      data.fixPIdKeyValue(setting, n);\n    },\n    _init = {\n      bind: [_bindEvent],\n      unbind: [_unbindEvent],\n      caches: [_initCache],\n      nodes: [_initNode],\n      proxys: [_eventProxy],\n      roots: [_initRoot],\n      beforeA: [],\n      afterA: [],\n      innerBeforeA: [],\n      innerAfterA: [],\n      zTreeTools: []\n    },\n    //method of operate data\n    data = {\n      addNodeCache: function (setting, node) {\n        data.getCache(setting).nodes[data.getNodeCacheId(node.tId)] = node;\n      },\n      getNodeCacheId: function (tId) {\n        return tId.substring(tId.lastIndexOf(\"_\") + 1);\n      },\n      addAfterA: function (afterA) {\n        _init.afterA.push(afterA);\n      },\n      addBeforeA: function (beforeA) {\n        _init.beforeA.push(beforeA);\n      },\n      addInnerAfterA: function (innerAfterA) {\n        _init.innerAfterA.push(innerAfterA);\n      },\n      addInnerBeforeA: function (innerBeforeA) {\n        _init.innerBeforeA.push(innerBeforeA);\n      },\n      addInitBind: function (bindEvent) {\n        _init.bind.push(bindEvent);\n      },\n      addInitUnBind: function (unbindEvent) {\n        _init.unbind.push(unbindEvent);\n      },\n      addInitCache: function (initCache) {\n        _init.caches.push(initCache);\n      },\n      addInitNode: function (initNode) {\n        _init.nodes.push(initNode);\n      },\n      addInitProxy: function (initProxy, isFirst) {\n        if (!!isFirst) {\n          _init.proxys.splice(0, 0, initProxy);\n        } else {\n          _init.proxys.push(initProxy);\n        }\n      },\n      addInitRoot: function (initRoot) {\n        _init.roots.push(initRoot);\n      },\n      addNodesData: function (setting, parentNode, index, nodes) {\n        var children = data.nodeChildren(setting, parentNode), params;\n        if (!children) {\n          children = data.nodeChildren(setting, parentNode, []);\n          index = -1;\n        } else if (index >= children.length) {\n          index = -1;\n        }\n\n        if (children.length > 0 && index === 0) {\n          children[0].isFirstNode = false;\n          view.setNodeLineIcos(setting, children[0]);\n        } else if (children.length > 0 && index < 0) {\n          children[children.length - 1].isLastNode = false;\n          view.setNodeLineIcos(setting, children[children.length - 1]);\n        }\n        data.nodeIsParent(setting, parentNode, true);\n\n        if (index < 0) {\n          data.nodeChildren(setting, parentNode, children.concat(nodes));\n        } else {\n          params = [index, 0].concat(nodes);\n          children.splice.apply(children, params);\n        }\n      },\n      addSelectedNode: function (setting, node) {\n        var root = data.getRoot(setting);\n        if (!data.isSelectedNode(setting, node)) {\n          root.curSelectedList.push(node);\n        }\n      },\n      addCreatedNode: function (setting, node) {\n        if (!!setting.callback.onNodeCreated || !!setting.view.addDiyDom) {\n          var root = data.getRoot(setting);\n          root.createdNodes.push(node);\n        }\n      },\n      addZTreeTools: function (zTreeTools) {\n        _init.zTreeTools.push(zTreeTools);\n      },\n      exSetting: function (s) {\n        $.extend(true, _setting, s);\n      },\n      fixPIdKeyValue: function (setting, node) {\n        if (setting.data.simpleData.enable) {\n          node[setting.data.simpleData.pIdKey] = node.parentTId ? node.getParentNode()[setting.data.simpleData.idKey] : setting.data.simpleData.rootPId;\n        }\n      },\n      getAfterA: function (setting, node, array) {\n        for (var i = 0, j = _init.afterA.length; i < j; i++) {\n          _init.afterA[i].apply(this, arguments);\n        }\n      },\n      getBeforeA: function (setting, node, array) {\n        for (var i = 0, j = _init.beforeA.length; i < j; i++) {\n          _init.beforeA[i].apply(this, arguments);\n        }\n      },\n      getInnerAfterA: function (setting, node, array) {\n        for (var i = 0, j = _init.innerAfterA.length; i < j; i++) {\n          _init.innerAfterA[i].apply(this, arguments);\n        }\n      },\n      getInnerBeforeA: function (setting, node, array) {\n        for (var i = 0, j = _init.innerBeforeA.length; i < j; i++) {\n          _init.innerBeforeA[i].apply(this, arguments);\n        }\n      },\n      getCache: function (setting) {\n        return caches[setting.treeId];\n      },\n      getNodeIndex: function (setting, node) {\n        if (!node) return null;\n        var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\n          children = data.nodeChildren(setting, p);\n        for (var i = 0, l = children.length - 1; i <= l; i++) {\n          if (children[i] === node) {\n            return i;\n          }\n        }\n        return -1;\n      },\n      getNextNode: function (setting, node) {\n        if (!node) return null;\n        var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\n          children = data.nodeChildren(setting, p);\n        for (var i = 0, l = children.length - 1; i <= l; i++) {\n          if (children[i] === node) {\n            return (i == l ? null : children[i + 1]);\n          }\n        }\n        return null;\n      },\n      getNodeByParam: function (setting, nodes, key, value) {\n        if (!nodes || !key) return null;\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var node = nodes[i];\n          if (node[key] == value) {\n            return nodes[i];\n          }\n          var children = data.nodeChildren(setting, node);\n          var tmp = data.getNodeByParam(setting, children, key, value);\n          if (tmp) return tmp;\n        }\n        return null;\n      },\n      getNodeCache: function (setting, tId) {\n        if (!tId) return null;\n        var n = caches[setting.treeId].nodes[data.getNodeCacheId(tId)];\n        return n ? n : null;\n      },\n      getNodePath: function (setting, node) {\n        if (!node) return null;\n\n        var path;\n        if (node.parentTId) {\n          path = node.getParentNode().getPath();\n        } else {\n          path = [];\n        }\n\n        if (path) {\n          path.push(node);\n        }\n\n        return path;\n      },\n      getNodes: function (setting) {\n        return data.nodeChildren(setting, data.getRoot(setting));\n      },\n      getNodesByParam: function (setting, nodes, key, value) {\n        if (!nodes || !key) return [];\n        var result = [];\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var node = nodes[i];\n          if (node[key] == value) {\n            result.push(node);\n          }\n          var children = data.nodeChildren(setting, node);\n          result = result.concat(data.getNodesByParam(setting, children, key, value));\n        }\n        return result;\n      },\n      getNodesByParamFuzzy: function (setting, nodes, key, value) {\n        if (!nodes || !key) return [];\n        var result = [];\n        value = value.toLowerCase();\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var node = nodes[i];\n          if (typeof node[key] == \"string\" && nodes[i][key].toLowerCase().indexOf(value) > -1) {\n            result.push(node);\n          }\n          var children = data.nodeChildren(setting, node);\n          result = result.concat(data.getNodesByParamFuzzy(setting, children, key, value));\n        }\n        return result;\n      },\n      getNodesByFilter: function (setting, nodes, filter, isSingle, invokeParam) {\n        if (!nodes) return (isSingle ? null : []);\n        var result = isSingle ? null : [];\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var node = nodes[i];\n          if (tools.apply(filter, [node, invokeParam], false)) {\n            if (isSingle) {\n              return node;\n            }\n            result.push(node);\n          }\n          var children = data.nodeChildren(setting, node);\n          var tmpResult = data.getNodesByFilter(setting, children, filter, isSingle, invokeParam);\n          if (isSingle && !!tmpResult) {\n            return tmpResult;\n          }\n          result = isSingle ? tmpResult : result.concat(tmpResult);\n        }\n        return result;\n      },\n      getPreNode: function (setting, node) {\n        if (!node) return null;\n        var p = node.parentTId ? node.getParentNode() : data.getRoot(setting),\n          children = data.nodeChildren(setting, p);\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i] === node) {\n            return (i == 0 ? null : children[i - 1]);\n          }\n        }\n        return null;\n      },\n      getRoot: function (setting) {\n        return setting ? roots[setting.treeId] : null;\n      },\n      getRoots: function () {\n        return roots;\n      },\n      getSetting: function (treeId) {\n        return settings[treeId];\n      },\n      getSettings: function () {\n        return settings;\n      },\n      getZTreeTools: function (treeId) {\n        var r = this.getRoot(this.getSetting(treeId));\n        return r ? r.treeTools : null;\n      },\n      initCache: function (setting) {\n        for (var i = 0, j = _init.caches.length; i < j; i++) {\n          _init.caches[i].apply(this, arguments);\n        }\n      },\n      initNode: function (setting, level, node, parentNode, preNode, nextNode) {\n        for (var i = 0, j = _init.nodes.length; i < j; i++) {\n          _init.nodes[i].apply(this, arguments);\n        }\n      },\n      initRoot: function (setting) {\n        for (var i = 0, j = _init.roots.length; i < j; i++) {\n          _init.roots[i].apply(this, arguments);\n        }\n      },\n      isSelectedNode: function (setting, node) {\n        var root = data.getRoot(setting);\n        for (var i = 0, j = root.curSelectedList.length; i < j; i++) {\n          if (node === root.curSelectedList[i]) return true;\n        }\n        return false;\n      },\n      nodeChildren: function (setting, node, newChildren) {\n        if (!node) {\n          return null;\n        }\n        var key = setting.data.key.children;\n        if (typeof newChildren !== 'undefined') {\n          node[key] = newChildren;\n        }\n        return node[key];\n      },\n      nodeIsParent: function (setting, node, newIsParent) {\n        if (!node) {\n          return false;\n        }\n        var key = setting.data.key.isParent;\n        if (typeof newIsParent !== 'undefined') {\n          if (typeof newIsParent === \"string\") {\n            newIsParent = tools.eqs(newIsParent, \"true\");\n          }\n          newIsParent = !!newIsParent;\n          node[key] = newIsParent;\n        } else if (typeof node[key] == \"string\"){\n          node[key] = tools.eqs(node[key], \"true\");\n        } else {\n          node[key] = !!node[key];\n        }\n        return node[key];\n      },\n      nodeName: function (setting, node, newName) {\n        var key = setting.data.key.name;\n        if (typeof newName !== 'undefined') {\n          node[key] = newName;\n        }\n        return \"\" + node[key];\n      },\n      nodeTitle: function (setting, node) {\n        var t = setting.data.key.title === \"\" ? setting.data.key.name : setting.data.key.title;\n        return \"\" + node[t];\n      },\n      removeNodeCache: function (setting, node) {\n        var children = data.nodeChildren(setting, node);\n        if (children) {\n          for (var i = 0, l = children.length; i < l; i++) {\n            data.removeNodeCache(setting, children[i]);\n          }\n        }\n        data.getCache(setting).nodes[data.getNodeCacheId(node.tId)] = null;\n      },\n      removeSelectedNode: function (setting, node) {\n        var root = data.getRoot(setting);\n        for (var i = 0, j = root.curSelectedList.length; i < j; i++) {\n          if (node === root.curSelectedList[i] || !data.getNodeCache(setting, root.curSelectedList[i].tId)) {\n            root.curSelectedList.splice(i, 1);\n            setting.treeObj.trigger(consts.event.UNSELECTED, [setting.treeId, node]);\n            i--;\n            j--;\n          }\n        }\n      },\n      setCache: function (setting, cache) {\n        caches[setting.treeId] = cache;\n      },\n      setRoot: function (setting, root) {\n        roots[setting.treeId] = root;\n      },\n      setZTreeTools: function (setting, zTreeTools) {\n        for (var i = 0, j = _init.zTreeTools.length; i < j; i++) {\n          _init.zTreeTools[i].apply(this, arguments);\n        }\n      },\n      transformToArrayFormat: function (setting, nodes) {\n        if (!nodes) return [];\n        var r = [];\n        if (tools.isArray(nodes)) {\n          for (var i = 0, l = nodes.length; i < l; i++) {\n            var node = nodes[i];\n            _do(node);\n          }\n        } else {\n          _do(nodes);\n        }\n        return r;\n\n        function _do(_node) {\n          r.push(_node);\n          var children = data.nodeChildren(setting, _node);\n          if (children) {\n            r = r.concat(data.transformToArrayFormat(setting, children));\n          }\n        }\n      },\n      transformTozTreeFormat: function (setting, sNodes) {\n        var i, l,\n          key = setting.data.simpleData.idKey,\n          parentKey = setting.data.simpleData.pIdKey;\n        if (!key || key == \"\" || !sNodes) return [];\n\n        if (tools.isArray(sNodes)) {\n          var r = [];\n          var tmpMap = {};\n          for (i = 0, l = sNodes.length; i < l; i++) {\n            tmpMap[sNodes[i][key]] = sNodes[i];\n          }\n          for (i = 0, l = sNodes.length; i < l; i++) {\n            var p = tmpMap[sNodes[i][parentKey]];\n            if (p && sNodes[i][key] != sNodes[i][parentKey]) {\n              var children = data.nodeChildren(setting, p);\n              if (!children) {\n                children = data.nodeChildren(setting, p, []);\n              }\n              children.push(sNodes[i]);\n            } else {\n              r.push(sNodes[i]);\n            }\n          }\n          return r;\n        } else {\n          return [sNodes];\n        }\n      }\n    },\n    //method of event proxy\n    event = {\n      bindEvent: function (setting) {\n        for (var i = 0, j = _init.bind.length; i < j; i++) {\n          _init.bind[i].apply(this, arguments);\n        }\n      },\n      unbindEvent: function (setting) {\n        for (var i = 0, j = _init.unbind.length; i < j; i++) {\n          _init.unbind[i].apply(this, arguments);\n        }\n      },\n      bindTree: function (setting) {\n        var eventParam = {\n            treeId: setting.treeId\n          },\n          o = setting.treeObj;\n        if (!setting.view.txtSelectedEnable) {\n          // for can't select text\n          o.bind('selectstart', handler.onSelectStart).css({\n            \"-moz-user-select\": \"-moz-none\"\n          });\n        }\n        o.bind('click', eventParam, event.proxy);\n        o.bind('dblclick', eventParam, event.proxy);\n        o.bind('mouseover', eventParam, event.proxy);\n        o.bind('mouseout', eventParam, event.proxy);\n        o.bind('mousedown', eventParam, event.proxy);\n        o.bind('mouseup', eventParam, event.proxy);\n        o.bind('contextmenu', eventParam, event.proxy);\n      },\n      unbindTree: function (setting) {\n        var o = setting.treeObj;\n        o.unbind('selectstart', handler.onSelectStart)\n          .unbind('click', event.proxy)\n          .unbind('dblclick', event.proxy)\n          .unbind('mouseover', event.proxy)\n          .unbind('mouseout', event.proxy)\n          .unbind('mousedown', event.proxy)\n          .unbind('mouseup', event.proxy)\n          .unbind('contextmenu', event.proxy);\n      },\n      doProxy: function (e) {\n        var results = [];\n        for (var i = 0, j = _init.proxys.length; i < j; i++) {\n          var proxyResult = _init.proxys[i].apply(this, arguments);\n          results.push(proxyResult);\n          if (proxyResult.stop) {\n            break;\n          }\n        }\n        return results;\n      },\n      proxy: function (e) {\n        var setting = data.getSetting(e.data.treeId);\n        if (!tools.uCanDo(setting, e)) return true;\n        var results = event.doProxy(e),\n          r = true, x = false;\n        for (var i = 0, l = results.length; i < l; i++) {\n          var proxyResult = results[i];\n          if (proxyResult.nodeEventCallback) {\n            x = true;\n            r = proxyResult.nodeEventCallback.apply(proxyResult, [e, proxyResult.node]) && r;\n          }\n          if (proxyResult.treeEventCallback) {\n            x = true;\n            r = proxyResult.treeEventCallback.apply(proxyResult, [e, proxyResult.node]) && r;\n          }\n        }\n        return r;\n      }\n    },\n    //method of event handler\n    handler = {\n      onSwitchNode: function (event, node) {\n        var setting = data.getSetting(event.data.treeId);\n        if (node.open) {\n          if (tools.apply(setting.callback.beforeCollapse, [setting.treeId, node], true) == false) return true;\n          data.getRoot(setting).expandTriggerFlag = true;\n          view.switchNode(setting, node);\n        } else {\n          if (tools.apply(setting.callback.beforeExpand, [setting.treeId, node], true) == false) return true;\n          data.getRoot(setting).expandTriggerFlag = true;\n          view.switchNode(setting, node);\n        }\n        return true;\n      },\n      onClickNode: function (event, node) {\n        var setting = data.getSetting(event.data.treeId),\n          clickFlag = ((setting.view.autoCancelSelected && (event.ctrlKey || event.metaKey)) && data.isSelectedNode(setting, node)) ? 0 : (setting.view.autoCancelSelected && (event.ctrlKey || event.metaKey) && setting.view.selectedMulti) ? 2 : 1;\n        if (tools.apply(setting.callback.beforeClick, [setting.treeId, node, clickFlag], true) == false) return true;\n        if (clickFlag === 0) {\n          view.cancelPreSelectedNode(setting, node);\n        } else {\n          view.selectNode(setting, node, clickFlag === 2);\n        }\n        setting.treeObj.trigger(consts.event.CLICK, [event, setting.treeId, node, clickFlag]);\n        return true;\n      },\n      onZTreeMousedown: function (event, node) {\n        var setting = data.getSetting(event.data.treeId);\n        if (tools.apply(setting.callback.beforeMouseDown, [setting.treeId, node], true)) {\n          tools.apply(setting.callback.onMouseDown, [event, setting.treeId, node]);\n        }\n        return true;\n      },\n      onZTreeMouseup: function (event, node) {\n        var setting = data.getSetting(event.data.treeId);\n        if (tools.apply(setting.callback.beforeMouseUp, [setting.treeId, node], true)) {\n          tools.apply(setting.callback.onMouseUp, [event, setting.treeId, node]);\n        }\n        return true;\n      },\n      onZTreeDblclick: function (event, node) {\n        var setting = data.getSetting(event.data.treeId);\n        if (tools.apply(setting.callback.beforeDblClick, [setting.treeId, node], true)) {\n          tools.apply(setting.callback.onDblClick, [event, setting.treeId, node]);\n        }\n        return true;\n      },\n      onZTreeContextmenu: function (event, node) {\n        var setting = data.getSetting(event.data.treeId);\n        if (tools.apply(setting.callback.beforeRightClick, [setting.treeId, node], true)) {\n          tools.apply(setting.callback.onRightClick, [event, setting.treeId, node]);\n        }\n        return (typeof setting.callback.onRightClick) != \"function\";\n      },\n      onSelectStart: function (e) {\n        var n = e.originalEvent.srcElement.nodeName.toLowerCase();\n        return (n === \"input\" || n === \"textarea\");\n      }\n    },\n    //method of tools for zTree\n    tools = {\n      apply: function (fun, param, defaultValue) {\n        if ((typeof fun) == \"function\") {\n          return fun.apply(zt, param ? param : []);\n        }\n        return defaultValue;\n      },\n      canAsync: function (setting, node) {\n        var children = data.nodeChildren(setting, node);\n        var isParent = data.nodeIsParent(setting, node);\n        return (setting.async.enable && node && isParent && !(node.zAsync || (children && children.length > 0)));\n      },\n      clone: function (obj) {\n        if (obj === null) return null;\n        var o = tools.isArray(obj) ? [] : {};\n        for (var i in obj) {\n          o[i] = (obj[i] instanceof Date) ? new Date(obj[i].getTime()) : (typeof obj[i] === \"object\" ? tools.clone(obj[i]) : obj[i]);\n        }\n        return o;\n      },\n      eqs: function (str1, str2) {\n        return str1.toLowerCase() === str2.toLowerCase();\n      },\n      isArray: function (arr) {\n        return Object.prototype.toString.apply(arr) === \"[object Array]\";\n      },\n      isElement: function (o) {\n        return (\n          typeof HTMLElement === \"object\" ? o instanceof HTMLElement : //DOM2\n            o && typeof o === \"object\" && o !== null && o.nodeType === 1 && typeof o.nodeName === \"string\"\n        );\n      },\n      $: function (node, exp, setting) {\n        if (!!exp && typeof exp != \"string\") {\n          setting = exp;\n          exp = \"\";\n        }\n        if (typeof node == \"string\") {\n          return $(node, setting ? setting.treeObj.get(0).ownerDocument : null);\n        } else {\n          return $(\"#\" + node.tId + exp, setting ? setting.treeObj : null);\n        }\n      },\n      getMDom: function (setting, curDom, targetExpr) {\n        if (!curDom) return null;\n        while (curDom && curDom.id !== setting.treeId) {\n          for (var i = 0, l = targetExpr.length; curDom.tagName && i < l; i++) {\n            if (tools.eqs(curDom.tagName, targetExpr[i].tagName) && curDom.getAttribute(targetExpr[i].attrName) !== null) {\n              return curDom;\n            }\n          }\n          curDom = curDom.parentNode;\n        }\n        return null;\n      },\n      getNodeMainDom: function (target) {\n        return ($(target).parent(\"li\").get(0) || $(target).parentsUntil(\"li\").parent().get(0));\n      },\n      isChildOrSelf: function (dom, parentId) {\n        return ($(dom).closest(\"#\" + parentId).length > 0);\n      },\n      uCanDo: function (setting, e) {\n        return true;\n      }\n    },\n    //method of operate ztree dom\n    view = {\n      addNodes: function (setting, parentNode, index, newNodes, isSilent) {\n        var isParent = data.nodeIsParent(setting, parentNode);\n        if (setting.data.keep.leaf && parentNode && !isParent) {\n          return;\n        }\n        if (!tools.isArray(newNodes)) {\n          newNodes = [newNodes];\n        }\n        if (setting.data.simpleData.enable) {\n          newNodes = data.transformTozTreeFormat(setting, newNodes);\n        }\n        if (parentNode) {\n          var target_switchObj = $$(parentNode, consts.id.SWITCH, setting),\n            target_icoObj = $$(parentNode, consts.id.ICON, setting),\n            target_ulObj = $$(parentNode, consts.id.UL, setting);\n\n          if (!parentNode.open) {\n            view.replaceSwitchClass(parentNode, target_switchObj, consts.folder.CLOSE);\n            view.replaceIcoClass(parentNode, target_icoObj, consts.folder.CLOSE);\n            parentNode.open = false;\n            target_ulObj.css({\n              \"display\": \"none\"\n            });\n          }\n\n          data.addNodesData(setting, parentNode, index, newNodes);\n          view.createNodes(setting, parentNode.level + 1, newNodes, parentNode, index);\n          if (!isSilent) {\n            view.expandCollapseParentNode(setting, parentNode, true);\n          }\n        } else {\n          data.addNodesData(setting, data.getRoot(setting), index, newNodes);\n          view.createNodes(setting, 0, newNodes, null, index);\n        }\n      },\n      appendNodes: function (setting, level, nodes, parentNode, index, initFlag, openFlag) {\n        if (!nodes) return [];\n        var html = [];\n\n        var tmpPNode = (parentNode) ? parentNode : data.getRoot(setting),\n          tmpPChild = data.nodeChildren(setting, tmpPNode),\n          isFirstNode, isLastNode;\n\n        if (!tmpPChild || index >= tmpPChild.length - nodes.length) {\n          index = -1;\n        }\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          var node = nodes[i];\n          if (initFlag) {\n            isFirstNode = ((index === 0 || tmpPChild.length == nodes.length) && (i == 0));\n            isLastNode = (index < 0 && i == (nodes.length - 1));\n            data.initNode(setting, level, node, parentNode, isFirstNode, isLastNode, openFlag);\n            data.addNodeCache(setting, node);\n          }\n          var isParent = data.nodeIsParent(setting, node);\n\n          var childHtml = [];\n          var children = data.nodeChildren(setting, node);\n          if (children && children.length > 0) {\n            //make child html first, because checkType\n            childHtml = view.appendNodes(setting, level + 1, children, node, -1, initFlag, openFlag && node.open);\n          }\n          if (openFlag) {\n            view.makeDOMNodeMainBefore(html, setting, node);\n            view.makeDOMNodeLine(html, setting, node);\n            data.getBeforeA(setting, node, html);\n            view.makeDOMNodeNameBefore(html, setting, node);\n            data.getInnerBeforeA(setting, node, html);\n            view.makeDOMNodeIcon(html, setting, node);\n            data.getInnerAfterA(setting, node, html);\n            view.makeDOMNodeNameAfter(html, setting, node);\n            data.getAfterA(setting, node, html);\n            if (isParent && node.open) {\n              view.makeUlHtml(setting, node, html, childHtml.join(''));\n            }\n            view.makeDOMNodeMainAfter(html, setting, node);\n            data.addCreatedNode(setting, node);\n          }\n        }\n        return html;\n      },\n      appendParentULDom: function (setting, node) {\n        var html = [],\n          nObj = $$(node, setting);\n        if (!nObj.get(0) && !!node.parentTId) {\n          view.appendParentULDom(setting, node.getParentNode());\n          nObj = $$(node, setting);\n        }\n        var ulObj = $$(node, consts.id.UL, setting);\n        if (ulObj.get(0)) {\n          ulObj.remove();\n        }\n        var children = data.nodeChildren(setting, node),\n          childHtml = view.appendNodes(setting, node.level + 1, children, node, -1, false, true);\n        view.makeUlHtml(setting, node, html, childHtml.join(''));\n        nObj.append(html.join(''));\n      },\n      asyncNode: function (setting, node, isSilent, callback) {\n        var i, l;\n        var isParent = data.nodeIsParent(setting, node);\n        if (node && !isParent) {\n          tools.apply(callback);\n          return false;\n        } else if (node && node.isAjaxing) {\n          return false;\n        } else if (tools.apply(setting.callback.beforeAsync, [setting.treeId, node], true) == false) {\n          tools.apply(callback);\n          return false;\n        }\n        if (node) {\n          node.isAjaxing = true;\n          var icoObj = $$(node, consts.id.ICON, setting);\n          icoObj.attr({\"style\": \"\", \"class\": consts.className.BUTTON + \" \" + consts.className.ICO_LOADING});\n        }\n\n        var tmpParam = {};\n        var autoParam = tools.apply(setting.async.autoParam, [setting.treeId, node], setting.async.autoParam);\n        for (i = 0, l = autoParam.length; node && i < l; i++) {\n          var pKey = autoParam[i].split(\"=\"), spKey = pKey;\n          if (pKey.length > 1) {\n            spKey = pKey[1];\n            pKey = pKey[0];\n          }\n          tmpParam[spKey] = node[pKey];\n        }\n        var otherParam = tools.apply(setting.async.otherParam, [setting.treeId, node], setting.async.otherParam);\n        if (tools.isArray(otherParam)) {\n          for (i = 0, l = otherParam.length; i < l; i += 2) {\n            tmpParam[otherParam[i]] = otherParam[i + 1];\n          }\n        } else {\n          for (var p in otherParam) {\n            tmpParam[p] = otherParam[p];\n          }\n        }\n\n        var _tmpV = data.getRoot(setting)._ver;\n        $.ajax({\n          contentType: setting.async.contentType,\n          cache: false,\n          type: setting.async.type,\n          url: tools.apply(setting.async.url, [setting.treeId, node], setting.async.url),\n          data: setting.async.contentType.indexOf('application/json') > -1 ? JSON.stringify(tmpParam) : tmpParam,\n          dataType: setting.async.dataType,\n          headers: setting.async.headers,\n          xhrFields: setting.async.xhrFields,\n          success: function (msg) {\n            if (_tmpV != data.getRoot(setting)._ver) {\n              return;\n            }\n            var newNodes = [];\n            try {\n              if (!msg || msg.length == 0) {\n                newNodes = [];\n              } else if (typeof msg == \"string\") {\n                newNodes = eval(\"(\" + msg + \")\");\n              } else {\n                newNodes = msg;\n              }\n            } catch (err) {\n              newNodes = msg;\n            }\n\n            if (node) {\n              node.isAjaxing = null;\n              node.zAsync = true;\n            }\n            view.setNodeLineIcos(setting, node);\n            if (newNodes && newNodes !== \"\") {\n              newNodes = tools.apply(setting.async.dataFilter, [setting.treeId, node, newNodes], newNodes);\n              view.addNodes(setting, node, -1, !!newNodes ? tools.clone(newNodes) : [], !!isSilent);\n            } else {\n              view.addNodes(setting, node, -1, [], !!isSilent);\n            }\n            setting.treeObj.trigger(consts.event.ASYNC_SUCCESS, [setting.treeId, node, msg]);\n            tools.apply(callback);\n          },\n          error: function (XMLHttpRequest, textStatus, errorThrown) {\n            if (_tmpV != data.getRoot(setting)._ver) {\n              return;\n            }\n            if (node) node.isAjaxing = null;\n            view.setNodeLineIcos(setting, node);\n            setting.treeObj.trigger(consts.event.ASYNC_ERROR, [setting.treeId, node, XMLHttpRequest, textStatus, errorThrown]);\n          }\n        });\n        return true;\n      },\n      cancelPreSelectedNode: function (setting, node, excludeNode) {\n        var list = data.getRoot(setting).curSelectedList,\n          i, n;\n        for (i = list.length - 1; i >= 0; i--) {\n          n = list[i];\n          if (node === n || (!node && (!excludeNode || excludeNode !== n))) {\n            $$(n, consts.id.A, setting).removeClass(consts.node.CURSELECTED);\n            if (node) {\n              data.removeSelectedNode(setting, node);\n              break;\n            } else {\n              list.splice(i, 1);\n              setting.treeObj.trigger(consts.event.UNSELECTED, [setting.treeId, n]);\n            }\n          }\n        }\n      },\n      createNodeCallback: function (setting) {\n        if (!!setting.callback.onNodeCreated || !!setting.view.addDiyDom) {\n          var root = data.getRoot(setting);\n          while (root.createdNodes.length > 0) {\n            var node = root.createdNodes.shift();\n            tools.apply(setting.view.addDiyDom, [setting.treeId, node]);\n            if (!!setting.callback.onNodeCreated) {\n              setting.treeObj.trigger(consts.event.NODECREATED, [setting.treeId, node]);\n            }\n          }\n        }\n      },\n      createNodes: function (setting, level, nodes, parentNode, index) {\n        if (!nodes || nodes.length == 0) return;\n        var root = data.getRoot(setting),\n          openFlag = !parentNode || parentNode.open || !!$$(data.nodeChildren(setting, parentNode)[0], setting).get(0);\n        root.createdNodes = [];\n        var zTreeHtml = view.appendNodes(setting, level, nodes, parentNode, index, true, openFlag),\n          parentObj, nextObj;\n\n        if (!parentNode) {\n          parentObj = setting.treeObj;\n          //setting.treeObj.append(zTreeHtml.join(''));\n        } else {\n          var ulObj = $$(parentNode, consts.id.UL, setting);\n          if (ulObj.get(0)) {\n            parentObj = ulObj;\n            //ulObj.append(zTreeHtml.join(''));\n          }\n        }\n        if (parentObj) {\n          if (index >= 0) {\n            nextObj = parentObj.children()[index];\n          }\n          if (index >= 0 && nextObj) {\n            $(nextObj).before(zTreeHtml.join(''));\n          } else {\n            parentObj.append(zTreeHtml.join(''));\n          }\n        }\n\n        view.createNodeCallback(setting);\n      },\n      destroy: function (setting) {\n        if (!setting) return;\n        data.initCache(setting);\n        data.initRoot(setting);\n        event.unbindTree(setting);\n        event.unbindEvent(setting);\n        setting.treeObj.empty();\n        delete settings[setting.treeId];\n      },\n      expandCollapseNode: function (setting, node, expandFlag, animateFlag, callback) {\n        var root = data.getRoot(setting);\n        var tmpCb, _callback;\n        if (!node) {\n          tools.apply(callback, []);\n          return;\n        }\n        var children = data.nodeChildren(setting, node);\n        var isParent = data.nodeIsParent(setting, node);\n        if (root.expandTriggerFlag) {\n          _callback = callback;\n          tmpCb = function () {\n            if (_callback) _callback();\n            if (node.open) {\n              setting.treeObj.trigger(consts.event.EXPAND, [setting.treeId, node]);\n            } else {\n              setting.treeObj.trigger(consts.event.COLLAPSE, [setting.treeId, node]);\n            }\n          };\n          callback = tmpCb;\n          root.expandTriggerFlag = false;\n        }\n        if (!node.open && isParent && ((!$$(node, consts.id.UL, setting).get(0)) || (children && children.length > 0 && !$$(children[0], setting).get(0)))) {\n          view.appendParentULDom(setting, node);\n          view.createNodeCallback(setting);\n        }\n        if (node.open == expandFlag) {\n          tools.apply(callback, []);\n          return;\n        }\n        var ulObj = $$(node, consts.id.UL, setting),\n          switchObj = $$(node, consts.id.SWITCH, setting),\n          icoObj = $$(node, consts.id.ICON, setting);\n\n        if (isParent) {\n          node.open = !node.open;\n          if (node.iconOpen && node.iconClose) {\n            icoObj.attr(\"style\", view.makeNodeIcoStyle(setting, node));\n          }\n\n          if (node.open) {\n            view.replaceSwitchClass(node, switchObj, consts.folder.OPEN);\n            view.replaceIcoClass(node, icoObj, consts.folder.OPEN);\n            if (animateFlag == false || setting.view.expandSpeed == \"\") {\n              ulObj.show();\n              tools.apply(callback, []);\n            } else {\n              if (children && children.length > 0) {\n                ulObj.slideDown(setting.view.expandSpeed, callback);\n              } else {\n                ulObj.show();\n                tools.apply(callback, []);\n              }\n            }\n          } else {\n            view.replaceSwitchClass(node, switchObj, consts.folder.CLOSE);\n            view.replaceIcoClass(node, icoObj, consts.folder.CLOSE);\n            if (animateFlag == false || setting.view.expandSpeed == \"\" || !(children && children.length > 0)) {\n              ulObj.hide();\n              tools.apply(callback, []);\n            } else {\n              ulObj.slideUp(setting.view.expandSpeed, callback);\n            }\n          }\n        } else {\n          tools.apply(callback, []);\n        }\n      },\n      expandCollapseParentNode: function (setting, node, expandFlag, animateFlag, callback) {\n        if (!node) return;\n        if (!node.parentTId) {\n          view.expandCollapseNode(setting, node, expandFlag, animateFlag, callback);\n          return;\n        } else {\n          view.expandCollapseNode(setting, node, expandFlag, animateFlag);\n        }\n        if (node.parentTId) {\n          view.expandCollapseParentNode(setting, node.getParentNode(), expandFlag, animateFlag, callback);\n        }\n      },\n      expandCollapseSonNode: function (setting, node, expandFlag, animateFlag, callback) {\n        var root = data.getRoot(setting),\n          treeNodes = (node) ? data.nodeChildren(setting, node) : data.nodeChildren(setting, root),\n          selfAnimateSign = (node) ? false : animateFlag,\n          expandTriggerFlag = data.getRoot(setting).expandTriggerFlag;\n        data.getRoot(setting).expandTriggerFlag = false;\n        if (treeNodes) {\n          for (var i = 0, l = treeNodes.length; i < l; i++) {\n            if (treeNodes[i]) view.expandCollapseSonNode(setting, treeNodes[i], expandFlag, selfAnimateSign);\n          }\n        }\n        data.getRoot(setting).expandTriggerFlag = expandTriggerFlag;\n        view.expandCollapseNode(setting, node, expandFlag, animateFlag, callback);\n      },\n      isSelectedNode: function (setting, node) {\n        if (!node) {\n          return false;\n        }\n        var list = data.getRoot(setting).curSelectedList,\n          i;\n        for (i = list.length - 1; i >= 0; i--) {\n          if (node === list[i]) {\n            return true;\n          }\n        }\n        return false;\n      },\n      makeDOMNodeIcon: function (html, setting, node) {\n        var nameStr = data.nodeName(setting, node),\n          name = setting.view.nameIsHTML ? nameStr : nameStr.replace(/&/g, '&amp;').replace(/</g, '&lt;').replace(/>/g, '&gt;');\n        html.push(\"<span id='\", node.tId, consts.id.ICON,\n          \"' title='' treeNode\", consts.id.ICON, \" class='\", view.makeNodeIcoClass(setting, node),\n          \"' style='\", view.makeNodeIcoStyle(setting, node), \"'></span><span id='\", node.tId, consts.id.SPAN,\n          \"' class='\", consts.className.NAME,\n          \"'>\", name, \"</span>\");\n      },\n      makeDOMNodeLine: function (html, setting, node) {\n        html.push(\"<span id='\", node.tId, consts.id.SWITCH, \"' title='' class='\", view.makeNodeLineClass(setting, node), \"' treeNode\", consts.id.SWITCH, \"></span>\");\n      },\n      makeDOMNodeMainAfter: function (html, setting, node) {\n        html.push(\"</li>\");\n      },\n      makeDOMNodeMainBefore: function (html, setting, node) {\n        html.push(\"<li id='\", node.tId, \"' class='\", consts.className.LEVEL, node.level, \"' tabindex='0' hidefocus='true' treenode>\");\n      },\n      makeDOMNodeNameAfter: function (html, setting, node) {\n        html.push(\"</a>\");\n      },\n      makeDOMNodeNameBefore: function (html, setting, node) {\n        var title = data.nodeTitle(setting, node),\n          url = view.makeNodeUrl(setting, node),\n          fontcss = view.makeNodeFontCss(setting, node),\n          fontStyle = [];\n        for (var f in fontcss) {\n          fontStyle.push(f, \":\", fontcss[f], \";\");\n        }\n        html.push(\"<a id='\", node.tId, consts.id.A, \"' class='\", consts.className.LEVEL, node.level, \"' treeNode\", consts.id.A, \" onclick=\\\"\", (node.click || ''),\n          \"\\\" \", ((url != null && url.length > 0) ? \"href='\" + url + \"'\" : \"\"), \" target='\", view.makeNodeTarget(node), \"' style='\", fontStyle.join(''),\n          \"'\");\n        if (tools.apply(setting.view.showTitle, [setting.treeId, node], setting.view.showTitle) && title) {\n          html.push(\"title='\", title.replace(/'/g, \"&#39;\").replace(/</g, '&lt;').replace(/>/g, '&gt;'), \"'\");\n        }\n        html.push(\">\");\n      },\n      makeNodeFontCss: function (setting, node) {\n        var fontCss = tools.apply(setting.view.fontCss, [setting.treeId, node], setting.view.fontCss);\n        return (fontCss && ((typeof fontCss) != \"function\")) ? fontCss : {};\n      },\n      makeNodeIcoClass: function (setting, node) {\n        var icoCss = [\"ico\"];\n        if (!node.isAjaxing) {\n          var isParent = data.nodeIsParent(setting, node);\n          icoCss[0] = (node.iconSkin ? node.iconSkin + \"_\" : \"\") + icoCss[0];\n          if (isParent) {\n            icoCss.push(node.open ? consts.folder.OPEN : consts.folder.CLOSE);\n          } else {\n            icoCss.push(consts.folder.DOCU);\n          }\n        }\n        return consts.className.BUTTON + \" \" + icoCss.join('_');\n      },\n      makeNodeIcoStyle: function (setting, node) {\n        var icoStyle = [];\n        if (!node.isAjaxing) {\n          var isParent = data.nodeIsParent(setting, node);\n          var icon = (isParent && node.iconOpen && node.iconClose) ? (node.open ? node.iconOpen : node.iconClose) : node[setting.data.key.icon];\n          if (icon) icoStyle.push(\"background:url(\", icon, \") 0 0 no-repeat;\");\n          if (setting.view.showIcon == false || !tools.apply(setting.view.showIcon, [setting.treeId, node], true)) {\n            icoStyle.push(\"width:0px;height:0px;\");\n          }\n        }\n        return icoStyle.join('');\n      },\n      makeNodeLineClass: function (setting, node) {\n        var lineClass = [];\n        if (setting.view.showLine) {\n          if (node.level == 0 && node.isFirstNode && node.isLastNode) {\n            lineClass.push(consts.line.ROOT);\n          } else if (node.level == 0 && node.isFirstNode) {\n            lineClass.push(consts.line.ROOTS);\n          } else if (node.isLastNode) {\n            lineClass.push(consts.line.BOTTOM);\n          } else {\n            lineClass.push(consts.line.CENTER);\n          }\n        } else {\n          lineClass.push(consts.line.NOLINE);\n        }\n        if (data.nodeIsParent(setting, node)) {\n          lineClass.push(node.open ? consts.folder.OPEN : consts.folder.CLOSE);\n        } else {\n          lineClass.push(consts.folder.DOCU);\n        }\n        return view.makeNodeLineClassEx(node) + lineClass.join('_');\n      },\n      makeNodeLineClassEx: function (node) {\n        return consts.className.BUTTON + \" \" + consts.className.LEVEL + node.level + \" \" + consts.className.SWITCH + \" \";\n      },\n      makeNodeTarget: function (node) {\n        return (node.target || \"_blank\");\n      },\n      makeNodeUrl: function (setting, node) {\n        var urlKey = setting.data.key.url;\n        return node[urlKey] ? node[urlKey] : null;\n      },\n      makeUlHtml: function (setting, node, html, content) {\n        html.push(\"<ul id='\", node.tId, consts.id.UL, \"' class='\", consts.className.LEVEL, node.level, \" \", view.makeUlLineClass(setting, node), \"' style='display:\", (node.open ? \"block\" : \"none\"), \"'>\");\n        html.push(content);\n        html.push(\"</ul>\");\n      },\n      makeUlLineClass: function (setting, node) {\n        return ((setting.view.showLine && !node.isLastNode) ? consts.line.LINE : \"\");\n      },\n      removeChildNodes: function (setting, node) {\n        if (!node) return;\n        var nodes = data.nodeChildren(setting, node);\n        if (!nodes) return;\n\n        for (var i = 0, l = nodes.length; i < l; i++) {\n          data.removeNodeCache(setting, nodes[i]);\n        }\n        data.removeSelectedNode(setting);\n        delete node[setting.data.key.children];\n\n        if (!setting.data.keep.parent) {\n          data.nodeIsParent(setting, node, false);\n          node.open = false;\n          var tmp_switchObj = $$(node, consts.id.SWITCH, setting),\n            tmp_icoObj = $$(node, consts.id.ICON, setting);\n          view.replaceSwitchClass(node, tmp_switchObj, consts.folder.DOCU);\n          view.replaceIcoClass(node, tmp_icoObj, consts.folder.DOCU);\n          $$(node, consts.id.UL, setting).remove();\n        } else {\n          $$(node, consts.id.UL, setting).empty();\n        }\n      },\n      scrollIntoView: function (setting, dom) {\n        if (!dom) {\n          return;\n        }\n        // support IE 7\n        if (typeof Element === 'undefined') {\n          var contRect = setting.treeObj.get(0).getBoundingClientRect(),\n            findMeRect = dom.getBoundingClientRect();\n          if (findMeRect.top < contRect.top || findMeRect.bottom > contRect.bottom\n            || findMeRect.right > contRect.right || findMeRect.left < contRect.left) {\n            dom.scrollIntoView();\n          }\n          return;\n        }\n        // CC-BY jocki84@googlemail.com, https://gist.github.com/jocki84/6ffafd003387179a988e\n        if (!Element.prototype.scrollIntoViewIfNeeded) {\n          Element.prototype.scrollIntoViewIfNeeded = function (centerIfNeeded) {\n            \"use strict\";\n\n            function makeRange(start, length) {\n              return {\"start\": start, \"length\": length, \"end\": start + length};\n            }\n\n            function coverRange(inner, outer) {\n              if (\n                false === centerIfNeeded ||\n                (outer.start < inner.end && inner.start < outer.end)\n              ) {\n                return Math.max(\n                  inner.end - outer.length,\n                  Math.min(outer.start, inner.start)\n                );\n              }\n              return (inner.start + inner.end - outer.length) / 2;\n            }\n\n            function makePoint(x, y) {\n              return {\n                \"x\": x,\n                \"y\": y,\n                \"translate\": function translate(dX, dY) {\n                  return makePoint(x + dX, y + dY);\n                }\n              };\n            }\n\n            function absolute(elem, pt) {\n              while (elem) {\n                pt = pt.translate(elem.offsetLeft, elem.offsetTop);\n                elem = elem.offsetParent;\n              }\n              return pt;\n            }\n\n            var target = absolute(this, makePoint(0, 0)),\n              extent = makePoint(this.offsetWidth, this.offsetHeight),\n              elem = this.parentNode,\n              origin;\n\n            while (elem instanceof HTMLElement) {\n              // Apply desired scroll amount.\n              origin = absolute(elem, makePoint(elem.clientLeft, elem.clientTop));\n              elem.scrollLeft = coverRange(\n                makeRange(target.x - origin.x, extent.x),\n                makeRange(elem.scrollLeft, elem.clientWidth)\n              );\n              elem.scrollTop = coverRange(\n                makeRange(target.y - origin.y, extent.y),\n                makeRange(elem.scrollTop, elem.clientHeight)\n              );\n\n              // Determine actual scroll amount by reading back scroll properties.\n              target = target.translate(-elem.scrollLeft, -elem.scrollTop);\n              elem = elem.parentNode;\n            }\n          };\n        }\n        dom.scrollIntoViewIfNeeded();\n      },\n      setFirstNode: function (setting, parentNode) {\n        var children = data.nodeChildren(setting, parentNode);\n        if (children.length > 0) {\n          children[0].isFirstNode = true;\n        }\n      },\n      setLastNode: function (setting, parentNode) {\n        var children = data.nodeChildren(setting, parentNode);\n        if (children.length > 0) {\n          children[children.length - 1].isLastNode = true;\n        }\n      },\n      removeNode: function (setting, node) {\n        var root = data.getRoot(setting),\n          parentNode = (node.parentTId) ? node.getParentNode() : root;\n\n        node.isFirstNode = false;\n        node.isLastNode = false;\n        node.getPreNode = function () {\n          return null;\n        };\n        node.getNextNode = function () {\n          return null;\n        };\n\n        if (!data.getNodeCache(setting, node.tId)) {\n          return;\n        }\n\n        $$(node, setting).remove();\n        data.removeNodeCache(setting, node);\n        data.removeSelectedNode(setting, node);\n\n        var children = data.nodeChildren(setting, parentNode);\n        for (var i = 0, l = children.length; i < l; i++) {\n          if (children[i].tId == node.tId) {\n            children.splice(i, 1);\n            break;\n          }\n        }\n        view.setFirstNode(setting, parentNode);\n        view.setLastNode(setting, parentNode);\n\n        var tmp_ulObj, tmp_switchObj, tmp_icoObj,\n          childLength = children.length;\n\n        //repair nodes old parent\n        if (!setting.data.keep.parent && childLength == 0) {\n          //old parentNode has no child nodes\n          data.nodeIsParent(setting, parentNode, false);\n          parentNode.open = false;\n          delete parentNode[setting.data.key.children];\n          tmp_ulObj = $$(parentNode, consts.id.UL, setting);\n          tmp_switchObj = $$(parentNode, consts.id.SWITCH, setting);\n          tmp_icoObj = $$(parentNode, consts.id.ICON, setting);\n          view.replaceSwitchClass(parentNode, tmp_switchObj, consts.folder.DOCU);\n          view.replaceIcoClass(parentNode, tmp_icoObj, consts.folder.DOCU);\n          tmp_ulObj.css(\"display\", \"none\");\n\n        } else if (setting.view.showLine && childLength > 0) {\n          //old parentNode has child nodes\n          var newLast = children[childLength - 1];\n          tmp_ulObj = $$(newLast, consts.id.UL, setting);\n          tmp_switchObj = $$(newLast, consts.id.SWITCH, setting);\n          tmp_icoObj = $$(newLast, consts.id.ICON, setting);\n          if (parentNode == root) {\n            if (children.length == 1) {\n              //node was root, and ztree has only one root after move node\n              view.replaceSwitchClass(newLast, tmp_switchObj, consts.line.ROOT);\n            } else {\n              var tmp_first_switchObj = $$(children[0], consts.id.SWITCH, setting);\n              view.replaceSwitchClass(children[0], tmp_first_switchObj, consts.line.ROOTS);\n              view.replaceSwitchClass(newLast, tmp_switchObj, consts.line.BOTTOM);\n            }\n          } else {\n            view.replaceSwitchClass(newLast, tmp_switchObj, consts.line.BOTTOM);\n          }\n          tmp_ulObj.removeClass(consts.line.LINE);\n        }\n      },\n      replaceIcoClass: function (node, obj, newName) {\n        if (!obj || node.isAjaxing) return;\n        var tmpName = obj.attr(\"class\");\n        if (tmpName == undefined) return;\n        var tmpList = tmpName.split(\"_\");\n        switch (newName) {\n          case consts.folder.OPEN:\n          case consts.folder.CLOSE:\n          case consts.folder.DOCU:\n            tmpList[tmpList.length - 1] = newName;\n            break;\n        }\n        obj.attr(\"class\", tmpList.join(\"_\"));\n      },\n      replaceSwitchClass: function (node, obj, newName) {\n        if (!obj) return;\n        var tmpName = obj.attr(\"class\");\n        if (tmpName == undefined) return;\n        var tmpList = tmpName.split(\"_\");\n        switch (newName) {\n          case consts.line.ROOT:\n          case consts.line.ROOTS:\n          case consts.line.CENTER:\n          case consts.line.BOTTOM:\n          case consts.line.NOLINE:\n            tmpList[0] = view.makeNodeLineClassEx(node) + newName;\n            break;\n          case consts.folder.OPEN:\n          case consts.folder.CLOSE:\n          case consts.folder.DOCU:\n            tmpList[1] = newName;\n            break;\n        }\n        obj.attr(\"class\", tmpList.join(\"_\"));\n        if (newName !== consts.folder.DOCU) {\n          obj.removeAttr(\"disabled\");\n        } else {\n          obj.attr(\"disabled\", \"disabled\");\n        }\n      },\n      selectNode: function (setting, node, addFlag) {\n        if (!addFlag) {\n          view.cancelPreSelectedNode(setting, null, node);\n        }\n        $$(node, consts.id.A, setting).addClass(consts.node.CURSELECTED);\n        data.addSelectedNode(setting, node);\n        setting.treeObj.trigger(consts.event.SELECTED, [setting.treeId, node]);\n      },\n      setNodeFontCss: function (setting, treeNode) {\n        var aObj = $$(treeNode, consts.id.A, setting),\n          fontCss = view.makeNodeFontCss(setting, treeNode);\n        if (fontCss) {\n          aObj.css(fontCss);\n        }\n      },\n      setNodeLineIcos: function (setting, node) {\n        if (!node) return;\n        var switchObj = $$(node, consts.id.SWITCH, setting),\n          ulObj = $$(node, consts.id.UL, setting),\n          icoObj = $$(node, consts.id.ICON, setting),\n          ulLine = view.makeUlLineClass(setting, node);\n        if (ulLine.length == 0) {\n          ulObj.removeClass(consts.line.LINE);\n        } else {\n          ulObj.addClass(ulLine);\n        }\n        switchObj.attr(\"class\", view.makeNodeLineClass(setting, node));\n        if (data.nodeIsParent(setting, node)) {\n          switchObj.removeAttr(\"disabled\");\n        } else {\n          switchObj.attr(\"disabled\", \"disabled\");\n        }\n        icoObj.removeAttr(\"style\");\n        icoObj.attr(\"style\", view.makeNodeIcoStyle(setting, node));\n        icoObj.attr(\"class\", view.makeNodeIcoClass(setting, node));\n      },\n      setNodeName: function (setting, node) {\n        var title = data.nodeTitle(setting, node),\n          nObj = $$(node, consts.id.SPAN, setting);\n        nObj.empty();\n        if (setting.view.nameIsHTML) {\n          nObj.html(data.nodeName(setting, node));\n        } else {\n          nObj.text(data.nodeName(setting, node));\n        }\n        if (tools.apply(setting.view.showTitle, [setting.treeId, node], setting.view.showTitle)) {\n          var aObj = $$(node, consts.id.A, setting);\n          aObj.attr(\"title\", !title ? \"\" : title);\n        }\n      },\n      setNodeTarget: function (setting, node) {\n        var aObj = $$(node, consts.id.A, setting);\n        aObj.attr(\"target\", view.makeNodeTarget(node));\n      },\n      setNodeUrl: function (setting, node) {\n        var aObj = $$(node, consts.id.A, setting),\n          url = view.makeNodeUrl(setting, node);\n        if (url == null || url.length == 0) {\n          aObj.removeAttr(\"href\");\n        } else {\n          aObj.attr(\"href\", url);\n        }\n      },\n      switchNode: function (setting, node) {\n        if (node.open || !tools.canAsync(setting, node)) {\n          view.expandCollapseNode(setting, node, !node.open);\n        } else if (setting.async.enable) {\n          if (!view.asyncNode(setting, node)) {\n            view.expandCollapseNode(setting, node, !node.open);\n            return;\n          }\n        } else if (node) {\n          view.expandCollapseNode(setting, node, !node.open);\n        }\n      }\n    };\n  // zTree defind\n  $.fn.zTree = {\n    consts: _consts,\n    _z: {\n      tools: tools,\n      view: view,\n      event: event,\n      data: data\n    },\n    getZTreeObj: function (treeId) {\n      var o = data.getZTreeTools(treeId);\n      return o ? o : null;\n    },\n    destroy: function (treeId) {\n      if (!!treeId && treeId.length > 0) {\n        view.destroy(data.getSetting(treeId));\n      } else {\n        for (var s in settings) {\n          view.destroy(settings[s]);\n        }\n      }\n    },\n    init: function (obj, zSetting, zNodes) {\n      var setting = tools.clone(_setting);\n      $.extend(true, setting, zSetting);\n      setting.treeId = obj.attr(\"id\");\n      setting.treeObj = obj;\n      setting.treeObj.empty();\n      settings[setting.treeId] = setting;\n      //For some older browser,(e.g., ie6)\n      if (typeof document.body.style.maxHeight === \"undefined\") {\n        setting.view.expandSpeed = \"\";\n      }\n      data.initRoot(setting);\n      var root = data.getRoot(setting);\n      zNodes = zNodes ? tools.clone(tools.isArray(zNodes) ? zNodes : [zNodes]) : [];\n      if (setting.data.simpleData.enable) {\n        data.nodeChildren(setting, root, data.transformTozTreeFormat(setting, zNodes));\n      } else {\n        data.nodeChildren(setting, root, zNodes);\n      }\n\n      data.initCache(setting);\n      event.unbindTree(setting);\n      event.bindTree(setting);\n      event.unbindEvent(setting);\n      event.bindEvent(setting);\n\n      var zTreeTools = {\n        setting: setting,\n        addNodes: function (parentNode, index, newNodes, isSilent) {\n          if (!parentNode) parentNode = null;\n          var isParent = data.nodeIsParent(setting, parentNode);\n          if (parentNode && !isParent && setting.data.keep.leaf) return null;\n\n          var i = parseInt(index, 10);\n          if (isNaN(i)) {\n            isSilent = !!newNodes;\n            newNodes = index;\n            index = -1;\n          } else {\n            index = i;\n          }\n          if (!newNodes) return null;\n\n\n          var xNewNodes = tools.clone(tools.isArray(newNodes) ? newNodes : [newNodes]);\n\n          function addCallback() {\n            view.addNodes(setting, parentNode, index, xNewNodes, (isSilent == true));\n          }\n\n          if (tools.canAsync(setting, parentNode)) {\n            view.asyncNode(setting, parentNode, isSilent, addCallback);\n          } else {\n            addCallback();\n          }\n          return xNewNodes;\n        },\n        cancelSelectedNode: function (node) {\n          view.cancelPreSelectedNode(setting, node);\n        },\n        destroy: function () {\n          view.destroy(setting);\n        },\n        expandAll: function (expandFlag) {\n          expandFlag = !!expandFlag;\n          view.expandCollapseSonNode(setting, null, expandFlag, true);\n          return expandFlag;\n        },\n        expandNode: function (node, expandFlag, sonSign, focus, callbackFlag) {\n          if (!node || !data.nodeIsParent(setting, node)) return null;\n          if (expandFlag !== true && expandFlag !== false) {\n            expandFlag = !node.open;\n          }\n          callbackFlag = !!callbackFlag;\n\n          if (callbackFlag && expandFlag && (tools.apply(setting.callback.beforeExpand, [setting.treeId, node], true) == false)) {\n            return null;\n          } else if (callbackFlag && !expandFlag && (tools.apply(setting.callback.beforeCollapse, [setting.treeId, node], true) == false)) {\n            return null;\n          }\n          if (expandFlag && node.parentTId) {\n            view.expandCollapseParentNode(setting, node.getParentNode(), expandFlag, false);\n          }\n          if (expandFlag === node.open && !sonSign) {\n            return null;\n          }\n\n          data.getRoot(setting).expandTriggerFlag = callbackFlag;\n          if (!tools.canAsync(setting, node) && sonSign) {\n            view.expandCollapseSonNode(setting, node, expandFlag, true, showNodeFocus);\n          } else {\n            node.open = !expandFlag;\n            view.switchNode(this.setting, node);\n            showNodeFocus();\n          }\n          return expandFlag;\n\n          function showNodeFocus() {\n            var a = $$(node, setting).get(0);\n            if (a && focus !== false) {\n              view.scrollIntoView(setting, a);\n            }\n          }\n        },\n        getNodes: function () {\n          return data.getNodes(setting);\n        },\n        getNodeByParam: function (key, value, parentNode) {\n          if (!key) return null;\n          return data.getNodeByParam(setting, parentNode ? data.nodeChildren(setting, parentNode) : data.getNodes(setting), key, value);\n        },\n        getNodeByTId: function (tId) {\n          return data.getNodeCache(setting, tId);\n        },\n        getNodesByParam: function (key, value, parentNode) {\n          if (!key) return null;\n          return data.getNodesByParam(setting, parentNode ? data.nodeChildren(setting, parentNode) : data.getNodes(setting), key, value);\n        },\n        getNodesByParamFuzzy: function (key, value, parentNode) {\n          if (!key) return null;\n          return data.getNodesByParamFuzzy(setting, parentNode ? data.nodeChildren(setting, parentNode) : data.getNodes(setting), key, value);\n        },\n        getNodesByFilter: function (filter, isSingle, parentNode, invokeParam) {\n          isSingle = !!isSingle;\n          if (!filter || (typeof filter != \"function\")) return (isSingle ? null : []);\n          return data.getNodesByFilter(setting, parentNode ? data.nodeChildren(setting, parentNode) : data.getNodes(setting), filter, isSingle, invokeParam);\n        },\n        getNodeIndex: function (node) {\n          if (!node) return null;\n          var parentNode = (node.parentTId) ? node.getParentNode() : data.getRoot(setting);\n          var children = data.nodeChildren(setting, parentNode);\n          for (var i = 0, l = children.length; i < l; i++) {\n            if (children[i] == node) return i;\n          }\n          return -1;\n        },\n        getSelectedNodes: function () {\n          var r = [], list = data.getRoot(setting).curSelectedList;\n          for (var i = 0, l = list.length; i < l; i++) {\n            r.push(list[i]);\n          }\n          return r;\n        },\n        isSelectedNode: function (node) {\n          return data.isSelectedNode(setting, node);\n        },\n        reAsyncChildNodesPromise: function (parentNode, reloadType, isSilent) {\n          var promise = new Promise(function (resolve, reject) {\n            try {\n              zTreeTools.reAsyncChildNodes(parentNode, reloadType, isSilent, function () {\n                resolve(parentNode);\n              });\n            } catch (e) {\n              reject(e);\n            }\n          });\n          return promise;\n        },\n        reAsyncChildNodes: function (parentNode, reloadType, isSilent, callback) {\n          if (!this.setting.async.enable) return;\n          var isRoot = !parentNode;\n          if (isRoot) {\n            parentNode = data.getRoot(setting);\n          }\n          if (reloadType == \"refresh\") {\n            var children = data.nodeChildren(setting, parentNode);\n            for (var i = 0, l = children ? children.length : 0; i < l; i++) {\n              data.removeNodeCache(setting, children[i]);\n            }\n            data.removeSelectedNode(setting);\n            data.nodeChildren(setting, parentNode, []);\n            if (isRoot) {\n              this.setting.treeObj.empty();\n            } else {\n              var ulObj = $$(parentNode, consts.id.UL, setting);\n              ulObj.empty();\n            }\n          }\n          view.asyncNode(this.setting, isRoot ? null : parentNode, !!isSilent, callback);\n        },\n        refresh: function () {\n          this.setting.treeObj.empty();\n          var root = data.getRoot(setting),\n            nodes = data.nodeChildren(setting, root);\n          data.initRoot(setting);\n          data.nodeChildren(setting, root, nodes);\n          data.initCache(setting);\n          view.createNodes(setting, 0, data.nodeChildren(setting, root), null, -1);\n        },\n        removeChildNodes: function (node) {\n          if (!node) return null;\n          var nodes = data.nodeChildren(setting, node);\n          view.removeChildNodes(setting, node);\n          return nodes ? nodes : null;\n        },\n        removeNode: function (node, callbackFlag) {\n          if (!node) return;\n          callbackFlag = !!callbackFlag;\n          if (callbackFlag && tools.apply(setting.callback.beforeRemove, [setting.treeId, node], true) == false) return;\n          view.removeNode(setting, node);\n          if (callbackFlag) {\n            this.setting.treeObj.trigger(consts.event.REMOVE, [setting.treeId, node]);\n          }\n        },\n        selectNode: function (node, addFlag, isSilent) {\n          if (!node) return;\n          if (tools.uCanDo(setting)) {\n            addFlag = setting.view.selectedMulti && addFlag;\n            if (node.parentTId) {\n              view.expandCollapseParentNode(setting, node.getParentNode(), true, false, showNodeFocus);\n            } else if (!isSilent) {\n              try {\n                $$(node, setting).focus().blur();\n              } catch (e) {\n              }\n            }\n            view.selectNode(setting, node, addFlag);\n          }\n\n          function showNodeFocus() {\n            if (isSilent) {\n              return;\n            }\n            var a = $$(node, setting).get(0);\n            view.scrollIntoView(setting, a);\n          }\n        },\n        transformTozTreeNodes: function (simpleNodes) {\n          return data.transformTozTreeFormat(setting, simpleNodes);\n        },\n        transformToArray: function (nodes) {\n          return data.transformToArrayFormat(setting, nodes);\n        },\n        updateNode: function (node, checkTypeFlag) {\n          if (!node) return;\n          var nObj = $$(node, setting);\n          if (nObj.get(0) && tools.uCanDo(setting)) {\n            view.setNodeName(setting, node);\n            view.setNodeTarget(setting, node);\n            view.setNodeUrl(setting, node);\n            view.setNodeLineIcos(setting, node);\n            view.setNodeFontCss(setting, node);\n          }\n        }\n      };\n      root.treeTools = zTreeTools;\n      data.setZTreeTools(setting, zTreeTools);\n      var children = data.nodeChildren(setting, root);\n      if (children && children.length > 0) {\n        view.createNodes(setting, 0, children, null, -1);\n      } else if (setting.async.enable && setting.async.url && setting.async.url !== '') {\n        view.asyncNode(setting);\n      }\n      return zTreeTools;\n    }\n  };\n\n  var zt = $.fn.zTree,\n    $$ = tools.$,\n    consts = zt.consts;\n})(jQuery);","// /**\r\n//  *\r\n//  * WebGL With Three.js - Lesson 10 - Drag and Drop Objects\r\n//  * http://www.script-tutorials.com/webgl-with-three-js-lesson-10/\r\n//  *\r\n//  * Licensed under the MIT license.\r\n//  * http://www.opensource.org/licenses/mit-license.php\r\n//  * \r\n//  * Copyright 2015, Script Tutorials\r\n//  * http://www.script-tutorials.com/\r\n//  */\r\n\r\nimport './OrbitControls';\r\nimport MyGL2 from './mygl2';\r\nimport BorderLayout from './border/border';\r\nimport \"./tree/jquery.ztree.core.js\"\r\n\r\nvar GL = null;\r\n// when DOM is ready ...\r\n$( function() {\r\n\tnew BorderLayout(document.querySelectorAll('.border-layout')[0], glviewsize);\r\n\tGL = new MyGL2(\"glview\");\r\n\tif (process.env.NODE_ENV === 'development'){\r\n\t\twindow.GL = GL;\r\n\t}\r\n} );\r\n\r\n\r\nfunction change_display_model(){\r\n\tlet model = $(\"#model_select\").val();\r\n\tif (GL.model){\r\n\t\tGL.reloadModel($(\"#molecule\").val(), model);\r\n\t}\r\n}\r\n\r\nfunction load_demo_molecule(){\r\n\tconsole.log('demo')\r\n\tGL.loadMol($(\"#demo1_data\").html().trim(), \"pdb\", \"guanosine\", $(\"#model_select\").val(), loadedMoleculeName);\r\n}\r\n\r\n//Retrieve the first (and only!) File from the FileList object\r\nfunction handleFileSelect(evt) {\r\n    var f = evt.target.files[0]; \r\n\r\n    if (f) {\r\n      \tlet r = new FileReader();\r\n      \tr.onload = (e) => { \r\n\t      \tlet contents = e.target.result;\r\n\t      \tlet toks = f.name.split('.')\r\n\t      \tlet ftype = toks[toks.length-1].toLowerCase();\r\n\t      \tif ([\"xyz\", \"pdb\"].indexOf(ftype) > -1 ) {\r\n\t      \t\tlet mname = f.name.substr(0, f.name.length - 4);\r\n\t      \t\tGL.loadMol(contents, ftype, mname, $(\"#model_select\").val(), loadedMoleculeName)\r\n\t      \t} else {\r\n\t      \t\talert(`Unsupported module file type : ${f.name}`)\r\n\t      \t}\r\n      \t}\r\n      \t/*\r\n      \t\tf.name -> file name string\r\n      \t\tf.size \r\n      \t*/\r\n      \tconsole.log(f)\r\n      \tr.readAsText(f);\r\n    } else { \r\n      \talert(\"Failed to load file\");\r\n    } \r\n}\r\n\r\nfunction loadedMoleculeName(mname){\r\n\tif (mname){\r\n\t\t// remove empty options\r\n\t\t$(\"#molecule option\").filter(function() {\r\n\t\t\t    return !this.value || $.trim(this.value).length == 0 || $.trim(this.text).length == 0;\r\n\t\t\t}).remove();\r\n\r\n\t\tlet opt = document.createElement(\"option\");\r\n\t\topt.innerHTML = mname;\r\n\t\tdocument.getElementById(\"molecule\").insertBefore(opt, document.getElementById(\"molecule\").firstChild);\r\n\t\t$(\"#molecule\").show();\r\n\t\t$(\"#molecule\")[0].selectedIndex = 0; \t// make the 1st option is current\r\n\t}\r\n}\r\n\r\nfunction glviewsize(e){\r\n\tconsole.log(e)\r\n\tGL.setSize(e.centerW, e.centerH);\r\n\tGL.setStatsPosition(e.north, e.west);\r\n}\r\n\r\ndocument.getElementById('file').addEventListener('change', handleFileSelect, false);\r\ndocument.getElementById('model_select').addEventListener('change', change_display_model);\r\ndocument.getElementById(\"demo1\").addEventListener('click', load_demo_molecule);\r\ndocument.getElementById('molecule').addEventListener('change', change_display_model);\r\n\r\n"]}